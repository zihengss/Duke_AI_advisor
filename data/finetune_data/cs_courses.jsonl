{"question": "What are the prerequisites for enrolling in COMPSCI 333?", "answer": "The prerequisites for enrolling in COMPSCI 333 are Computer Science 201 and either Computer Science 230 or Computer Science 232.", "raw_info": "COMPSCI  333\nDesign and implementation of modern algorithms. Stresses application and project based development of algorithmic techniques. Emphasis on algorithmic ideas that have had substantial impact in the real world, including approximation, randomization, hashing, streaming, spectral techniques, optimization, and search. Project-driven: Several homework assignments as well as a larger student-driven course project researching, designing, and implementing algorithms for a substantive problem with real world applications. Prerequisite: Computer Science 201 and and Computer Science 230 or equivalent.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What is the focus of COMPSCI 333 under the guidance of the professor?", "answer": "The focus of COMPSCI 333 is on the design and implementation of modern algorithms, with an emphasis on project-based development and algorithms that have significant real-world impact.", "raw_info": "COMPSCI  333\nDesign and implementation of modern algorithms. Stresses application and project based development of algorithmic techniques. Emphasis on algorithmic ideas that have had substantial impact in the real world, including approximation, randomization, hashing, streaming, spectral techniques, optimization, and search. Project-driven: Several homework assignments as well as a larger student-driven course project researching, designing, and implementing algorithms for a substantive problem with real world applications. Prerequisite: Computer Science 201 and and Computer Science 230 or equivalent.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What type of assignments and projects can I expect in COMPSCI 333?", "answer": "In COMPSCI 333, you can expect several homework assignments and a larger student-driven course project focusing on researching, designing, and implementing algorithms for a problem with real-world applications.", "raw_info": "COMPSCI  333\nDesign and implementation of modern algorithms. Stresses application and project based development of algorithmic techniques. Emphasis on algorithmic ideas that have had substantial impact in the real world, including approximation, randomization, hashing, streaming, spectral techniques, optimization, and search. Project-driven: Several homework assignments as well as a larger student-driven course project researching, designing, and implementing algorithms for a substantive problem with real world applications. Prerequisite: Computer Science 201 and and Computer Science 230 or equivalent.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What algorithmic techniques are emphasized in COMPSCI 333?", "answer": "COMPSCI 333 emphasizes algorithmic techniques such as approximation, randomization, hashing, streaming, spectral techniques, optimization, and search.", "raw_info": "COMPSCI  333\nDesign and implementation of modern algorithms. Stresses application and project based development of algorithmic techniques. Emphasis on algorithmic ideas that have had substantial impact in the real world, including approximation, randomization, hashing, streaming, spectral techniques, optimization, and search. Project-driven: Several homework assignments as well as a larger student-driven course project researching, designing, and implementing algorithms for a substantive problem with real world applications. Prerequisite: Computer Science 201 and and Computer Science 230 or equivalent.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Can I take COMPSCI 333 if I have taken only Computer Science 201?", "answer": "No, you cannot take COMPSCI 333 with only Computer Science 201. You must also have completed either Computer Science 230 or Computer Science 232.", "raw_info": "COMPSCI  333\nDesign and implementation of modern algorithms. Stresses application and project based development of algorithmic techniques. Emphasis on algorithmic ideas that have had substantial impact in the real world, including approximation, randomization, hashing, streaming, spectral techniques, optimization, and search. Project-driven: Several homework assignments as well as a larger student-driven course project researching, designing, and implementing algorithms for a substantive problem with real world applications. Prerequisite: Computer Science 201 and and Computer Science 230 or equivalent.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What prerequisites are required for enrolling in COMPSCI 565?", "answer": "The prerequisites for COMPSCI 565 are a reasonable working knowledge of probability and linear algebra. Additionally, students must have completed either Math 230, 230S, 231, or 340, and Math 216, 218, or 221, or have graduate student standing.", "raw_info": "COMPSCI  565\nIntroduce several modern optimization algorithms which are useful in statistics and machine learning problems from a computational perspective. As most statistics and machine learning problems can be formulated as optimization problems, it is important for students to have a powerful toolbox of optimization algorithms. After taking the course, students are expected to acquire reasonable working skills to applying different algorithms to solve optimization problems practically. Prerequisite: Students are expected to have reasonable working knowledge on probability and linear algebra. Taking a programming/computing in the past is helpful, but not required.\nPrerequisites\nPrerequisite: (Math 230, 230S, 231 or 340) and (Math 216, 218, or 221) or graduate student standing\n"}
{"question": "Is prior programming experience necessary for COMPSCI 565?", "answer": "No, prior programming experience is not required for COMPSCI 565. However, having previously taken a programming or computing course is helpful.", "raw_info": "COMPSCI  565\nIntroduce several modern optimization algorithms which are useful in statistics and machine learning problems from a computational perspective. As most statistics and machine learning problems can be formulated as optimization problems, it is important for students to have a powerful toolbox of optimization algorithms. After taking the course, students are expected to acquire reasonable working skills to applying different algorithms to solve optimization problems practically. Prerequisite: Students are expected to have reasonable working knowledge on probability and linear algebra. Taking a programming/computing in the past is helpful, but not required.\nPrerequisites\nPrerequisite: (Math 230, 230S, 231 or 340) and (Math 216, 218, or 221) or graduate student standing\n"}
{"question": "What will students learn about optimization algorithms in COMPSCI 565?", "answer": "Students in COMPSCI 565 will be introduced to several modern optimization algorithms useful in statistics and machine learning problems from a computational perspective.", "raw_info": "COMPSCI  565\nIntroduce several modern optimization algorithms which are useful in statistics and machine learning problems from a computational perspective. As most statistics and machine learning problems can be formulated as optimization problems, it is important for students to have a powerful toolbox of optimization algorithms. After taking the course, students are expected to acquire reasonable working skills to applying different algorithms to solve optimization problems practically. Prerequisite: Students are expected to have reasonable working knowledge on probability and linear algebra. Taking a programming/computing in the past is helpful, but not required.\nPrerequisites\nPrerequisite: (Math 230, 230S, 231 or 340) and (Math 216, 218, or 221) or graduate student standing\n"}
{"question": "Who is the intended audience for COMPSCI 565, considering the course prerequisites?", "answer": "The intended audience for COMPSCI 565 includes students with a working knowledge of probability and linear algebra, and those who have completed the required math courses or hold graduate student standing.", "raw_info": "COMPSCI  565\nIntroduce several modern optimization algorithms which are useful in statistics and machine learning problems from a computational perspective. As most statistics and machine learning problems can be formulated as optimization problems, it is important for students to have a powerful toolbox of optimization algorithms. After taking the course, students are expected to acquire reasonable working skills to applying different algorithms to solve optimization problems practically. Prerequisite: Students are expected to have reasonable working knowledge on probability and linear algebra. Taking a programming/computing in the past is helpful, but not required.\nPrerequisites\nPrerequisite: (Math 230, 230S, 231 or 340) and (Math 216, 218, or 221) or graduate student standing\n"}
{"question": "How are statistics and machine learning problems related to the content taught in COMPSCI 565?", "answer": "In COMPSCI 565, statistics and machine learning problems are taught as optimization problems, and students learn to apply different optimization algorithms to solve these problems.", "raw_info": "COMPSCI  565\nIntroduce several modern optimization algorithms which are useful in statistics and machine learning problems from a computational perspective. As most statistics and machine learning problems can be formulated as optimization problems, it is important for students to have a powerful toolbox of optimization algorithms. After taking the course, students are expected to acquire reasonable working skills to applying different algorithms to solve optimization problems practically. Prerequisite: Students are expected to have reasonable working knowledge on probability and linear algebra. Taking a programming/computing in the past is helpful, but not required.\nPrerequisites\nPrerequisite: (Math 230, 230S, 231 or 340) and (Math 216, 218, or 221) or graduate student standing\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 634?", "answer": "The prerequisite for enrolling in COMPSCI 634 is Computer Science 532 or an equivalent course.", "raw_info": "COMPSCI  634\nModels of computation and lower-bound techniques; storing and manipulating orthogonal objects; orthogonal and simplex range searching, convex hulls, planar point location, proximity problems, arrangements, linear programming and parametric search technique, probabilistic and incremental algorithms. Prerequisite: Computer Science 532 or equivalent.\n"}
{"question": "Which professor is teaching COMPSCI 634?", "answer": "The text does not specify which professor is teaching COMPSCI 634.", "raw_info": "COMPSCI  634\nModels of computation and lower-bound techniques; storing and manipulating orthogonal objects; orthogonal and simplex range searching, convex hulls, planar point location, proximity problems, arrangements, linear programming and parametric search technique, probabilistic and incremental algorithms. Prerequisite: Computer Science 532 or equivalent.\n"}
{"question": "Does COMPSCI 634 cover probabilistic and incremental algorithms?", "answer": "Yes, COMPSCI 634 covers probabilistic and incremental algorithms.", "raw_info": "COMPSCI  634\nModels of computation and lower-bound techniques; storing and manipulating orthogonal objects; orthogonal and simplex range searching, convex hulls, planar point location, proximity problems, arrangements, linear programming and parametric search technique, probabilistic and incremental algorithms. Prerequisite: Computer Science 532 or equivalent.\n"}
{"question": "Is linear programming included in the COMPSCI 634 curriculum?", "answer": "Yes, linear programming is included in the curriculum of COMPSCI 634.", "raw_info": "COMPSCI  634\nModels of computation and lower-bound techniques; storing and manipulating orthogonal objects; orthogonal and simplex range searching, convex hulls, planar point location, proximity problems, arrangements, linear programming and parametric search technique, probabilistic and incremental algorithms. Prerequisite: Computer Science 532 or equivalent.\n"}
{"question": "For COMPSCI 634, are concepts like convex hulls and proximity problems part of the course content?", "answer": "Yes, concepts like convex hulls and proximity problems are part of the course content for COMPSCI 634.", "raw_info": "COMPSCI  634\nModels of computation and lower-bound techniques; storing and manipulating orthogonal objects; orthogonal and simplex range searching, convex hulls, planar point location, proximity problems, arrangements, linear programming and parametric search technique, probabilistic and incremental algorithms. Prerequisite: Computer Science 532 or equivalent.\n"}
{"question": "What is the main focus of COMPSCI 762?", "answer": "The main focus of COMPSCI 762 is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning, especially for their research in methodology and theory development.", "raw_info": "COMPSCI  762\nThe goal of this course is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning for their research, especially in their methodology and theory development. Discussions cover theory, methodology, and applications. Selected topics in this course include the basics of high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, applications in genomics, and biomedical informatics. Knowledge in probability, inference, and basic algebra are required.\n"}
{"question": "Which prerequisite knowledge is required for enrolling in COMPSCI 762?", "answer": "Knowledge in probability, inference, and basic algebra is required for enrolling in COMPSCI 762.", "raw_info": "COMPSCI  762\nThe goal of this course is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning for their research, especially in their methodology and theory development. Discussions cover theory, methodology, and applications. Selected topics in this course include the basics of high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, applications in genomics, and biomedical informatics. Knowledge in probability, inference, and basic algebra are required.\n"}
{"question": "What are some of the topics covered in COMPSCI 762?", "answer": "Some of the topics covered in COMPSCI 762 include high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, and applications in genomics and biomedical informatics.", "raw_info": "COMPSCI  762\nThe goal of this course is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning for their research, especially in their methodology and theory development. Discussions cover theory, methodology, and applications. Selected topics in this course include the basics of high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, applications in genomics, and biomedical informatics. Knowledge in probability, inference, and basic algebra are required.\n"}
{"question": "Can undergraduate students enroll in COMPSCI 762?", "answer": "COMPSCI 762 is aimed at motivated Ph.D. and master's students, so it is not explicitly intended for undergraduate students.", "raw_info": "COMPSCI  762\nThe goal of this course is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning for their research, especially in their methodology and theory development. Discussions cover theory, methodology, and applications. Selected topics in this course include the basics of high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, applications in genomics, and biomedical informatics. Knowledge in probability, inference, and basic algebra are required.\n"}
{"question": "Does COMPSCI 762 include discussions on nonconvex optimization?", "answer": "Yes, nonconvex optimization is one of the selected topics discussed in COMPSCI 762.", "raw_info": "COMPSCI  762\nThe goal of this course is to provide motivated Ph.D. and master's students with background knowledge of high-dimensional statistics/machine learning for their research, especially in their methodology and theory development. Discussions cover theory, methodology, and applications. Selected topics in this course include the basics of high-dimensional statistics, matrix and tensor modeling, concentration inequality, nonconvex optimization, applications in genomics, and biomedical informatics. Knowledge in probability, inference, and basic algebra are required.\n"}
{"question": "What is the course number for the seminar version of Computer Science 190?", "answer": "The course number for the seminar version is COMPSCI 190S.", "raw_info": "COMPSCI  190S\nSeminar version of Computer Science 190, topics from various areas of computer science, changing each year.\n"}
{"question": "How often do the topics change in COMPSCI 190S?", "answer": "The topics in COMPSCI 190S change each year.", "raw_info": "COMPSCI  190S\nSeminar version of Computer Science 190, topics from various areas of computer science, changing each year.\n"}
{"question": "Who might be interested in taking COMPSCI 190S?", "answer": "Students interested in exploring various areas of computer science through changing yearly topics might be interested in taking COMPSCI 190S.", "raw_info": "COMPSCI  190S\nSeminar version of Computer Science 190, topics from various areas of computer science, changing each year.\n"}
{"question": "Is COMPSCI 190S different from Computer Science 190, and how?", "answer": "Yes, COMPSCI 190S is a seminar version of Computer Science 190, focusing on different computer science topics annually.", "raw_info": "COMPSCI  190S\nSeminar version of Computer Science 190, topics from various areas of computer science, changing each year.\n"}
{"question": "What is the course number for the mentioned computer science class?", "answer": "The course number is COMPSCI 190.", "raw_info": "COMPSCI  190\n"}
{"question": "Who might be the professor teaching COMPSCI 190?", "answer": "The text does not provide the professor's name for COMPSCI 190.", "raw_info": "COMPSCI  190\n"}
{"question": "Is there any specific information about the curriculum or topics covered in COMPSCI 190?", "answer": "The text does not provide details about the curriculum or topics covered in COMPSCI 190.", "raw_info": "COMPSCI  190\n"}
{"question": "Can I find the textbook information for COMPSCI 190 in the provided text?", "answer": "No, the provided text does not include textbook information for COMPSCI 190.", "raw_info": "COMPSCI  190\n"}
{"question": "Are there any prerequisites mentioned for enrolling in COMPSCI 190?", "answer": "The text does not mention any prerequisites for COMPSCI 190.", "raw_info": "COMPSCI  190\n"}
{"question": "What is the course number for the class focused on developing software in teams for real-world clients?", "answer": "The course number is COMPSCI 408.", "raw_info": "COMPSCI  408\nDevelopment of software in teams that benefits a real-world client in the client's area of expertise. Meet client demands and needs including technology management skills such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and roll-out. Create significant software product, understand software development cycle at scale, create written work to accompany software. Recommended prerequisite: Computer Science 308 or similar team programming experience.\n"}
{"question": "Who is the intended audience for COMPSCI 408, and what prerequisite experience is recommended?", "answer": "The intended audience is students with prior team programming experience, recommended through Computer Science 308 or similar.", "raw_info": "COMPSCI  408\nDevelopment of software in teams that benefits a real-world client in the client's area of expertise. Meet client demands and needs including technology management skills such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and roll-out. Create significant software product, understand software development cycle at scale, create written work to accompany software. Recommended prerequisite: Computer Science 308 or similar team programming experience.\n"}
{"question": "What kind of skills and topics will be covered in COMPSCI 408?", "answer": "COMPSCI 408 will cover skills and topics such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and software roll-out.", "raw_info": "COMPSCI  408\nDevelopment of software in teams that benefits a real-world client in the client's area of expertise. Meet client demands and needs including technology management skills such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and roll-out. Create significant software product, understand software development cycle at scale, create written work to accompany software. Recommended prerequisite: Computer Science 308 or similar team programming experience.\n"}
{"question": "In COMPSCI 408, what type of product are students expected to create by the end of the course?", "answer": "Students in COMPSCI 408 are expected to create a significant software product by the end of the course.", "raw_info": "COMPSCI  408\nDevelopment of software in teams that benefits a real-world client in the client's area of expertise. Meet client demands and needs including technology management skills such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and roll-out. Create significant software product, understand software development cycle at scale, create written work to accompany software. Recommended prerequisite: Computer Science 308 or similar team programming experience.\n"}
{"question": "What component of learning accompanies the software development in COMPSCI 408?", "answer": "Alongside software development, students in COMPSCI 408 will provide written work to accompany the software.", "raw_info": "COMPSCI  408\nDevelopment of software in teams that benefits a real-world client in the client's area of expertise. Meet client demands and needs including technology management skills such as feasibility assessment, project planning, project implementation, usability testing, documentation, marketing, and roll-out. Create significant software product, understand software development cycle at scale, create written work to accompany software. Recommended prerequisite: Computer Science 308 or similar team programming experience.\n"}
{"question": "What are the prerequisites for COMPSCI 350L?", "answer": "The prerequisites for COMPSCI 350L are Electrical and Computer Engineering 250D or Computer Science 250.", "raw_info": "COMPSCI  350L\nDesign and implementation of combinational and sequential digital systems with special attention to digital computers. The use of computer-aided design tools, hardware description languages, and programmable logic chips to facilitate larger and higher performance designs will be stressed. Laboratory exercises and group design projects will reinforce the various design techniques discussed in class. Prerequisite: Electrical and Computer Engineering 250D or Computer Science 250.\nPrerequisites\nPrereq: ECE 250D or COMPSCI 250D\n"}
{"question": "What topics are emphasized in COMPSCI 350L with respect to digital systems?", "answer": "COMPSCI 350L emphasizes the design and implementation of combinational and sequential digital systems, especially relating to digital computers.", "raw_info": "COMPSCI  350L\nDesign and implementation of combinational and sequential digital systems with special attention to digital computers. The use of computer-aided design tools, hardware description languages, and programmable logic chips to facilitate larger and higher performance designs will be stressed. Laboratory exercises and group design projects will reinforce the various design techniques discussed in class. Prerequisite: Electrical and Computer Engineering 250D or Computer Science 250.\nPrerequisites\nPrereq: ECE 250D or COMPSCI 250D\n"}
{"question": "In COMPSCI 350L, what tools and techniques are highlighted to enhance design performance?", "answer": "In COMPSCI 350L, the use of computer-aided design tools, hardware description languages, and programmable logic chips is stressed to facilitate larger and higher performance designs.", "raw_info": "COMPSCI  350L\nDesign and implementation of combinational and sequential digital systems with special attention to digital computers. The use of computer-aided design tools, hardware description languages, and programmable logic chips to facilitate larger and higher performance designs will be stressed. Laboratory exercises and group design projects will reinforce the various design techniques discussed in class. Prerequisite: Electrical and Computer Engineering 250D or Computer Science 250.\nPrerequisites\nPrereq: ECE 250D or COMPSCI 250D\n"}
{"question": "What components of the COMPSCI 350L course help reinforce design techniques discussed in class?", "answer": "Laboratory exercises and group design projects in COMPSCI 350L help reinforce the design techniques discussed in class.", "raw_info": "COMPSCI  350L\nDesign and implementation of combinational and sequential digital systems with special attention to digital computers. The use of computer-aided design tools, hardware description languages, and programmable logic chips to facilitate larger and higher performance designs will be stressed. Laboratory exercises and group design projects will reinforce the various design techniques discussed in class. Prerequisite: Electrical and Computer Engineering 250D or Computer Science 250.\nPrerequisites\nPrereq: ECE 250D or COMPSCI 250D\n"}
{"question": "What topics are covered in COMPSCI 570?", "answer": "COMPSCI 570 covers the design and analysis of algorithms and representations for artificial intelligence problems including search, planning, decision theory, logic, Bayesian networks, robotics, and machine learning.", "raw_info": "COMPSCI  570\nDesign and analysis of algorithms and representations for artificial intelligence problems. Formal analysis of techniques used for search, planning, decision theory, logic, Bayesian networks, robotics, and machine learning. Prerequisite: Computer Science 201 and Computer Science 330.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 570?", "answer": "The prerequisites for enrolling in COMPSCI 570 are Computer Science 201 and Computer Science 330.", "raw_info": "COMPSCI  570\nDesign and analysis of algorithms and representations for artificial intelligence problems. Formal analysis of techniques used for search, planning, decision theory, logic, Bayesian networks, robotics, and machine learning. Prerequisite: Computer Science 201 and Computer Science 330.\n"}
{"question": "Does COMPSCI 570 involve the study of Bayesian networks?", "answer": "Yes, COMPSCI 570 includes the formal analysis of techniques used for Bayesian networks.", "raw_info": "COMPSCI  570\nDesign and analysis of algorithms and representations for artificial intelligence problems. Formal analysis of techniques used for search, planning, decision theory, logic, Bayesian networks, robotics, and machine learning. Prerequisite: Computer Science 201 and Computer Science 330.\n"}
{"question": "If I want to learn about robotics in the context of artificial intelligence, should I take COMPSCI 570?", "answer": "Yes, COMPSCI 570 covers topics related to robotics as part of the design and analysis of algorithms for artificial intelligence problems.", "raw_info": "COMPSCI  570\nDesign and analysis of algorithms and representations for artificial intelligence problems. Formal analysis of techniques used for search, planning, decision theory, logic, Bayesian networks, robotics, and machine learning. Prerequisite: Computer Science 201 and Computer Science 330.\n"}
{"question": "What is COMPSCI 249 about?", "answer": "COMPSCI 249 is a project-based course that focuses on computer science education, issues on computer science curricula, and educational techniques in general.", "raw_info": "COMPSCI  249\nA project-based course involving computer science education, issues on computer science curricula, and educational techniques in general. Students should have previous or current experience in teaching or tutoring Computer Science. May be repeated. Instructor consent is required.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Do I need any prior experience to take COMPSCI 249?", "answer": "Yes, students should have previous or current experience in teaching or tutoring Computer Science to enroll in COMPSCI 249.", "raw_info": "COMPSCI  249\nA project-based course involving computer science education, issues on computer science curricula, and educational techniques in general. Students should have previous or current experience in teaching or tutoring Computer Science. May be repeated. Instructor consent is required.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Can COMPSCI 249 be taken more than once?", "answer": "Yes, COMPSCI 249 may be repeated.", "raw_info": "COMPSCI  249\nA project-based course involving computer science education, issues on computer science curricula, and educational techniques in general. Students should have previous or current experience in teaching or tutoring Computer Science. May be repeated. Instructor consent is required.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Is instructor consent required to enroll in COMPSCI 249?", "answer": "Yes, instructor consent is required to enroll in COMPSCI 249.", "raw_info": "COMPSCI  249\nA project-based course involving computer science education, issues on computer science curricula, and educational techniques in general. Students should have previous or current experience in teaching or tutoring Computer Science. May be repeated. Instructor consent is required.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What consent is required for enrollment in COMPSCI 249?", "answer": "Instructor consent is required for enrollment in COMPSCI 249.", "raw_info": "COMPSCI  249\nA project-based course involving computer science education, issues on computer science curricula, and educational techniques in general. Students should have previous or current experience in teaching or tutoring Computer Science. May be repeated. Instructor consent is required.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 584?", "answer": "The prerequisites for enrolling in COMPSCI 584 are Computer Science 230 (Discrete Math), Computer Science 210D (Computer Systems) or Computer Science 250 (Computer Architecture). While Computer Science 330 (Algorithms) is helpful, it is not required.", "raw_info": "COMPSCI  584\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: CompSci 230/Discrete Math; CompSci 210 Computer Systems or CompSci 250 Computer Architecture. CompSci 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: For Undergraduates: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "What key infrastructure concept is highlighted in COMPSCI 584 as a means to decentralize trust?", "answer": "In COMPSCI 584, blockchains are highlighted as a key infrastructure concept for decentralizing trust from a single entity to multiple different entities.", "raw_info": "COMPSCI  584\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: CompSci 230/Discrete Math; CompSci 210 Computer Systems or CompSci 250 Computer Architecture. CompSci 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: For Undergraduates: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "How is blockchain structured according to COMPSCI 584?", "answer": "According to COMPSCI 584, blockchain is structured as a stack of three key layers: 1) Consensus, which involves agreement among parties, 2) Scalability, and 3) the Application layer.", "raw_info": "COMPSCI  584\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: CompSci 230/Discrete Math; CompSci 210 Computer Systems or CompSci 250 Computer Architecture. CompSci 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: For Undergraduates: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "Is COMPSCI 330 a required prerequisite for COMPSCI 584?", "answer": "No, COMPSCI 330 Algorithms is not a required prerequisite for COMPSCI 584; however, it is helpful.", "raw_info": "COMPSCI  584\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: CompSci 230/Discrete Math; CompSci 210 Computer Systems or CompSci 250 Computer Architecture. CompSci 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: For Undergraduates: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "In what fields does COMPSCI 584 suggest blockchain technology is being considered for use?", "answer": "COMPSCI 584 suggests that blockchain technology is being considered in fields such as finance, the supply chain industry, and the design of central bank digital currencies to decentralize trust.", "raw_info": "COMPSCI  584\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: CompSci 230/Discrete Math; CompSci 210 Computer Systems or CompSci 250 Computer Architecture. CompSci 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: For Undergraduates: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "What are the prerequisites for COMPSCI 330?", "answer": "The prerequisites for COMPSCI 330 are Computer Science 201 and (Computer Science 230 or Computer Science 232).", "raw_info": "COMPSCI  330\nDesign and analysis of efficient algorithms including sorting, searching, dynamic programming, graph algorithms, fast multiplication, and others; nondeterministic algorithms and computationally hard problems. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Which algorithms are covered in COMPSCI 330?", "answer": "COMPSCI 330 covers the design and analysis of efficient algorithms, including sorting, searching, dynamic programming, graph algorithms, fast multiplication, nondeterministic algorithms, and computationally hard problems.", "raw_info": "COMPSCI  330\nDesign and analysis of efficient algorithms including sorting, searching, dynamic programming, graph algorithms, fast multiplication, and others; nondeterministic algorithms and computationally hard problems. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Can I take COMPSCI 330 if I have only completed CompSci 201?", "answer": "No, you must have completed CompSci 201 and either CompSci 230 or CompSci 232 to take COMPSCI 330.", "raw_info": "COMPSCI  330\nDesign and analysis of efficient algorithms including sorting, searching, dynamic programming, graph algorithms, fast multiplication, and others; nondeterministic algorithms and computationally hard problems. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Does the course COMPSCI 330 involve learning about computationally hard problems?", "answer": "Yes, COMPSCI 330 includes the study of computationally hard problems as part of its curriculum.", "raw_info": "COMPSCI  330\nDesign and analysis of efficient algorithms including sorting, searching, dynamic programming, graph algorithms, fast multiplication, and others; nondeterministic algorithms and computationally hard problems. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Is it necessary to complete CompSci 232 before enrolling in COMPSCI 330?", "answer": "No, it is not necessary to complete CompSci 232 before enrolling in COMPSCI 330 if you have completed CompSci 230 instead, as the prerequisite is either CompSci 230 or CompSci 232.", "raw_info": "COMPSCI  330\nDesign and analysis of efficient algorithms including sorting, searching, dynamic programming, graph algorithms, fast multiplication, and others; nondeterministic algorithms and computationally hard problems. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 342?", "answer": "The prerequisite for enrolling in COMPSCI 342 is completing Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  342\nThe development of technical and social standards governing the Internet and information technology in general. The role of software as it relates to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards. Written analysis of issues from a technical perspective with an emphasis on the role of software and on how standards relate to social and ethical issues. Current events as a driver for writing in traditional and online formats related to technology and policy. Open only to students with declared Computer Science major. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Who can enroll in COMPSCI 342?", "answer": "COMPSCI 342 is only open to students who have declared a Computer Science major.", "raw_info": "COMPSCI  342\nThe development of technical and social standards governing the Internet and information technology in general. The role of software as it relates to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards. Written analysis of issues from a technical perspective with an emphasis on the role of software and on how standards relate to social and ethical issues. Current events as a driver for writing in traditional and online formats related to technology and policy. Open only to students with declared Computer Science major. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What role does software play in COMPSCI 342 as described by the course objectives?", "answer": "In COMPSCI 342, software is discussed in relation to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards.", "raw_info": "COMPSCI  342\nThe development of technical and social standards governing the Internet and information technology in general. The role of software as it relates to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards. Written analysis of issues from a technical perspective with an emphasis on the role of software and on how standards relate to social and ethical issues. Current events as a driver for writing in traditional and online formats related to technology and policy. Open only to students with declared Computer Science major. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "How does COMPSCI 342 incorporate current events into its curriculum?", "answer": "COMPSCI 342 uses current events as a driver for writing assignments in both traditional and online formats related to technology and policy.", "raw_info": "COMPSCI  342\nThe development of technical and social standards governing the Internet and information technology in general. The role of software as it relates to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards. Written analysis of issues from a technical perspective with an emphasis on the role of software and on how standards relate to social and ethical issues. Current events as a driver for writing in traditional and online formats related to technology and policy. Open only to students with declared Computer Science major. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What emphasis does COMPSCI 342 place on the written analysis of issues?", "answer": "COMPSCI 342 emphasizes the written analysis of issues from a technical perspective, focusing on the role of software and how standards relate to social and ethical issues.", "raw_info": "COMPSCI  342\nThe development of technical and social standards governing the Internet and information technology in general. The role of software as it relates to law, patents, intellectual property, and IETF (Internet Engineering Task Force) standards. Written analysis of issues from a technical perspective with an emphasis on the role of software and on how standards relate to social and ethical issues. Current events as a driver for writing in traditional and online formats related to technology and policy. Open only to students with declared Computer Science major. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 356?", "answer": "The prerequisites for enrolling in COMPSCI 356 are Computer Science 210D or Computer Science/Electrical & Computer Engineering 250D.", "raw_info": "COMPSCI  356\nIntroduces students to the fundamentals of computer networks. Focus on layered architecture of the network protocol stack. Case studies drawn from the Internet, combined with practical programming exercises. Concepts include the Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, and wireless/mobile networking and their applications such as how to achieve reliable/secure communications over channels, how to find a good path through a network, how to share network resources among competing entities, how to find an object in the network, and how to build network applications. Prerequisite: ECE 250D, CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 210D or Computer Science/Electrical & Computer Egr 250D\n"}
{"question": "Can you list some of the key concepts covered in COMPSCI 356?", "answer": "Key concepts covered in COMPSCI 356 include Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, wireless/mobile networking, and their applications.", "raw_info": "COMPSCI  356\nIntroduces students to the fundamentals of computer networks. Focus on layered architecture of the network protocol stack. Case studies drawn from the Internet, combined with practical programming exercises. Concepts include the Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, and wireless/mobile networking and their applications such as how to achieve reliable/secure communications over channels, how to find a good path through a network, how to share network resources among competing entities, how to find an object in the network, and how to build network applications. Prerequisite: ECE 250D, CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 210D or Computer Science/Electrical & Computer Egr 250D\n"}
{"question": "What is the focus of the lectures in COMPSCI 356?", "answer": "The focus of the lectures in COMPSCI 356 is on the layered architecture of the network protocol stack, with case studies drawn from the Internet and practical programming exercises.", "raw_info": "COMPSCI  356\nIntroduces students to the fundamentals of computer networks. Focus on layered architecture of the network protocol stack. Case studies drawn from the Internet, combined with practical programming exercises. Concepts include the Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, and wireless/mobile networking and their applications such as how to achieve reliable/secure communications over channels, how to find a good path through a network, how to share network resources among competing entities, how to find an object in the network, and how to build network applications. Prerequisite: ECE 250D, CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 210D or Computer Science/Electrical & Computer Egr 250D\n"}
{"question": "Does COMPSCI 356 cover any practical applications, and if so, what are some examples?", "answer": "Yes, COMPSCI 356 covers practical applications such as achieving reliable/secure communications over channels, finding a good path through a network, sharing network resources among competing entities, finding an object in the network, and building network applications.", "raw_info": "COMPSCI  356\nIntroduces students to the fundamentals of computer networks. Focus on layered architecture of the network protocol stack. Case studies drawn from the Internet, combined with practical programming exercises. Concepts include the Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, and wireless/mobile networking and their applications such as how to achieve reliable/secure communications over channels, how to find a good path through a network, how to share network resources among competing entities, how to find an object in the network, and how to build network applications. Prerequisite: ECE 250D, CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 210D or Computer Science/Electrical & Computer Egr 250D\n"}
{"question": "Who can enroll in COMPSCI 356 based on their prior coursework?", "answer": "Students who have completed Computer Science 210D or Computer Science/Electrical & Computer Engineering 250D can enroll in COMPSCI 356.", "raw_info": "COMPSCI  356\nIntroduces students to the fundamentals of computer networks. Focus on layered architecture of the network protocol stack. Case studies drawn from the Internet, combined with practical programming exercises. Concepts include the Internet architecture, HTTP, DNS, P2P, Sockets, TCP/IP, BGP, routing protocols, and wireless/mobile networking and their applications such as how to achieve reliable/secure communications over channels, how to find a good path through a network, how to share network resources among competing entities, how to find an object in the network, and how to build network applications. Prerequisite: ECE 250D, CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 210D or Computer Science/Electrical & Computer Egr 250D\n"}
{"question": "What is the course title for COMPSCI 290S?", "answer": "The course title for COMPSCI 290S is a seminar version of Computer Science 290.", "raw_info": "COMPSCI  290S\nSeminar version of Computer Science 290.\n"}
{"question": "Is COMPSCI 290S a seminar course or a lecture course?", "answer": "COMPSCI 290S is a seminar course.", "raw_info": "COMPSCI  290S\nSeminar version of Computer Science 290.\n"}
{"question": "When looking for a seminar in the computer science department, which course number should I consider?", "answer": "You should consider COMPSCI 290S for a seminar in the computer science department.", "raw_info": "COMPSCI  290S\nSeminar version of Computer Science 290.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 390?", "answer": "The prerequisite for enrolling in COMPSCI 390 is Computer Science 201.", "raw_info": "COMPSCI  390\nTopics from various areas of computer science, changing each year. Includes research intensive work exposing the student to computer science research methodology and resulting in a major document or project. Prerequisite: Computer Science 201.\n"}
{"question": "Does COMPSCI 390 include a research component?", "answer": "Yes, COMPSCI 390 includes research intensive work that exposes the student to computer science research methodology.", "raw_info": "COMPSCI  390\nTopics from various areas of computer science, changing each year. Includes research intensive work exposing the student to computer science research methodology and resulting in a major document or project. Prerequisite: Computer Science 201.\n"}
{"question": "Will I need to complete a major document or project in COMPSCI 390?", "answer": "Yes, completing a major document or project is part of COMPSCI 390.", "raw_info": "COMPSCI  390\nTopics from various areas of computer science, changing each year. Includes research intensive work exposing the student to computer science research methodology and resulting in a major document or project. Prerequisite: Computer Science 201.\n"}
{"question": "How often do the topics in COMPSCI 390 change?", "answer": "The topics in COMPSCI 390 change each year.", "raw_info": "COMPSCI  390\nTopics from various areas of computer science, changing each year. Includes research intensive work exposing the student to computer science research methodology and resulting in a major document or project. Prerequisite: Computer Science 201.\n"}
{"question": "Is COMPSCI 390 designed to expose students to computer science research?", "answer": "Yes, COMPSCI 390 is designed to expose students to computer science research methodology.", "raw_info": "COMPSCI  390\nTopics from various areas of computer science, changing each year. Includes research intensive work exposing the student to computer science research methodology and resulting in a major document or project. Prerequisite: Computer Science 201.\n"}
{"question": "What is the course number for the class that introduces topology from a computational view-point with applications?", "answer": "The course number is COMPSCI 434.", "raw_info": "COMPSCI  434\nIntroduction to topology from a computational view-point, with a focus on applications. Themes include: basic notions of point-set topology, persistent homology, finding multi-scale topological structure in point cloud data. Algorithmic considerations emphasized. Prerequisite: Mathematics 221 or equivalent.\n"}
{"question": "Who can enroll in COMPSCI 434, and are there any prerequisites?", "answer": "To enroll in COMPSCI 434, students need to have completed Mathematics 221 or an equivalent course.", "raw_info": "COMPSCI  434\nIntroduction to topology from a computational view-point, with a focus on applications. Themes include: basic notions of point-set topology, persistent homology, finding multi-scale topological structure in point cloud data. Algorithmic considerations emphasized. Prerequisite: Mathematics 221 or equivalent.\n"}
{"question": "What are some of the main themes covered in COMPSCI 434?", "answer": "COMPSCI 434 covers basic notions of point-set topology, persistent homology, and finding multi-scale topological structures in point cloud data.", "raw_info": "COMPSCI  434\nIntroduction to topology from a computational view-point, with a focus on applications. Themes include: basic notions of point-set topology, persistent homology, finding multi-scale topological structure in point cloud data. Algorithmic considerations emphasized. Prerequisite: Mathematics 221 or equivalent.\n"}
{"question": "Does COMPSCI 434 focus on a particular aspect of computational topology?", "answer": "Yes, COMPSCI 434 emphasizes algorithmic considerations in computational topology.", "raw_info": "COMPSCI  434\nIntroduction to topology from a computational view-point, with a focus on applications. Themes include: basic notions of point-set topology, persistent homology, finding multi-scale topological structure in point cloud data. Algorithmic considerations emphasized. Prerequisite: Mathematics 221 or equivalent.\n"}
{"question": "Which mathematical course is required before taking COMPSCI 434?", "answer": "Mathematics 221 or its equivalent is required before taking COMPSCI 434.", "raw_info": "COMPSCI  434\nIntroduction to topology from a computational view-point, with a focus on applications. Themes include: basic notions of point-set topology, persistent homology, finding multi-scale topological structure in point cloud data. Algorithmic considerations emphasized. Prerequisite: Mathematics 221 or equivalent.\n"}
{"question": "What is the focus of COMPSCI 92L?", "answer": "The focus of COMPSCI 92L is the study of standards, software, policy, and the impact of computing and the Internet on science and society. It involves the analysis and creation of software and other computational and digital artifacts to solve problems in various domains.", "raw_info": "COMPSCI   92L\nStudy of standards, software, policy, and the impact of computing and the Internet on science and society. Analysis and creation of software and other computational and digital artifacts to solve problems in many domains using different approaches, including data mining, web-based communication, algorithmic and data-driven approaches, crowd-sourcing. Use of real-world problems in understanding evolving international standards. Analysis of tradeoffs in ethical, economic, and technical areas.\n"}
{"question": "Which techniques are explored in COMPSCI 92L to solve problems across domains?", "answer": "In COMPSCI 92L, techniques such as data mining, web-based communication, algorithmic and data-driven approaches, and crowd-sourcing are explored to solve problems across different domains.", "raw_info": "COMPSCI   92L\nStudy of standards, software, policy, and the impact of computing and the Internet on science and society. Analysis and creation of software and other computational and digital artifacts to solve problems in many domains using different approaches, including data mining, web-based communication, algorithmic and data-driven approaches, crowd-sourcing. Use of real-world problems in understanding evolving international standards. Analysis of tradeoffs in ethical, economic, and technical areas.\n"}
{"question": "How does COMPSCI 92L incorporate real-world issues into its curriculum?", "answer": "COMPSCI 92L uses real-world problems to help students understand evolving international standards and analyze tradeoffs in ethical, economic, and technical areas.", "raw_info": "COMPSCI   92L\nStudy of standards, software, policy, and the impact of computing and the Internet on science and society. Analysis and creation of software and other computational and digital artifacts to solve problems in many domains using different approaches, including data mining, web-based communication, algorithmic and data-driven approaches, crowd-sourcing. Use of real-world problems in understanding evolving international standards. Analysis of tradeoffs in ethical, economic, and technical areas.\n"}
{"question": "Does COMPSCI 92L offer any analysis of economic tradeoffs?", "answer": "Yes, COMPSCI 92L includes the analysis of tradeoffs in ethical, economic, and technical areas as part of its curriculum.", "raw_info": "COMPSCI   92L\nStudy of standards, software, policy, and the impact of computing and the Internet on science and society. Analysis and creation of software and other computational and digital artifacts to solve problems in many domains using different approaches, including data mining, web-based communication, algorithmic and data-driven approaches, crowd-sourcing. Use of real-world problems in understanding evolving international standards. Analysis of tradeoffs in ethical, economic, and technical areas.\n"}
{"question": "What types of artifacts do students analyze and create in COMPSCI 92L?", "answer": "Students in COMPSCI 92L analyze and create software and other computational and digital artifacts to address various problems using different approaches.", "raw_info": "COMPSCI   92L\nStudy of standards, software, policy, and the impact of computing and the Internet on science and society. Analysis and creation of software and other computational and digital artifacts to solve problems in many domains using different approaches, including data mining, web-based communication, algorithmic and data-driven approaches, crowd-sourcing. Use of real-world problems in understanding evolving international standards. Analysis of tradeoffs in ethical, economic, and technical areas.\n"}
{"question": "What topics are covered in COMPSCI 390A?", "answer": "The topics in COMPSCI 390A differ by section, so specific topics are not listed.", "raw_info": "COMPSCI  390A\nTopics differ by section.\n"}
{"question": "How can I find out which topics will be covered in my section of COMPSCI 390A?", "answer": "You should check the syllabus or contact the professor teaching your section to learn about the specific topics covered in COMPSCI 390A.", "raw_info": "COMPSCI  390A\nTopics differ by section.\n"}
{"question": "Is COMPSCI 390A a specific course on a fixed topic?", "answer": "No, COMPSCI 390A covers various topics that differ by section.", "raw_info": "COMPSCI  390A\nTopics differ by section.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 290?", "answer": "The prerequisite for enrolling in COMPSCI 290 is Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  290\nThis course serves as an introduction to a wide range of user-centered research study design methods and data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies.\nTopics from various areas of computer science, changing each year. Prerequisite: Computer Science 201 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 290 cover fixed topics every year?", "answer": "No, the topics in COMPSCI 290 change each year.", "raw_info": "COMPSCI  290\nThis course serves as an introduction to a wide range of user-centered research study design methods and data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies.\nTopics from various areas of computer science, changing each year. Prerequisite: Computer Science 201 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is the focus of the research study methods taught in COMPSCI 290?", "answer": "The focus is on user-centered research study design methods and data analysis techniques to understand users' attitudes and behaviors towards technologies and policies.", "raw_info": "COMPSCI  290\nThis course serves as an introduction to a wide range of user-centered research study design methods and data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies.\nTopics from various areas of computer science, changing each year. Prerequisite: Computer Science 201 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Can a student without any prior computer science courses enroll directly in COMPSCI 290?", "answer": "No, a student must have completed Computer Science 201 or an equivalent course to enroll in COMPSCI 290.", "raw_info": "COMPSCI  290\nThis course serves as an introduction to a wide range of user-centered research study design methods and data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies.\nTopics from various areas of computer science, changing each year. Prerequisite: Computer Science 201 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Is COMPSCI 290 more theory-based or research-focused?", "answer": "COMPSCI 290 is research-focused, with an emphasis on user-centered study design methods and data analysis techniques.", "raw_info": "COMPSCI  290\nThis course serves as an introduction to a wide range of user-centered research study design methods and data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies.\nTopics from various areas of computer science, changing each year. Prerequisite: Computer Science 201 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What programming language is primarily used in the COMPSCI 207 course taught by Instructor Thomas?", "answer": "The primary programming language used in COMPSCI 207 is Swift.", "raw_info": "COMPSCI  207\nThis class explores the world of mobile applications development based on Apple's iOS operating system and Swift programming language. The class will work on Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices. The class covers fundamentals essential to understanding all aspects of app development from concept to deployment on the App Store. Students required to present their project proposals and deliver a fully functional mobile application as a final project. Prerequisite: Computer Science 201. Computer Science 250 preferred. Instructor Thomas\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Are there any prerequisites for enrolling in COMPSCI 207 with Instructor Thomas, and if so, what are they?", "answer": "Yes, the prerequisite for enrolling in COMPSCI 207 is Computer Science 201 or an equivalent course. Computer Science 250 is preferred.", "raw_info": "COMPSCI  207\nThis class explores the world of mobile applications development based on Apple's iOS operating system and Swift programming language. The class will work on Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices. The class covers fundamentals essential to understanding all aspects of app development from concept to deployment on the App Store. Students required to present their project proposals and deliver a fully functional mobile application as a final project. Prerequisite: Computer Science 201. Computer Science 250 preferred. Instructor Thomas\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What tools and environments will be used for developing mobile applications in COMPSCI 207 under Instructor Thomas?", "answer": "The course will use Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices.", "raw_info": "COMPSCI  207\nThis class explores the world of mobile applications development based on Apple's iOS operating system and Swift programming language. The class will work on Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices. The class covers fundamentals essential to understanding all aspects of app development from concept to deployment on the App Store. Students required to present their project proposals and deliver a fully functional mobile application as a final project. Prerequisite: Computer Science 201. Computer Science 250 preferred. Instructor Thomas\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is the final project requirement for COMPSCI 207 as taught by Instructor Thomas?", "answer": "The final project requirement for COMPSCI 207 involves presenting project proposals and delivering a fully functional mobile application.", "raw_info": "COMPSCI  207\nThis class explores the world of mobile applications development based on Apple's iOS operating system and Swift programming language. The class will work on Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices. The class covers fundamentals essential to understanding all aspects of app development from concept to deployment on the App Store. Students required to present their project proposals and deliver a fully functional mobile application as a final project. Prerequisite: Computer Science 201. Computer Science 250 preferred. Instructor Thomas\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Which operating system is the focus of mobile application development in COMPSCI 207 with Instructor Thomas?", "answer": "The focus of mobile application development in COMPSCI 207 is on Apple's iOS operating system.", "raw_info": "COMPSCI  207\nThis class explores the world of mobile applications development based on Apple's iOS operating system and Swift programming language. The class will work on Mac computers running Xcode, the integrated development environment, to develop applications for iPhone/iPad devices. The class covers fundamentals essential to understanding all aspects of app development from concept to deployment on the App Store. Students required to present their project proposals and deliver a fully functional mobile application as a final project. Prerequisite: Computer Science 201. Computer Science 250 preferred. Instructor Thomas\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Are there any prerequisites for enrolling in COMPSCI 89S?", "answer": "Yes, COMPSCI 89S is reserved for first-year students, transfer students, and students with a first-year exception.", "raw_info": "COMPSCI   89S\nTopics vary each semester offered.\nPrerequisites\nReserved for first-year students, transfer students, and students with a first-year exception\n"}
{"question": "Does the course COMPSCI 89S cover the same topics every semester?", "answer": "No, the topics in COMPSCI 89S vary each semester it is offered.", "raw_info": "COMPSCI   89S\nTopics vary each semester offered.\nPrerequisites\nReserved for first-year students, transfer students, and students with a first-year exception\n"}
{"question": "Who is eligible to take COMPSCI 89S?", "answer": "COMPSCI 89S is reserved for first-year students, transfer students, and students who have a first-year exception.", "raw_info": "COMPSCI   89S\nTopics vary each semester offered.\nPrerequisites\nReserved for first-year students, transfer students, and students with a first-year exception\n"}
{"question": "What programming language is used in COMPSCI 507D for mobile app development?", "answer": "In COMPSCI 507D, students will create mobile applications using Apple's iOS operating system and Swift programming language.", "raw_info": "COMPSCI  507D\nExplores the world of mobile applications and the business strategies of mobile software companies. Covers the fundamentals essential to understanding all aspects of the mobile app development industry; from product concept and application development to company creation and the business fundamentals necessary for creating a for-profit company. Students will create mobile applications using Apple's iOS operating system and Swift programming language. Students will also learn the necessary business topics for creating companies, funding raising and building a business based on mobile applications. Not open to students who have taken Computer Science 207.\nPrerequisites\nNot open to students who have taken COMPSCI 201\n"}
{"question": "Can students who have taken COMPSCI 207 enroll in COMPSCI 507D?", "answer": "No, COMPSCI 507D is not open to students who have taken COMPSCI 207.", "raw_info": "COMPSCI  507D\nExplores the world of mobile applications and the business strategies of mobile software companies. Covers the fundamentals essential to understanding all aspects of the mobile app development industry; from product concept and application development to company creation and the business fundamentals necessary for creating a for-profit company. Students will create mobile applications using Apple's iOS operating system and Swift programming language. Students will also learn the necessary business topics for creating companies, funding raising and building a business based on mobile applications. Not open to students who have taken Computer Science 207.\nPrerequisites\nNot open to students who have taken COMPSCI 201\n"}
{"question": "What business topics are covered in COMPSCI 507D?", "answer": "COMPSCI 507D covers business topics necessary for creating companies, raising funds, and building a business based on mobile applications.", "raw_info": "COMPSCI  507D\nExplores the world of mobile applications and the business strategies of mobile software companies. Covers the fundamentals essential to understanding all aspects of the mobile app development industry; from product concept and application development to company creation and the business fundamentals necessary for creating a for-profit company. Students will create mobile applications using Apple's iOS operating system and Swift programming language. Students will also learn the necessary business topics for creating companies, funding raising and building a business based on mobile applications. Not open to students who have taken Computer Science 207.\nPrerequisites\nNot open to students who have taken COMPSCI 201\n"}
{"question": "What operating system platform is used for application development in COMPSCI 507D?", "answer": "COMPSCI 507D uses Apple's iOS operating system for application development.", "raw_info": "COMPSCI  507D\nExplores the world of mobile applications and the business strategies of mobile software companies. Covers the fundamentals essential to understanding all aspects of the mobile app development industry; from product concept and application development to company creation and the business fundamentals necessary for creating a for-profit company. Students will create mobile applications using Apple's iOS operating system and Swift programming language. Students will also learn the necessary business topics for creating companies, funding raising and building a business based on mobile applications. Not open to students who have taken Computer Science 207.\nPrerequisites\nNot open to students who have taken COMPSCI 201\n"}
{"question": "What kind of student cannot enroll in COMPSCI 507D?", "answer": "Students who have taken COMPSCI 201 cannot enroll in COMPSCI 507D.", "raw_info": "COMPSCI  507D\nExplores the world of mobile applications and the business strategies of mobile software companies. Covers the fundamentals essential to understanding all aspects of the mobile app development industry; from product concept and application development to company creation and the business fundamentals necessary for creating a for-profit company. Students will create mobile applications using Apple's iOS operating system and Swift programming language. Students will also learn the necessary business topics for creating companies, funding raising and building a business based on mobile applications. Not open to students who have taken Computer Science 207.\nPrerequisites\nNot open to students who have taken COMPSCI 201\n"}
{"question": "What is the availability date for the course COMPSCI 290D?", "answer": "COMPSCI 290D will be available as of January 1, 2025.", "raw_info": "COMPSCI  290D\n** available as of 2025-01-01\n"}
{"question": "Can I enroll in COMPSCI 290D for the 2024 academic year?", "answer": "No, COMPSCI 290D will not be available until January 1, 2025.", "raw_info": "COMPSCI  290D\n** available as of 2025-01-01\n"}
{"question": "When should I check back for enrollment in COMPSCI 290D if I want to take it as soon as it is available?", "answer": "You should check back for enrollment around the end of 2024, as COMPSCI 290D will be available starting January 1, 2025.", "raw_info": "COMPSCI  290D\n** available as of 2025-01-01\n"}
{"question": "What is the course number for the class that provides a basic understanding of cyber technologies and threats?", "answer": "The course number is COMPSCI 255.", "raw_info": "COMPSCI  255\nPolicy and technical elements of activity in cyberspace will continue to impact and shape global society. Provide a basic understanding of fundamental of cyber technologies and threats, national and international cyber policies and frameworks, and key topical issues in cyber. Students will be required to complete a written mid-term based on lectures and readings, present short classroom briefings, and engage in class discussions. The final will be a capstone written and oral presentation on a realistic cyber scenario applying knowledge from classwork and their own research. No prior skills or knowledge is required.\n"}
{"question": "In COMPSCI 255, what are students required to complete as part of their mid-term assessment?", "answer": "Students are required to complete a written mid-term based on lectures and readings.", "raw_info": "COMPSCI  255\nPolicy and technical elements of activity in cyberspace will continue to impact and shape global society. Provide a basic understanding of fundamental of cyber technologies and threats, national and international cyber policies and frameworks, and key topical issues in cyber. Students will be required to complete a written mid-term based on lectures and readings, present short classroom briefings, and engage in class discussions. The final will be a capstone written and oral presentation on a realistic cyber scenario applying knowledge from classwork and their own research. No prior skills or knowledge is required.\n"}
{"question": "Does COMPSCI 255 require any prior skills or knowledge before enrolling?", "answer": "No, COMPSCI 255 does not require any prior skills or knowledge.", "raw_info": "COMPSCI  255\nPolicy and technical elements of activity in cyberspace will continue to impact and shape global society. Provide a basic understanding of fundamental of cyber technologies and threats, national and international cyber policies and frameworks, and key topical issues in cyber. Students will be required to complete a written mid-term based on lectures and readings, present short classroom briefings, and engage in class discussions. The final will be a capstone written and oral presentation on a realistic cyber scenario applying knowledge from classwork and their own research. No prior skills or knowledge is required.\n"}
{"question": "What type of final assessment is required in COMPSCI 255?", "answer": "The final assessment is a capstone written and oral presentation on a realistic cyber scenario.", "raw_info": "COMPSCI  255\nPolicy and technical elements of activity in cyberspace will continue to impact and shape global society. Provide a basic understanding of fundamental of cyber technologies and threats, national and international cyber policies and frameworks, and key topical issues in cyber. Students will be required to complete a written mid-term based on lectures and readings, present short classroom briefings, and engage in class discussions. The final will be a capstone written and oral presentation on a realistic cyber scenario applying knowledge from classwork and their own research. No prior skills or knowledge is required.\n"}
{"question": "Are classroom discussions a part of the learning activities in COMPSCI 255?", "answer": "Yes, engaging in class discussions is part of the activities in COMPSCI 255.", "raw_info": "COMPSCI  255\nPolicy and technical elements of activity in cyberspace will continue to impact and shape global society. Provide a basic understanding of fundamental of cyber technologies and threats, national and international cyber policies and frameworks, and key topical issues in cyber. Students will be required to complete a written mid-term based on lectures and readings, present short classroom briefings, and engage in class discussions. The final will be a capstone written and oral presentation on a realistic cyber scenario applying knowledge from classwork and their own research. No prior skills or knowledge is required.\n"}
{"question": "What is the course number for the class where topics differ by section?", "answer": "The course number is COMPSCI 290A.", "raw_info": "COMPSCI  290A\nTopics differ by section.\n"}
{"question": "Does COMPSCI 290A focus on a single topic throughout the course?", "answer": "No, the topics for COMPSCI 290A differ by section.", "raw_info": "COMPSCI  290A\nTopics differ by section.\n"}
{"question": "If I want to know the specific topics covered in COMPSCI 290A, what should I consider?", "answer": "You should check the specific section of COMPSCI 290A, as topics differ by section.", "raw_info": "COMPSCI  290A\nTopics differ by section.\n"}
{"question": "What topics are covered in COMPSCI 671D?", "answer": "COMPSCI 671D covers several standard techniques, including the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. It also covers introductory statistical learning theory.", "raw_info": "COMPSCI  671D\nThis is an introductory overview course at an advanced level. Covers standard techniques, such as the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. Covers introductory statistical learning theory. Recommended prerequisite: linear algebra, probability, analysis or equivalent.\n"}
{"question": "What are the recommended prerequisites for COMPSCI 671D?", "answer": "The recommended prerequisites for COMPSCI 671D are linear algebra, probability, analysis, or equivalent knowledge.", "raw_info": "COMPSCI  671D\nThis is an introductory overview course at an advanced level. Covers standard techniques, such as the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. Covers introductory statistical learning theory. Recommended prerequisite: linear algebra, probability, analysis or equivalent.\n"}
{"question": "Does COMPSCI 671D include instruction on neural networks?", "answer": "Yes, COMPSCI 671D includes instruction on neural networks.", "raw_info": "COMPSCI  671D\nThis is an introductory overview course at an advanced level. Covers standard techniques, such as the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. Covers introductory statistical learning theory. Recommended prerequisite: linear algebra, probability, analysis or equivalent.\n"}
{"question": "Is statistical learning theory covered in COMPSCI 671D?", "answer": "Yes, COMPSCI 671D covers introductory statistical learning theory.", "raw_info": "COMPSCI  671D\nThis is an introductory overview course at an advanced level. Covers standard techniques, such as the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. Covers introductory statistical learning theory. Recommended prerequisite: linear algebra, probability, analysis or equivalent.\n"}
{"question": "Are decision trees and random forests part of the COMPSCI 671D curriculum?", "answer": "Yes, both decision trees and random forests are part of the COMPSCI 671D curriculum.", "raw_info": "COMPSCI  671D\nThis is an introductory overview course at an advanced level. Covers standard techniques, such as the perceptron algorithm, decision trees, random forests, boosting, support vector machines and reproducing kernel Hilbert spaces, regression, K-means, Gaussian mixture models and EM, neural networks, and multi-armed bandits. Covers introductory statistical learning theory. Recommended prerequisite: linear algebra, probability, analysis or equivalent.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 474?", "answer": "The prerequisites for COMPSCI 474 are COMPSCI 671D/STA 671D/ECE 687D, STA 622/COMPSCI 579, MATH 466, STA 231/MATH 340, and either STA 470S or STA 440.", "raw_info": "COMPSCI  474\nIn this course, students enter a data science competition. They learn any skills necessary to gain insight (data sleuthing). This may include classical machine learning algorithms, time series analysis or point processes, multi-armed bandits, creating a new custom machine learning technique, handling imbalanced data, techniques for tuning parameters, any of a broad array of other techniques, or domain knowledge in another field. Students will work in teams, and during class they will have the opportunity to discuss possible stumbling blocks. Prerequisites: CS 671 (or STA 671D or ECE 687D - Theory and Algorithms for Machine Learning), STA 622 (Statistical Data Mining), Math 466 (Mathematics of Machine Learning), STA 231 (Advanced Introduction to Probability), STA 470S (Introduction to Statistical Consulting) or STA 440 (Case Studies in the Practice of Statistics)\nPrerequisites\nPrerequisite: COMPSCI 671D/STA 671D/ECE 687D and STA 622/COMPSCI 579 and MATH 466 and STA 231/MATH 340 and (STA 470S or STA 440)\n"}
{"question": "In COMPSCI 474, are students required to work individually or in teams for the data science competition?", "answer": "In COMPSCI 474, students will work in teams for the data science competition.", "raw_info": "COMPSCI  474\nIn this course, students enter a data science competition. They learn any skills necessary to gain insight (data sleuthing). This may include classical machine learning algorithms, time series analysis or point processes, multi-armed bandits, creating a new custom machine learning technique, handling imbalanced data, techniques for tuning parameters, any of a broad array of other techniques, or domain knowledge in another field. Students will work in teams, and during class they will have the opportunity to discuss possible stumbling blocks. Prerequisites: CS 671 (or STA 671D or ECE 687D - Theory and Algorithms for Machine Learning), STA 622 (Statistical Data Mining), Math 466 (Mathematics of Machine Learning), STA 231 (Advanced Introduction to Probability), STA 470S (Introduction to Statistical Consulting) or STA 440 (Case Studies in the Practice of Statistics)\nPrerequisites\nPrerequisite: COMPSCI 671D/STA 671D/ECE 687D and STA 622/COMPSCI 579 and MATH 466 and STA 231/MATH 340 and (STA 470S or STA 440)\n"}
{"question": "Does COMPSCI 474 offer opportunities during class to discuss potential challenges and stumbling blocks?", "answer": "Yes, COMPSCI 474 offers students the opportunity during class to discuss possible stumbling blocks.", "raw_info": "COMPSCI  474\nIn this course, students enter a data science competition. They learn any skills necessary to gain insight (data sleuthing). This may include classical machine learning algorithms, time series analysis or point processes, multi-armed bandits, creating a new custom machine learning technique, handling imbalanced data, techniques for tuning parameters, any of a broad array of other techniques, or domain knowledge in another field. Students will work in teams, and during class they will have the opportunity to discuss possible stumbling blocks. Prerequisites: CS 671 (or STA 671D or ECE 687D - Theory and Algorithms for Machine Learning), STA 622 (Statistical Data Mining), Math 466 (Mathematics of Machine Learning), STA 231 (Advanced Introduction to Probability), STA 470S (Introduction to Statistical Consulting) or STA 440 (Case Studies in the Practice of Statistics)\nPrerequisites\nPrerequisite: COMPSCI 671D/STA 671D/ECE 687D and STA 622/COMPSCI 579 and MATH 466 and STA 231/MATH 340 and (STA 470S or STA 440)\n"}
{"question": "Are multi-armed bandits one of the topics covered in the COMPSCI 474 course?", "answer": "Yes, multi-armed bandits are one of the techniques students might learn in the COMPSCI 474 course.", "raw_info": "COMPSCI  474\nIn this course, students enter a data science competition. They learn any skills necessary to gain insight (data sleuthing). This may include classical machine learning algorithms, time series analysis or point processes, multi-armed bandits, creating a new custom machine learning technique, handling imbalanced data, techniques for tuning parameters, any of a broad array of other techniques, or domain knowledge in another field. Students will work in teams, and during class they will have the opportunity to discuss possible stumbling blocks. Prerequisites: CS 671 (or STA 671D or ECE 687D - Theory and Algorithms for Machine Learning), STA 622 (Statistical Data Mining), Math 466 (Mathematics of Machine Learning), STA 231 (Advanced Introduction to Probability), STA 470S (Introduction to Statistical Consulting) or STA 440 (Case Studies in the Practice of Statistics)\nPrerequisites\nPrerequisite: COMPSCI 671D/STA 671D/ECE 687D and STA 622/COMPSCI 579 and MATH 466 and STA 231/MATH 340 and (STA 470S or STA 440)\n"}
{"question": "Can students from an electrical engineering background join COMPSCI 474 if they have completed ECE 687D?", "answer": "Yes, students who have completed ECE 687D as part of the prerequisites can join COMPSCI 474.", "raw_info": "COMPSCI  474\nIn this course, students enter a data science competition. They learn any skills necessary to gain insight (data sleuthing). This may include classical machine learning algorithms, time series analysis or point processes, multi-armed bandits, creating a new custom machine learning technique, handling imbalanced data, techniques for tuning parameters, any of a broad array of other techniques, or domain knowledge in another field. Students will work in teams, and during class they will have the opportunity to discuss possible stumbling blocks. Prerequisites: CS 671 (or STA 671D or ECE 687D - Theory and Algorithms for Machine Learning), STA 622 (Statistical Data Mining), Math 466 (Mathematics of Machine Learning), STA 231 (Advanced Introduction to Probability), STA 470S (Introduction to Statistical Consulting) or STA 440 (Case Studies in the Practice of Statistics)\nPrerequisites\nPrerequisite: COMPSCI 671D/STA 671D/ECE 687D and STA 622/COMPSCI 579 and MATH 466 and STA 231/MATH 340 and (STA 470S or STA 440)\n"}
{"question": "What topics are covered in COMPSCI 288?", "answer": "COMPSCI 288 covers topics in proof theory, model theory, and recursion theory, with applications to computer science, formal linguistics, mathematics, and philosophy.", "raw_info": "COMPSCI  288\nTopics in proof theory, model theory, and recursion theory; applications to computer science, formal linguistics, mathematics, and philosophy. Usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy. Prerequisite: a course in logic or consent of instructor.\n"}
{"question": "Who typically teaches COMPSCI 288?", "answer": "COMPSCI 288 is usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy.", "raw_info": "COMPSCI  288\nTopics in proof theory, model theory, and recursion theory; applications to computer science, formal linguistics, mathematics, and philosophy. Usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy. Prerequisite: a course in logic or consent of instructor.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 288?", "answer": "The prerequisite for COMPSCI 288 is a course in logic or consent of the instructor.", "raw_info": "COMPSCI  288\nTopics in proof theory, model theory, and recursion theory; applications to computer science, formal linguistics, mathematics, and philosophy. Usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy. Prerequisite: a course in logic or consent of instructor.\n"}
{"question": "In which departments do the faculty members who teach COMPSCI 288 reside?", "answer": "Faculty members from the departments of computer science, mathematics, and philosophy typically teach COMPSCI 288.", "raw_info": "COMPSCI  288\nTopics in proof theory, model theory, and recursion theory; applications to computer science, formal linguistics, mathematics, and philosophy. Usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy. Prerequisite: a course in logic or consent of instructor.\n"}
{"question": "If I have not taken a course in logic, can I still enroll in COMPSCI 288?", "answer": "Yes, you can still enroll in COMPSCI 288 if you obtain consent from the instructor.", "raw_info": "COMPSCI  288\nTopics in proof theory, model theory, and recursion theory; applications to computer science, formal linguistics, mathematics, and philosophy. Usually taught jointly by faculty members from the departments of computer science, mathematics, and philosophy. Prerequisite: a course in logic or consent of instructor.\n"}
{"question": "What are the prerequisites for COMPSCI 520D?", "answer": "The prerequisites for COMPSCI 520D include knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.", "raw_info": "COMPSCI  520D\nError analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations. Prerequisites: knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.\n"}
{"question": "Does COMPSCI 520D cover numerical differentiation and integration?", "answer": "Yes, COMPSCI 520D covers numerical differentiation and integration.", "raw_info": "COMPSCI  520D\nError analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations. Prerequisites: knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.\n"}
{"question": "What mathematical topics are included in the COMPSCI 520D syllabus?", "answer": "The topics included in the COMPSCI 520D syllabus are error analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations.", "raw_info": "COMPSCI  520D\nError analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations. Prerequisites: knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.\n"}
{"question": "Is knowledge of differential equations required for enrolling in COMPSCI 520D?", "answer": "Yes, knowledge of intermediate calculus including some differential equations is required for COMPSCI 520D.", "raw_info": "COMPSCI  520D\nError analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations. Prerequisites: knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.\n"}
{"question": "Will COMPSCI 520D teach how to solve nonlinear equations?", "answer": "Yes, part of the COMPSCI 520D course is dedicated to the solutions of nonlinear equations.", "raw_info": "COMPSCI  520D\nError analysis, interpolation and spline approximation, numerical differentiation and integration, solutions of linear systems, nonlinear equations, and ordinary differential equations. Prerequisites: knowledge of an algorithmic programming language, intermediate calculus including some differential equations, and Mathematics 221.\n"}
{"question": "What topics are covered in COMPSCI 655L?", "answer": "COMPSCI 655L covers the principles and applications of full-stack IoT, including hardware and software components for building cyber-physical systems, embedded platforms with various sensors and actuators, wireless and wired networks, cloud services and platforms, data visualization and analytics, and end-to-end IoT applications.", "raw_info": "COMPSCI  655L\nThis course focuses on the principles and applications of full-stack Internet-of-Things (IoT). It covers the hardware and software components of building cyber-physical systems (CPS) for IoT applications, including embedded platforms with various sensors and actuators, wireless and wired networks, cloud service, and platforms, data visualization and analytics, and end-to-end IoT applications. This course includes lab sessions and group projects, where students create and build working CPS/IoT systems. Prerequisite: Computer Science 210D, Computer Science 250D, Electrical & Computer Engineering 250D, or Electrical & Computer Engineering 550D.\nPrerequisites\nPrerequisite: COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D\n"}
{"question": "Are there any lab sessions in COMPSCI 655L?", "answer": "Yes, COMPSCI 655L includes lab sessions and group projects where students create and build working CPS/IoT systems.", "raw_info": "COMPSCI  655L\nThis course focuses on the principles and applications of full-stack Internet-of-Things (IoT). It covers the hardware and software components of building cyber-physical systems (CPS) for IoT applications, including embedded platforms with various sensors and actuators, wireless and wired networks, cloud service, and platforms, data visualization and analytics, and end-to-end IoT applications. This course includes lab sessions and group projects, where students create and build working CPS/IoT systems. Prerequisite: Computer Science 210D, Computer Science 250D, Electrical & Computer Engineering 250D, or Electrical & Computer Engineering 550D.\nPrerequisites\nPrerequisite: COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 655L?", "answer": "The prerequisites for enrolling in COMPSCI 655L are completing COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D.", "raw_info": "COMPSCI  655L\nThis course focuses on the principles and applications of full-stack Internet-of-Things (IoT). It covers the hardware and software components of building cyber-physical systems (CPS) for IoT applications, including embedded platforms with various sensors and actuators, wireless and wired networks, cloud service, and platforms, data visualization and analytics, and end-to-end IoT applications. This course includes lab sessions and group projects, where students create and build working CPS/IoT systems. Prerequisite: Computer Science 210D, Computer Science 250D, Electrical & Computer Engineering 250D, or Electrical & Computer Engineering 550D.\nPrerequisites\nPrerequisite: COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D\n"}
{"question": "Does COMPSCI 655L involve group projects?", "answer": "Yes, COMPSCI 655L includes group projects as part of the course, where students work on creating CPS/IoT systems.", "raw_info": "COMPSCI  655L\nThis course focuses on the principles and applications of full-stack Internet-of-Things (IoT). It covers the hardware and software components of building cyber-physical systems (CPS) for IoT applications, including embedded platforms with various sensors and actuators, wireless and wired networks, cloud service, and platforms, data visualization and analytics, and end-to-end IoT applications. This course includes lab sessions and group projects, where students create and build working CPS/IoT systems. Prerequisite: Computer Science 210D, Computer Science 250D, Electrical & Computer Engineering 250D, or Electrical & Computer Engineering 550D.\nPrerequisites\nPrerequisite: COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D\n"}
{"question": "Is prior knowledge in ECE 250D required for taking COMPSCI 655L?", "answer": "Yes, ECE 250D is one of the prerequisite courses you can have completed before taking COMPSCI 655L.", "raw_info": "COMPSCI  655L\nThis course focuses on the principles and applications of full-stack Internet-of-Things (IoT). It covers the hardware and software components of building cyber-physical systems (CPS) for IoT applications, including embedded platforms with various sensors and actuators, wireless and wired networks, cloud service, and platforms, data visualization and analytics, and end-to-end IoT applications. This course includes lab sessions and group projects, where students create and build working CPS/IoT systems. Prerequisite: Computer Science 210D, Computer Science 250D, Electrical & Computer Engineering 250D, or Electrical & Computer Engineering 550D.\nPrerequisites\nPrerequisite: COMPSCI 210D, COMPSCI 250D, ECE 250D, or ECE 550D\n"}
{"question": "What are the prerequisites for COMPSCI 561?", "answer": "The prerequisites for COMPSCI 561 are basic knowledge in algorithmic design (such as Computer Science 532 or equivalent), probability and statistics (such as Statistical Science 611 or equivalent), and molecular biology (such as Biology 118 or equivalent). Alternatively, you can enroll with the consent of the instructor.", "raw_info": "COMPSCI  561\nIntroduction to algorithmic and computational issues in analysis of biological sequences: DNA, RNA, and protein. Emphasizes probabilistic approaches and machine learning methods, e.g. Hidden Markov models. Explores applications in genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, post-transcriptional regulation. Prerequisites: basic knowledge algorithmic design (Computer Science 532 or equivalent), probability and statistics (Statistical Science 611 or equivalent), molecular biology (Biology 118 or equivalent). Alternatively, consent of instructor.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What kind of approaches does COMPSCI 561 emphasize for the analysis of biological sequences?", "answer": "COMPSCI 561 emphasizes probabilistic approaches and machine learning methods, including Hidden Markov models.", "raw_info": "COMPSCI  561\nIntroduction to algorithmic and computational issues in analysis of biological sequences: DNA, RNA, and protein. Emphasizes probabilistic approaches and machine learning methods, e.g. Hidden Markov models. Explores applications in genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, post-transcriptional regulation. Prerequisites: basic knowledge algorithmic design (Computer Science 532 or equivalent), probability and statistics (Statistical Science 611 or equivalent), molecular biology (Biology 118 or equivalent). Alternatively, consent of instructor.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What applications are explored in COMPSCI 561?", "answer": "In COMPSCI 561, applications such as genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, and post-transcriptional regulation are explored.", "raw_info": "COMPSCI  561\nIntroduction to algorithmic and computational issues in analysis of biological sequences: DNA, RNA, and protein. Emphasizes probabilistic approaches and machine learning methods, e.g. Hidden Markov models. Explores applications in genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, post-transcriptional regulation. Prerequisites: basic knowledge algorithmic design (Computer Science 532 or equivalent), probability and statistics (Statistical Science 611 or equivalent), molecular biology (Biology 118 or equivalent). Alternatively, consent of instructor.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Is instructor consent required to enroll in COMPSCI 561?", "answer": "Yes, instructor consent is required to enroll in COMPSCI 561.", "raw_info": "COMPSCI  561\nIntroduction to algorithmic and computational issues in analysis of biological sequences: DNA, RNA, and protein. Emphasizes probabilistic approaches and machine learning methods, e.g. Hidden Markov models. Explores applications in genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, post-transcriptional regulation. Prerequisites: basic knowledge algorithmic design (Computer Science 532 or equivalent), probability and statistics (Statistical Science 611 or equivalent), molecular biology (Biology 118 or equivalent). Alternatively, consent of instructor.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Who should you contact if you want to enroll in COMPSCI 561 but haven't met the prerequisites?", "answer": "If you haven't met the prerequisites for COMPSCI 561 but still want to enroll, you should contact the instructor for consent.", "raw_info": "COMPSCI  561\nIntroduction to algorithmic and computational issues in analysis of biological sequences: DNA, RNA, and protein. Emphasizes probabilistic approaches and machine learning methods, e.g. Hidden Markov models. Explores applications in genome sequence assembly, protein and DNA homology detection, gene and promoter finding, motif identification, models of regulatory regions, comparative genomics and phylogenetics, RNA structure prediction, post-transcriptional regulation. Prerequisites: basic knowledge algorithmic design (Computer Science 532 or equivalent), probability and statistics (Statistical Science 611 or equivalent), molecular biology (Biology 118 or equivalent). Alternatively, consent of instructor.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 310?", "answer": "The prerequisites for enrolling in COMPSCI 310 are Computer Science 201 and either Computer Science 210D or Computer Science/Electrical and Computer Engineering 250D.", "raw_info": "COMPSCI  310\nBasic concepts and principles of multiprogrammed operating systems. Processes, interprocess communication, CPU scheduling, mutual exclusion, deadlocks, memory management, I/O devices, file systems, protection mechanisms. Also taught as Electrical and Computer Engineering 353. Prerequisites: Computer Science 201; and either of Computer Science 210D, Computer Science 250D or Electrical and Computer Engineering 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Does COMPSCI 310 cover the topic of CPU scheduling?", "answer": "Yes, CPU scheduling is one of the topics covered in COMPSCI 310.", "raw_info": "COMPSCI  310\nBasic concepts and principles of multiprogrammed operating systems. Processes, interprocess communication, CPU scheduling, mutual exclusion, deadlocks, memory management, I/O devices, file systems, protection mechanisms. Also taught as Electrical and Computer Engineering 353. Prerequisites: Computer Science 201; and either of Computer Science 210D, Computer Science 250D or Electrical and Computer Engineering 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Is COMPSCI 310 the same course as any Electrical and Computer Engineering course?", "answer": "Yes, COMPSCI 310 is also taught as Electrical and Computer Engineering 353.", "raw_info": "COMPSCI  310\nBasic concepts and principles of multiprogrammed operating systems. Processes, interprocess communication, CPU scheduling, mutual exclusion, deadlocks, memory management, I/O devices, file systems, protection mechanisms. Also taught as Electrical and Computer Engineering 353. Prerequisites: Computer Science 201; and either of Computer Science 210D, Computer Science 250D or Electrical and Computer Engineering 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Can I take COMPSCI 310 if I have only completed Computer Science 201?", "answer": "No, you must have completed Computer Science 201 and either Computer Science 210D or Computer Science/Electrical & Computer Engineering 250D to take COMPSCI 310.", "raw_info": "COMPSCI  310\nBasic concepts and principles of multiprogrammed operating systems. Processes, interprocess communication, CPU scheduling, mutual exclusion, deadlocks, memory management, I/O devices, file systems, protection mechanisms. Also taught as Electrical and Computer Engineering 353. Prerequisites: Computer Science 201; and either of Computer Science 210D, Computer Science 250D or Electrical and Computer Engineering 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Are file systems discussed in COMPSCI 310?", "answer": "Yes, file systems are one of the topics discussed in COMPSCI 310.", "raw_info": "COMPSCI  310\nBasic concepts and principles of multiprogrammed operating systems. Processes, interprocess communication, CPU scheduling, mutual exclusion, deadlocks, memory management, I/O devices, file systems, protection mechanisms. Also taught as Electrical and Computer Engineering 353. Prerequisites: Computer Science 201; and either of Computer Science 210D, Computer Science 250D or Electrical and Computer Engineering 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "What consent is required for enrolling in COMPSCI 701S?", "answer": "Instructor consent is required for enrolling in COMPSCI 701S.", "raw_info": "COMPSCI  701S\nIntroduction for graduate students in computer science. Topics for discussion include: computer science as a research discipline, views of what constitutes a research contribution, approaches to research in different subfields, tools and methodologies, publishing and presenting research results, the role of computer science as an 'amplifier' in other sciences, ethical and policy issues, the information technology industry, grants and funding, and guidelines for success as a graduate student and as a scientist.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What is one of the topics discussed in COMPSCI 701S regarding the role of computer science?", "answer": "COMPSCI 701S discusses the role of computer science as an 'amplifier' in other sciences.", "raw_info": "COMPSCI  701S\nIntroduction for graduate students in computer science. Topics for discussion include: computer science as a research discipline, views of what constitutes a research contribution, approaches to research in different subfields, tools and methodologies, publishing and presenting research results, the role of computer science as an 'amplifier' in other sciences, ethical and policy issues, the information technology industry, grants and funding, and guidelines for success as a graduate student and as a scientist.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Does COMPSCI 701S cover any ethical topics?", "answer": "Yes, COMPSCI 701S covers ethical and policy issues.", "raw_info": "COMPSCI  701S\nIntroduction for graduate students in computer science. Topics for discussion include: computer science as a research discipline, views of what constitutes a research contribution, approaches to research in different subfields, tools and methodologies, publishing and presenting research results, the role of computer science as an 'amplifier' in other sciences, ethical and policy issues, the information technology industry, grants and funding, and guidelines for success as a graduate student and as a scientist.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What aspect of the academic career does COMPSCI 701S provide guidelines for?", "answer": "COMPSCI 701S provides guidelines for success as a graduate student and as a scientist.", "raw_info": "COMPSCI  701S\nIntroduction for graduate students in computer science. Topics for discussion include: computer science as a research discipline, views of what constitutes a research contribution, approaches to research in different subfields, tools and methodologies, publishing and presenting research results, the role of computer science as an 'amplifier' in other sciences, ethical and policy issues, the information technology industry, grants and funding, and guidelines for success as a graduate student and as a scientist.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Is there a specific industry-related topic discussed in COMPSCI 701S?", "answer": "Yes, COMPSCI 701S discusses the information technology industry.", "raw_info": "COMPSCI  701S\nIntroduction for graduate students in computer science. Topics for discussion include: computer science as a research discipline, views of what constitutes a research contribution, approaches to research in different subfields, tools and methodologies, publishing and presenting research results, the role of computer science as an 'amplifier' in other sciences, ethical and policy issues, the information technology industry, grants and funding, and guidelines for success as a graduate student and as a scientist.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What prerequisites do I need to fulfill before enrolling in COMPSCI 526?", "answer": "Before enrolling in COMPSCI 526, you need to have completed a statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and a course in relational databases (Computer Science 216 or 316) or have graduate student standing.", "raw_info": "COMPSCI  526\nData science is 'the science of planning for, acquisition, management, analysis of, and inference from data'. This course systematically covers the concepts, ideas, tools, and example applications of data science in an end-to-end manner. We emphasize data-driven thinking, data processing and analytics, and extracting actionable values from data. We focus on the interactions between data and applications, data modeling, and data processing, data analytics, and the essential algorithms and tools. Prerequisites: A statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and relational databases (Computer Science216 or 316).\nPrerequisites\nPrerequisite: Computer Science 201, and Computer Science 216 or Computer Science 316, and Statistics 111 or higher, or graduate student standing\n"}
{"question": "Does COMPSCI 526 focus on any specific aspects of data science applications?", "answer": "Yes, COMPSCI 526 focuses on data-driven thinking, data processing and analytics, and extracting actionable values from data, emphasizing the interactions between data and applications, data modeling, and data processing.", "raw_info": "COMPSCI  526\nData science is 'the science of planning for, acquisition, management, analysis of, and inference from data'. This course systematically covers the concepts, ideas, tools, and example applications of data science in an end-to-end manner. We emphasize data-driven thinking, data processing and analytics, and extracting actionable values from data. We focus on the interactions between data and applications, data modeling, and data processing, data analytics, and the essential algorithms and tools. Prerequisites: A statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and relational databases (Computer Science216 or 316).\nPrerequisites\nPrerequisite: Computer Science 201, and Computer Science 216 or Computer Science 316, and Statistics 111 or higher, or graduate student standing\n"}
{"question": "If I am a graduate student, do I need to take any additional courses to meet the prerequisites for COMPSCI 526?", "answer": "As a graduate student, you meet the prerequisites for COMPSCI 526 and do not need to take additional courses.", "raw_info": "COMPSCI  526\nData science is 'the science of planning for, acquisition, management, analysis of, and inference from data'. This course systematically covers the concepts, ideas, tools, and example applications of data science in an end-to-end manner. We emphasize data-driven thinking, data processing and analytics, and extracting actionable values from data. We focus on the interactions between data and applications, data modeling, and data processing, data analytics, and the essential algorithms and tools. Prerequisites: A statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and relational databases (Computer Science216 or 316).\nPrerequisites\nPrerequisite: Computer Science 201, and Computer Science 216 or Computer Science 316, and Statistics 111 or higher, or graduate student standing\n"}
{"question": "Can I take COMPSCI 526 if I have only completed Computer Science 216 but not Computer Science 316?", "answer": "Yes, you can take COMPSCI 526 if you have completed either Computer Science 216 or Computer Science 316, along with the other required prerequisites.", "raw_info": "COMPSCI  526\nData science is 'the science of planning for, acquisition, management, analysis of, and inference from data'. This course systematically covers the concepts, ideas, tools, and example applications of data science in an end-to-end manner. We emphasize data-driven thinking, data processing and analytics, and extracting actionable values from data. We focus on the interactions between data and applications, data modeling, and data processing, data analytics, and the essential algorithms and tools. Prerequisites: A statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and relational databases (Computer Science216 or 316).\nPrerequisites\nPrerequisite: Computer Science 201, and Computer Science 216 or Computer Science 316, and Statistics 111 or higher, or graduate student standing\n"}
{"question": "Who would benefit most from taking COMPSCI 526?", "answer": "Students who want a comprehensive understanding of data science concepts, ideas, tools, and applications, and who meet the prerequisites, would benefit most from taking COMPSCI 526.", "raw_info": "COMPSCI  526\nData science is 'the science of planning for, acquisition, management, analysis of, and inference from data'. This course systematically covers the concepts, ideas, tools, and example applications of data science in an end-to-end manner. We emphasize data-driven thinking, data processing and analytics, and extracting actionable values from data. We focus on the interactions between data and applications, data modeling, and data processing, data analytics, and the essential algorithms and tools. Prerequisites: A statistics course (Statistics 111 or higher), data structures and algorithms (Computer Science 201), and relational databases (Computer Science216 or 316).\nPrerequisites\nPrerequisite: Computer Science 201, and Computer Science 216 or Computer Science 316, and Statistics 111 or higher, or graduate student standing\n"}
{"question": "What is the primary goal of the COMPSCI 393 course?", "answer": "The primary goal of the COMPSCI 393 course is to produce a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic.", "raw_info": "COMPSCI  393\nIndividual research in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "In COMPSCI 393, whose consent is required before enrolling?", "answer": "In COMPSCI 393, both the consent of the instructor and the director of undergraduate studies are required before enrolling.", "raw_info": "COMPSCI  393\nIndividual research in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What kind of work will students undertake in COMPSCI 393?", "answer": "Students will undertake individual research in a field of special interest under the supervision of a faculty member in COMPSCI 393.", "raw_info": "COMPSCI  393\nIndividual research in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Is department consent necessary for enrolling in COMPSCI 393?", "answer": "Yes, department consent is required for enrolling in COMPSCI 393.", "raw_info": "COMPSCI  393\nIndividual research in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What does the COMPSCI 393 course involve?", "answer": "The COMPSCI 393 course involves individual research that results in a substantive paper, project, or written report with significant analysis.", "raw_info": "COMPSCI  393\nIndividual research in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report containing significant analysis and interpretation of a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What topics are covered in COMPSCI 532 with regard to algorithms?", "answer": "COMPSCI 532 covers design and analysis of efficient algorithms, algorithmic paradigms, and applications such as sorting, searching, dynamic structures, graph algorithms, randomized algorithms, computationally hard problems, and NP completeness.", "raw_info": "COMPSCI  532\nDesign and analysis of efficient algorithms. Algorithmic paradigms. Applications include sorting, searching, dynamic structures, graph algorithms, randomized algorithms. Computationally hard problems. NP completeness. Prerequisites: Computer Science 201 and 330 or equivalent.\n"}
{"question": "What are the prerequisite courses for enrolling in COMPSCI 532?", "answer": "The prerequisites for COMPSCI 532 are Computer Science 201 and 330 or equivalent courses.", "raw_info": "COMPSCI  532\nDesign and analysis of efficient algorithms. Algorithmic paradigms. Applications include sorting, searching, dynamic structures, graph algorithms, randomized algorithms. Computationally hard problems. NP completeness. Prerequisites: Computer Science 201 and 330 or equivalent.\n"}
{"question": "Does COMPSCI 532 include studying NP completeness?", "answer": "Yes, COMPSCI 532 includes studying NP completeness.", "raw_info": "COMPSCI  532\nDesign and analysis of efficient algorithms. Algorithmic paradigms. Applications include sorting, searching, dynamic structures, graph algorithms, randomized algorithms. Computationally hard problems. NP completeness. Prerequisites: Computer Science 201 and 330 or equivalent.\n"}
{"question": "Are randomized algorithms part of the COMPSCI 532 curriculum?", "answer": "Yes, randomized algorithms are included in the COMPSCI 532 curriculum.", "raw_info": "COMPSCI  532\nDesign and analysis of efficient algorithms. Algorithmic paradigms. Applications include sorting, searching, dynamic structures, graph algorithms, randomized algorithms. Computationally hard problems. NP completeness. Prerequisites: Computer Science 201 and 330 or equivalent.\n"}
{"question": "If I have completed a course equivalent to Computer Science 201, can I take COMPSCI 532?", "answer": "Yes, if you have completed courses equivalent to Computer Science 201 and 330, you can enroll in COMPSCI 532.", "raw_info": "COMPSCI  532\nDesign and analysis of efficient algorithms. Algorithmic paradigms. Applications include sorting, searching, dynamic structures, graph algorithms, randomized algorithms. Computationally hard problems. NP completeness. Prerequisites: Computer Science 201 and 330 or equivalent.\n"}
{"question": "What is the focus of COMPSCI 110?", "answer": "COMPSCI 110 focuses on Information, Society, and Culture across disciplines, exploring how aspects of information theory and practice are transforming research and impacting society, culture, ideologies, economics, and politics.", "raw_info": "COMPSCI  110\nInformation, Society, and Culture across disciplines. How all aspects of information theory and practice, including computational and mathematical and those from social sciences and the humanities are transforming research, reframing intellectual questions in research and its application, and having an impact on interactions within societies, cultures, ideologies, economics, politics. Modules presented by faculty from all areas and schools, contrasting and comparative perspectives in research-driven modules focused on interdisciplinary project questions and ideas. Lecture/section activities. Course Gateway for the Bass Connections theme in Information, Society and Culture.\n"}
{"question": "How is COMPSCI 110 structured in terms of content delivery?", "answer": "COMPSCI 110 includes modules presented by faculty from diverse disciplines, offering contrasting and comparative perspectives, and involves lecture/section activities.", "raw_info": "COMPSCI  110\nInformation, Society, and Culture across disciplines. How all aspects of information theory and practice, including computational and mathematical and those from social sciences and the humanities are transforming research, reframing intellectual questions in research and its application, and having an impact on interactions within societies, cultures, ideologies, economics, politics. Modules presented by faculty from all areas and schools, contrasting and comparative perspectives in research-driven modules focused on interdisciplinary project questions and ideas. Lecture/section activities. Course Gateway for the Bass Connections theme in Information, Society and Culture.\n"}
{"question": "Who provides the modules in COMPSCI 110?", "answer": "The modules in COMPSCI 110 are presented by faculty from all areas and schools.", "raw_info": "COMPSCI  110\nInformation, Society, and Culture across disciplines. How all aspects of information theory and practice, including computational and mathematical and those from social sciences and the humanities are transforming research, reframing intellectual questions in research and its application, and having an impact on interactions within societies, cultures, ideologies, economics, politics. Modules presented by faculty from all areas and schools, contrasting and comparative perspectives in research-driven modules focused on interdisciplinary project questions and ideas. Lecture/section activities. Course Gateway for the Bass Connections theme in Information, Society and Culture.\n"}
{"question": "What kind of project work is highlighted in COMPSCI 110?", "answer": "COMPSCI 110 focuses on interdisciplinary project questions and ideas as part of its research-driven modules.", "raw_info": "COMPSCI  110\nInformation, Society, and Culture across disciplines. How all aspects of information theory and practice, including computational and mathematical and those from social sciences and the humanities are transforming research, reframing intellectual questions in research and its application, and having an impact on interactions within societies, cultures, ideologies, economics, politics. Modules presented by faculty from all areas and schools, contrasting and comparative perspectives in research-driven modules focused on interdisciplinary project questions and ideas. Lecture/section activities. Course Gateway for the Bass Connections theme in Information, Society and Culture.\n"}
{"question": "Does COMPSCI 110 serve as a gateway to any particular theme or program?", "answer": "Yes, COMPSCI 110 serves as the course gateway for the Bass Connections theme in Information, Society, and Culture.", "raw_info": "COMPSCI  110\nInformation, Society, and Culture across disciplines. How all aspects of information theory and practice, including computational and mathematical and those from social sciences and the humanities are transforming research, reframing intellectual questions in research and its application, and having an impact on interactions within societies, cultures, ideologies, economics, politics. Modules presented by faculty from all areas and schools, contrasting and comparative perspectives in research-driven modules focused on interdisciplinary project questions and ideas. Lecture/section activities. Course Gateway for the Bass Connections theme in Information, Society and Culture.\n"}
{"question": "What is the course number for \"Introduction to the practices and principles of computer science and programming\" that uses Python?", "answer": "The course number is COMPSCI 102L.", "raw_info": "COMPSCI  102L\nIntroduction to the practices and principles of computer science and programming and their impact on and potential to change the world motivated by problems drawn from natural science, social science, engineering, and humanities. Programming using Python, appropriate libraries, and APIs to process, analyze, and visualize data. Design, implementation, and analysis emphasizing abstraction, encapsulation, and problem decomposition. No previous programming experience required.\n"}
{"question": "Does COMPSCI 102L require any previous programming experience?", "answer": "No, COMPSCI 102L does not require any previous programming experience.", "raw_info": "COMPSCI  102L\nIntroduction to the practices and principles of computer science and programming and their impact on and potential to change the world motivated by problems drawn from natural science, social science, engineering, and humanities. Programming using Python, appropriate libraries, and APIs to process, analyze, and visualize data. Design, implementation, and analysis emphasizing abstraction, encapsulation, and problem decomposition. No previous programming experience required.\n"}
{"question": "Which programming language is primarily used in COMPSCI 102L?", "answer": "Python is the programming language primarily used in COMPSCI 102L.", "raw_info": "COMPSCI  102L\nIntroduction to the practices and principles of computer science and programming and their impact on and potential to change the world motivated by problems drawn from natural science, social science, engineering, and humanities. Programming using Python, appropriate libraries, and APIs to process, analyze, and visualize data. Design, implementation, and analysis emphasizing abstraction, encapsulation, and problem decomposition. No previous programming experience required.\n"}
{"question": "What areas do problems in COMPSCI 102L draw from to illustrate the impact of computer science?", "answer": "Problems in COMPSCI 102L are drawn from natural science, social science, engineering, and humanities.", "raw_info": "COMPSCI  102L\nIntroduction to the practices and principles of computer science and programming and their impact on and potential to change the world motivated by problems drawn from natural science, social science, engineering, and humanities. Programming using Python, appropriate libraries, and APIs to process, analyze, and visualize data. Design, implementation, and analysis emphasizing abstraction, encapsulation, and problem decomposition. No previous programming experience required.\n"}
{"question": "What key programming concepts are emphasized in the COMPSCI 102L course?", "answer": "The course emphasizes abstraction, encapsulation, and problem decomposition.", "raw_info": "COMPSCI  102L\nIntroduction to the practices and principles of computer science and programming and their impact on and potential to change the world motivated by problems drawn from natural science, social science, engineering, and humanities. Programming using Python, appropriate libraries, and APIs to process, analyze, and visualize data. Design, implementation, and analysis emphasizing abstraction, encapsulation, and problem decomposition. No previous programming experience required.\n"}
{"question": "What is the course number for the class that covers applications in genetics and genomics and requires department consent for enrollment?", "answer": "The course number is COMPSCI 763.", "raw_info": "COMPSCI  763\nIntroduction to probabilistic graphical models and structured prediction, with applications in genetics and genomics. Hidden Markov Models, conditional random fields, stochastic grammars, Bayesian hierarchical models, neural networks, and approaches to integrative modeling. Algorithms for exact and approximate inference. Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation. Department consent required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Does COMPSCI 763 allow for automatic enrollment, or is there a special requirement to enroll in the class?", "answer": "COMPSCI 763 requires department consent for enrollment.", "raw_info": "COMPSCI  763\nIntroduction to probabilistic graphical models and structured prediction, with applications in genetics and genomics. Hidden Markov Models, conditional random fields, stochastic grammars, Bayesian hierarchical models, neural networks, and approaches to integrative modeling. Algorithms for exact and approximate inference. Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation. Department consent required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Which professor's course includes topics such as Hidden Markov Models, conditional random fields, and Bayesian hierarchical models?", "answer": "The course COMPSCI 763 covers those topics, though the professor's name is not mentioned in the provided text.", "raw_info": "COMPSCI  763\nIntroduction to probabilistic graphical models and structured prediction, with applications in genetics and genomics. Hidden Markov Models, conditional random fields, stochastic grammars, Bayesian hierarchical models, neural networks, and approaches to integrative modeling. Algorithms for exact and approximate inference. Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation. Department consent required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "In COMPSCI 763, what kinds of applications are studied in relation to probabilistic graphical models?", "answer": "Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation are studied in COMPSCI 763.", "raw_info": "COMPSCI  763\nIntroduction to probabilistic graphical models and structured prediction, with applications in genetics and genomics. Hidden Markov Models, conditional random fields, stochastic grammars, Bayesian hierarchical models, neural networks, and approaches to integrative modeling. Algorithms for exact and approximate inference. Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation. Department consent required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What types of algorithms are taught in COMPSCI 763 regarding inference methods?", "answer": "Algorithms for exact and approximate inference are taught in COMPSCI 763.", "raw_info": "COMPSCI  763\nIntroduction to probabilistic graphical models and structured prediction, with applications in genetics and genomics. Hidden Markov Models, conditional random fields, stochastic grammars, Bayesian hierarchical models, neural networks, and approaches to integrative modeling. Algorithms for exact and approximate inference. Applications in DNA/RNA analysis, phylogenetics, sequence alignment, gene expression, allelic phasing and imputation, genome/epigenome annotation, and gene regulation. Department consent required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What is the course number for the class that gives credit for Advanced Placement Computer Science Principles?", "answer": "The course number is COMPSCI 20.", "raw_info": "COMPSCI   20\nCredit for Advanced Placement Computer Science Principles on the basis of College Board Examination.\n"}
{"question": "How can students earn credit for COMPSCI 20?", "answer": "Students can earn credit for COMPSCI 20 on the basis of the College Board Examination in Advanced Placement Computer Science Principles.", "raw_info": "COMPSCI   20\nCredit for Advanced Placement Computer Science Principles on the basis of College Board Examination.\n"}
{"question": "Does COMPSCI 20 require taking a separate university exam to earn credit?", "answer": "No, credit for COMPSCI 20 is granted based on the College Board Examination for Advanced Placement Computer Science Principles.", "raw_info": "COMPSCI   20\nCredit for Advanced Placement Computer Science Principles on the basis of College Board Examination.\n"}
{"question": "Can anyone enroll in COMPSCI 190FS, or are there specific requirements?", "answer": "COMPSCI 190FS is open only to students in the Focus program, and department consent is required for enrollment.", "raw_info": "COMPSCI  190FS\nTopics vary by semester. Open only to students in the Focus program.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "What type of consent is necessary to drop the COMPSCI 190FS course?", "answer": "Department consent is required to drop COMPSCI 190FS.", "raw_info": "COMPSCI  190FS\nTopics vary by semester. Open only to students in the Focus program.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "Do the topics covered in COMPSCI 190FS change?", "answer": "Yes, the topics for COMPSCI 190FS vary by semester.", "raw_info": "COMPSCI  190FS\nTopics vary by semester. Open only to students in the Focus program.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "Who needs to approve if I want to enroll in COMPSCI 190FS?", "answer": "Department consent is required to enroll in COMPSCI 190FS.", "raw_info": "COMPSCI  190FS\nTopics vary by semester. Open only to students in the Focus program.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "Is COMPSCI 190FS available to all computer science students?", "answer": "No, COMPSCI 190FS is only available to students in the Focus program.", "raw_info": "COMPSCI  190FS\nTopics vary by semester. Open only to students in the Focus program.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "What prerequisites are required for enrolling in COMPSCI 516?", "answer": "The prerequisites for enrolling in COMPSCI 516 are Computer Science 316, an introductory database course, or consent of the instructor.", "raw_info": "COMPSCI  516\nPrinciples and techniques for making intelligent use of the massive amounts of data generated in commerce, industry, science, and society. Topics include basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and query optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics (e.g. Datalog, cloud computing fault-tolerant / self-tuning data management, Web information retrieval/extraction, data warehouse, OLAP, data mining). Prerequisites: Computer Science 316 or an introductory database course or consent of instructor.\n"}
{"question": "Which topics in database systems are covered in COMPSCI 516?", "answer": "COMPSCI 516 covers topics including basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics.", "raw_info": "COMPSCI  516\nPrinciples and techniques for making intelligent use of the massive amounts of data generated in commerce, industry, science, and society. Topics include basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and query optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics (e.g. Datalog, cloud computing fault-tolerant / self-tuning data management, Web information retrieval/extraction, data warehouse, OLAP, data mining). Prerequisites: Computer Science 316 or an introductory database course or consent of instructor.\n"}
{"question": "Does COMPSCI 516 include instruction on NOSQL databases?", "answer": "Yes, COMPSCI 516 includes instruction on NOSQL databases.", "raw_info": "COMPSCI  516\nPrinciples and techniques for making intelligent use of the massive amounts of data generated in commerce, industry, science, and society. Topics include basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and query optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics (e.g. Datalog, cloud computing fault-tolerant / self-tuning data management, Web information retrieval/extraction, data warehouse, OLAP, data mining). Prerequisites: Computer Science 316 or an introductory database course or consent of instructor.\n"}
{"question": "Is \"cloud computing fault-tolerant / self-tuning data management\" discussed in the COMPSCI 516 course?", "answer": "Yes, \"cloud computing fault-tolerant / self-tuning data management\" is one of the advanced topics discussed in COMPSCI 516.", "raw_info": "COMPSCI  516\nPrinciples and techniques for making intelligent use of the massive amounts of data generated in commerce, industry, science, and society. Topics include basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and query optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics (e.g. Datalog, cloud computing fault-tolerant / self-tuning data management, Web information retrieval/extraction, data warehouse, OLAP, data mining). Prerequisites: Computer Science 316 or an introductory database course or consent of instructor.\n"}
{"question": "Who should be contacted to gain consent to enroll in COMPSCI 516 if prerequisites are not met?", "answer": "If prerequisites are not met, consent from the instructor is required to enroll in COMPSCI 516.", "raw_info": "COMPSCI  516\nPrinciples and techniques for making intelligent use of the massive amounts of data generated in commerce, industry, science, and society. Topics include basic concepts in databases (SQL, relational algebra, relational calculus, normal forms), indexing and hashing, query processing and query optimizations, transactions (concurrency control and recovery), parallel and distributed data processing, NOSQL and column store, and selected advanced topics (e.g. Datalog, cloud computing fault-tolerant / self-tuning data management, Web information retrieval/extraction, data warehouse, OLAP, data mining). Prerequisites: Computer Science 316 or an introductory database course or consent of instructor.\n"}
{"question": "What are the prerequisites for COMPSCI 524?", "answer": "The prerequisites for COMPSCI 524 are MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.", "raw_info": "COMPSCI  524\nAn introduction to the quantitative description and analysis of physical systems with complex dynamics and how the properties of such systems change as parameters are varied. Part of the course will discuss dynamical systems described by just a few variables and related concepts such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis. Other topics will vary by instructor and might include spatiotemporal dynamics, dynamical networks, and the control of dynamical systems. Prerequisite: MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.\n"}
{"question": "Which professor is responsible for teaching COMPSCI 524?", "answer": "The text does not specify the name of the professor teaching COMPSCI 524.", "raw_info": "COMPSCI  524\nAn introduction to the quantitative description and analysis of physical systems with complex dynamics and how the properties of such systems change as parameters are varied. Part of the course will discuss dynamical systems described by just a few variables and related concepts such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis. Other topics will vary by instructor and might include spatiotemporal dynamics, dynamical networks, and the control of dynamical systems. Prerequisite: MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.\n"}
{"question": "What topics are covered in COMPSCI 524 regarding dynamical systems?", "answer": "COMPSCI 524 covers topics such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis.", "raw_info": "COMPSCI  524\nAn introduction to the quantitative description and analysis of physical systems with complex dynamics and how the properties of such systems change as parameters are varied. Part of the course will discuss dynamical systems described by just a few variables and related concepts such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis. Other topics will vary by instructor and might include spatiotemporal dynamics, dynamical networks, and the control of dynamical systems. Prerequisite: MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.\n"}
{"question": "Are there topics in COMPSCI 524 that might change depending on the instructor?", "answer": "Yes, topics like spatiotemporal dynamics, dynamical networks, and the control of dynamical systems might vary by instructor.", "raw_info": "COMPSCI  524\nAn introduction to the quantitative description and analysis of physical systems with complex dynamics and how the properties of such systems change as parameters are varied. Part of the course will discuss dynamical systems described by just a few variables and related concepts such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis. Other topics will vary by instructor and might include spatiotemporal dynamics, dynamical networks, and the control of dynamical systems. Prerequisite: MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.\n"}
{"question": "What type of systems does COMPSCI 524 focus on?", "answer": "COMPSCI 524 focuses on the quantitative description and analysis of physical systems with complex dynamics.", "raw_info": "COMPSCI  524\nAn introduction to the quantitative description and analysis of physical systems with complex dynamics and how the properties of such systems change as parameters are varied. Part of the course will discuss dynamical systems described by just a few variables and related concepts such as model equations, phase space, linear stability, bifurcations, universality, attractors, fractals, chaos, and time series analysis. Other topics will vary by instructor and might include spatiotemporal dynamics, dynamical networks, and the control of dynamical systems. Prerequisite: MATH 216, the PHYSICS 161/162 sequence, and COMPSCI 101, or their equivalents.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 316?", "answer": "The prerequisites for COMPSCI 316 are Computer Science 201, and either Computer Science 210D or Computer Science/Electrical & Computer Engineering 250D.", "raw_info": "COMPSCI  316\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: CompSci 201, and either CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Does COMPSCI 316 include any programming projects?", "answer": "Yes, COMPSCI 316 includes hands-on programming projects and a term project.", "raw_info": "COMPSCI  316\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: CompSci 201, and either CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Which topics are covered in COMPSCI 316 related to data management?", "answer": "COMPSCI 316 covers databases and relational database management systems, data modeling, database design theory, data definition and manipulation languages, storage and indexing techniques, query processing and optimization, concurrency control and recovery, and database programming interfaces.", "raw_info": "COMPSCI  316\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: CompSci 201, and either CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "What current research issues are discussed in COMPSCI 316?", "answer": "Current research issues discussed in COMPSCI 316 include XML, web data management, data integration and dissemination, and data mining.", "raw_info": "COMPSCI  316\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: CompSci 201, and either CompSci 210D or CompSci 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "What are the topics covered in COMPSCI 582?", "answer": "COMPSCI 582 covers the design and analysis of cryptographic algorithms, including basics of abstract algebra and number theory; symmetric and asymmetric encryption algorithms; cryptographic hash functions; message authentication codes; digital signature schemes; elliptic curve algorithms; side-channel attacks; and selected advanced topics.", "raw_info": "COMPSCI  582\nIntroduction to the design and analysis of cryptographic algorithms. Topics include basics of abstract algebra and number theory; symmetric and asymmetric encryption algorithms; cryptographic hash functions; message authentication codes; digital signature schemes; elliptic curve algorithms; side-channel attacks; and selected advanced topics. Prerequisite: COMPSCI 230 or equivalent or graduate standing.\nPrerequisites\nPrerequisite: Computer Science 230 or graduate standing\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 582?", "answer": "The prerequisite for enrolling in COMPSCI 582 is COMPSCI 230 or equivalent, or having graduate standing.", "raw_info": "COMPSCI  582\nIntroduction to the design and analysis of cryptographic algorithms. Topics include basics of abstract algebra and number theory; symmetric and asymmetric encryption algorithms; cryptographic hash functions; message authentication codes; digital signature schemes; elliptic curve algorithms; side-channel attacks; and selected advanced topics. Prerequisite: COMPSCI 230 or equivalent or graduate standing.\nPrerequisites\nPrerequisite: Computer Science 230 or graduate standing\n"}
{"question": "Does COMPSCI 582 require a background in number theory?", "answer": "Yes, COMPSCI 582 includes topics in the basics of abstract algebra and number theory, so a background in these areas would be beneficial.", "raw_info": "COMPSCI  582\nIntroduction to the design and analysis of cryptographic algorithms. Topics include basics of abstract algebra and number theory; symmetric and asymmetric encryption algorithms; cryptographic hash functions; message authentication codes; digital signature schemes; elliptic curve algorithms; side-channel attacks; and selected advanced topics. Prerequisite: COMPSCI 230 or equivalent or graduate standing.\nPrerequisites\nPrerequisite: Computer Science 230 or graduate standing\n"}
{"question": "When will COMPSCI 320D be available?", "answer": "COMPSCI 320D will be available as of January 1, 2025.", "raw_info": "COMPSCI  320D\n** available as of 2025-01-01\n"}
{"question": "Can I enroll in COMPSCI 320D in the fall semester of 2024?", "answer": "No, you cannot enroll in COMPSCI 320D in the fall of 2024 as it will be available starting January 1, 2025.", "raw_info": "COMPSCI  320D\n** available as of 2025-01-01\n"}
{"question": "I am planning my courses for the spring semester of 2025; can I include COMPSCI 320D?", "answer": "Yes, you can include COMPSCI 320D in your spring 2025 semester as it will be available starting January 1, 2025.", "raw_info": "COMPSCI  320D\n** available as of 2025-01-01\n"}
{"question": "Will I be able to take COMPSCI 320D in 2026?", "answer": "Yes, you should be able to take COMPSCI 320D in 2026 as it will be available from January 1, 2025, onwards.", "raw_info": "COMPSCI  320D\n** available as of 2025-01-01\n"}
{"question": "What are some of the main topics covered in COMPSCI 550?", "answer": "COMPSCI 550 covers processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends, and future challenges.", "raw_info": "COMPSCI  550\nFundamental aspects of advanced computer architecture design and analysis. Topics include processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends and future challenges. Prerequisite: Computer Science 250 or Electrical and Computer Engineering 350 or equivalent.\n"}
{"question": "What is a prerequisite for enrolling in COMPSCI 550?", "answer": "A prerequisite for COMPSCI 550 is either Computer Science 250, Electrical and Computer Engineering 350, or an equivalent course.", "raw_info": "COMPSCI  550\nFundamental aspects of advanced computer architecture design and analysis. Topics include processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends and future challenges. Prerequisite: Computer Science 250 or Electrical and Computer Engineering 350 or equivalent.\n"}
{"question": "Does COMPSCI 550 cover simulation techniques?", "answer": "Yes, simulation techniques are one of the topics covered in COMPSCI 550.", "raw_info": "COMPSCI  550\nFundamental aspects of advanced computer architecture design and analysis. Topics include processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends and future challenges. Prerequisite: Computer Science 250 or Electrical and Computer Engineering 350 or equivalent.\n"}
{"question": "Are future challenges in computer architecture discussed in COMPSCI 550?", "answer": "Yes, future challenges in computer architecture are discussed in COMPSCI 550.", "raw_info": "COMPSCI  550\nFundamental aspects of advanced computer architecture design and analysis. Topics include processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends and future challenges. Prerequisite: Computer Science 250 or Electrical and Computer Engineering 350 or equivalent.\n"}
{"question": "Can a student with a background in Electrical and Computer Engineering take COMPSCI 550?", "answer": "Yes, a student who has completed Electrical and Computer Engineering 350 or equivalent can take COMPSCI 550.", "raw_info": "COMPSCI  550\nFundamental aspects of advanced computer architecture design and analysis. Topics include processor design, pipelining, superscalar, out-of-order execution, caches (memory hierarchies), virtual memory, storage systems, simulation techniques, technology trends and future challenges. Prerequisite: Computer Science 250 or Electrical and Computer Engineering 350 or equivalent.\n"}
{"question": "What prerequisite is required for enrolling in COMPSCI 534?", "answer": "The prerequisite for enrolling in COMPSCI 534 is Computer Science 334 or an equivalent course.", "raw_info": "COMPSCI  534\nTuring machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, communication complexity. Prerequisite: Computer Science 334 or equivalent.\n"}
{"question": "Who is the professor for COMPSCI 534 in the 2023 semester?", "answer": "The professor's name is not provided in the text, so we cannot determine who is teaching COMPSCI 534 for the 2023 semester.", "raw_info": "COMPSCI  534\nTuring machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, communication complexity. Prerequisite: Computer Science 334 or equivalent.\n"}
{"question": "What are some of the topics covered in COMPSCI 534?", "answer": "Topics covered in COMPSCI 534 include Turing machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, and communication complexity.", "raw_info": "COMPSCI  534\nTuring machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, communication complexity. Prerequisite: Computer Science 334 or equivalent.\n"}
{"question": "Is relativity discussed in the context of COMPSCI 534?", "answer": "Yes, relativized complexity is one of the topics discussed in COMPSCI 534.", "raw_info": "COMPSCI  534\nTuring machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, communication complexity. Prerequisite: Computer Science 334 or equivalent.\n"}
{"question": "In COMPSCI 534, will students learn about communication complexity?", "answer": "Yes, communication complexity is among the topics covered in COMPSCI 534.", "raw_info": "COMPSCI  534\nTuring machines, undecidability, recursive function theory, complexity measures, reduction and completeness, NP, NP-Completeness, co-NP, beyond NP, relativized complexity, circuit complexity, alternation, polynomial time hierarchy, parallel and randomized computation, algebraic methods in complexity theory, communication complexity. Prerequisite: Computer Science 334 or equivalent.\n"}
{"question": "What topics are introduced and implemented in COMPSCI 370D?", "answer": "COMPSCI 370D introduces and implements algorithms for search, planning, decision, theory, logic, Bayesian networks, robotics, and machine learning.", "raw_info": "COMPSCI  370D\nAlgorithms and representations used in artificial intelligence. Introduction and implementation of algorithms for search, planning, decision, theory, logic, Bayesian networks, robotics and machine learning.\nPrerequisites\nPrerequisite: CompSci 201 and one of the following: CompSci 230, CompSci 232, 200-level Mathematics course, or 200-level Statistical Science course\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 370D?", "answer": "The prerequisites for enrolling in COMPSCI 370D are CompSci 201 and one of the following: CompSci 230, CompSci 232, a 200-level Mathematics course, or a 200-level Statistical Science course.", "raw_info": "COMPSCI  370D\nAlgorithms and representations used in artificial intelligence. Introduction and implementation of algorithms for search, planning, decision, theory, logic, Bayesian networks, robotics and machine learning.\nPrerequisites\nPrerequisite: CompSci 201 and one of the following: CompSci 230, CompSci 232, 200-level Mathematics course, or 200-level Statistical Science course\n"}
{"question": "Which algorithmic areas does COMPSCI 370D cover that are pertinent to artificial intelligence?", "answer": "COMPSCI 370D covers algorithms related to search, planning, decision, theory, logic, Bayesian networks, robotics, and machine learning, all pertinent to artificial intelligence.", "raw_info": "COMPSCI  370D\nAlgorithms and representations used in artificial intelligence. Introduction and implementation of algorithms for search, planning, decision, theory, logic, Bayesian networks, robotics and machine learning.\nPrerequisites\nPrerequisite: CompSci 201 and one of the following: CompSci 230, CompSci 232, 200-level Mathematics course, or 200-level Statistical Science course\n"}
{"question": "Can I take COMPSCI 370D if I have completed CompSci 201 and a 200-level Mathematics course?", "answer": "Yes, you can take COMPSCI 370D if you have completed CompSci 201 and a 200-level Mathematics course, as this fulfills the prerequisite requirements.", "raw_info": "COMPSCI  370D\nAlgorithms and representations used in artificial intelligence. Introduction and implementation of algorithms for search, planning, decision, theory, logic, Bayesian networks, robotics and machine learning.\nPrerequisites\nPrerequisite: CompSci 201 and one of the following: CompSci 230, CompSci 232, 200-level Mathematics course, or 200-level Statistical Science course\n"}
{"question": "What are some of the topics covered in COMPSCI 724?", "answer": "COMPSCI 724 covers topics such as advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life).", "raw_info": "COMPSCI  724\nSurvey of current research topics that may include: advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life). Emphasis on quantitative comparisons between theory, simulations, and experiments. Not open to students who have taken Computer Science 313. Prerequisite: Computer Science 524 or Physics 513; recommended: Physics 560, 563, or equivalent.\n"}
{"question": "Who is eligible to enroll in COMPSCI 724?", "answer": "Students who have not taken Computer Science 313 are eligible to enroll in COMPSCI 724, provided they meet the prerequisite requirements.", "raw_info": "COMPSCI  724\nSurvey of current research topics that may include: advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life). Emphasis on quantitative comparisons between theory, simulations, and experiments. Not open to students who have taken Computer Science 313. Prerequisite: Computer Science 524 or Physics 513; recommended: Physics 560, 563, or equivalent.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 724?", "answer": "The prerequisite for COMPSCI 724 is Computer Science 524 or Physics 513. It is also recommended to have taken Physics 560, 563, or an equivalent course.", "raw_info": "COMPSCI  724\nSurvey of current research topics that may include: advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life). Emphasis on quantitative comparisons between theory, simulations, and experiments. Not open to students who have taken Computer Science 313. Prerequisite: Computer Science 524 or Physics 513; recommended: Physics 560, 563, or equivalent.\n"}
{"question": "Can students who have taken Computer Science 313 enroll in COMPSCI 724?", "answer": "No, students who have taken Computer Science 313 cannot enroll in COMPSCI 724.", "raw_info": "COMPSCI  724\nSurvey of current research topics that may include: advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life). Emphasis on quantitative comparisons between theory, simulations, and experiments. Not open to students who have taken Computer Science 313. Prerequisite: Computer Science 524 or Physics 513; recommended: Physics 560, 563, or equivalent.\n"}
{"question": "Does COMPSCI 724 emphasize theory, simulations, or experiments?", "answer": "COMPSCI 724 places an emphasis on quantitative comparisons between theory, simulations, and experiments.", "raw_info": "COMPSCI  724\nSurvey of current research topics that may include: advanced signal analysis (wavelets, Karhunen-Loeve decomposition, multifractals), bifurcation theory (amplitude and phase equations, symmetry breaking), spatio-temporal chaos, granular flows, broken ergodicity, complexity theory of dynamical systems, and adaptive systems (genetic algorithms, neural networks, artificial life). Emphasis on quantitative comparisons between theory, simulations, and experiments. Not open to students who have taken Computer Science 313. Prerequisite: Computer Science 524 or Physics 513; recommended: Physics 560, 563, or equivalent.\n"}
{"question": "When will COMPSCI 557 become available for students to enroll in?", "answer": "COMPSCI 557 will be available for students to enroll in as of January 1, 2025.", "raw_info": "COMPSCI  557\n** available as of 2025-01-01\n"}
{"question": "What is the course number of the computer science class that will be available in January 2025?", "answer": "The course number is COMPSCI 557.", "raw_info": "COMPSCI  557\n** available as of 2025-01-01\n"}
{"question": "Is COMPSCI 557 currently available for enrollment before January 1, 2025?", "answer": "No, COMPSCI 557 will only be available as of January 1, 2025.", "raw_info": "COMPSCI  557\n** available as of 2025-01-01\n"}
{"question": "What is the main focus of COMPSCI 112S?", "answer": "The main focus of COMPSCI 112S is to critically analyze digital culture from a feminist and gender studies perspective.", "raw_info": "COMPSCI  112S\nThe aim of this course is to critically analyze digital culture from a feminist and gender studies perspective. We will address topics related to digital innovation and its history, unpacking and questioning them through the insights offered by genders studies analytical tools. Subjects such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, extraction of data applied to biotechnology, macroeconomic development of IT platforms and the impact of technology on ecology will be discussed starting from a current event or debate, to which we will give a historical, ethical, sociological, theoretical, literary or cinematographic perspective.\n"}
{"question": "What topics does COMPSCI 112S cover in relation to digital culture?", "answer": "COMPSCI 112S covers topics such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, data extraction applied to biotechnology, the macroeconomic development of IT platforms, and the impact of technology on ecology.", "raw_info": "COMPSCI  112S\nThe aim of this course is to critically analyze digital culture from a feminist and gender studies perspective. We will address topics related to digital innovation and its history, unpacking and questioning them through the insights offered by genders studies analytical tools. Subjects such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, extraction of data applied to biotechnology, macroeconomic development of IT platforms and the impact of technology on ecology will be discussed starting from a current event or debate, to which we will give a historical, ethical, sociological, theoretical, literary or cinematographic perspective.\n"}
{"question": "How does COMPSCI 112S approach the discussion of digital culture?", "answer": "COMPSCI 112S approaches the discussion of digital culture by starting from a current event or debate and giving it a historical, ethical, sociological, theoretical, literary, or cinematographic perspective.", "raw_info": "COMPSCI  112S\nThe aim of this course is to critically analyze digital culture from a feminist and gender studies perspective. We will address topics related to digital innovation and its history, unpacking and questioning them through the insights offered by genders studies analytical tools. Subjects such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, extraction of data applied to biotechnology, macroeconomic development of IT platforms and the impact of technology on ecology will be discussed starting from a current event or debate, to which we will give a historical, ethical, sociological, theoretical, literary or cinematographic perspective.\n"}
{"question": "What analytical tools does COMPSCI 112S use to examine digital innovation?", "answer": "COMPSCI 112S uses gender studies analytical tools to examine digital innovation.", "raw_info": "COMPSCI  112S\nThe aim of this course is to critically analyze digital culture from a feminist and gender studies perspective. We will address topics related to digital innovation and its history, unpacking and questioning them through the insights offered by genders studies analytical tools. Subjects such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, extraction of data applied to biotechnology, macroeconomic development of IT platforms and the impact of technology on ecology will be discussed starting from a current event or debate, to which we will give a historical, ethical, sociological, theoretical, literary or cinematographic perspective.\n"}
{"question": "What kind of perspectives will be integrated into the discussions in COMPSCI 112S?", "answer": "Historical, ethical, sociological, theoretical, literary, and cinematographic perspectives will be integrated into the discussions in COMPSCI 112S.", "raw_info": "COMPSCI  112S\nThe aim of this course is to critically analyze digital culture from a feminist and gender studies perspective. We will address topics related to digital innovation and its history, unpacking and questioning them through the insights offered by genders studies analytical tools. Subjects such as the rise of the Silicon Valley, gaming culture, social media, algorithms, Artificial Intelligence, extraction of data applied to biotechnology, macroeconomic development of IT platforms and the impact of technology on ecology will be discussed starting from a current event or debate, to which we will give a historical, ethical, sociological, theoretical, literary or cinematographic perspective.\n"}
{"question": "What is the course number for the advanced theoretical computer science course focused on graph algorithms?", "answer": "The course number is COMPSCI 638.", "raw_info": "COMPSCI  638\nThis is an advanced course in theoretical computer science covering some of the most influential work in graph algorithms. Given the broad impact that graph algorithms have had on the general algorithmic toolkit, this course also provides exposure to many key techniques that have been developed in algorithmic theory. Specific topics covered include network flows, graph connectivity, spectral graph theory, and network design algorithms. Recommended prerequisite: Computer Science 532 or an equivalent course in algorithms at a graduate level.\n"}
{"question": "What are some of the specific topics covered in COMPSCI 638?", "answer": "Specific topics include network flows, graph connectivity, spectral graph theory, and network design algorithms.", "raw_info": "COMPSCI  638\nThis is an advanced course in theoretical computer science covering some of the most influential work in graph algorithms. Given the broad impact that graph algorithms have had on the general algorithmic toolkit, this course also provides exposure to many key techniques that have been developed in algorithmic theory. Specific topics covered include network flows, graph connectivity, spectral graph theory, and network design algorithms. Recommended prerequisite: Computer Science 532 or an equivalent course in algorithms at a graduate level.\n"}
{"question": "What is the recommended prerequisite for enrolling in COMPSCI 638?", "answer": "The recommended prerequisite is Computer Science 532 or an equivalent course in algorithms at a graduate level.", "raw_info": "COMPSCI  638\nThis is an advanced course in theoretical computer science covering some of the most influential work in graph algorithms. Given the broad impact that graph algorithms have had on the general algorithmic toolkit, this course also provides exposure to many key techniques that have been developed in algorithmic theory. Specific topics covered include network flows, graph connectivity, spectral graph theory, and network design algorithms. Recommended prerequisite: Computer Science 532 or an equivalent course in algorithms at a graduate level.\n"}
{"question": "Why might a student choose to take COMPSCI 638?", "answer": "A student might choose to take COMPSCI 638 to gain exposure to key techniques in algorithmic theory and learn about influential work in graph algorithms.", "raw_info": "COMPSCI  638\nThis is an advanced course in theoretical computer science covering some of the most influential work in graph algorithms. Given the broad impact that graph algorithms have had on the general algorithmic toolkit, this course also provides exposure to many key techniques that have been developed in algorithmic theory. Specific topics covered include network flows, graph connectivity, spectral graph theory, and network design algorithms. Recommended prerequisite: Computer Science 532 or an equivalent course in algorithms at a graduate level.\n"}
{"question": "Does COMPSCI 638 require prior knowledge in algorithms?", "answer": "Yes, it is recommended to have completed Computer Science 532 or an equivalent graduate-level course in algorithms before taking COMPSCI 638.", "raw_info": "COMPSCI  638\nThis is an advanced course in theoretical computer science covering some of the most influential work in graph algorithms. Given the broad impact that graph algorithms have had on the general algorithmic toolkit, this course also provides exposure to many key techniques that have been developed in algorithmic theory. Specific topics covered include network flows, graph connectivity, spectral graph theory, and network design algorithms. Recommended prerequisite: Computer Science 532 or an equivalent course in algorithms at a graduate level.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 316D at this institution?", "answer": "The prerequisites for COMPSCI 316D are Computer Science 201 and either Computer Science 210D or Computer Science/Electrical & Computer Engineering 250D.", "raw_info": "COMPSCI  316D\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: Computer Science 201, and Computer Science 210D or 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "What topics are covered in Professor's course, COMPSCI 316D?", "answer": "COMPSCI 316D covers databases and relational database management systems, including data modeling, database design theory, data definition and manipulation languages, storage and indexing techniques, query processing and optimization, concurrency control and recovery, and database programming interfaces.", "raw_info": "COMPSCI  316D\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: Computer Science 201, and Computer Science 210D or 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Does COMPSCI 316D include any hands-on projects?", "answer": "Yes, COMPSCI 316D includes hands-on programming projects and a term project.", "raw_info": "COMPSCI  316D\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: Computer Science 201, and Computer Science 210D or 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Are there any current research issues discussed in COMPSCI 316D?", "answer": "Yes, current research issues discussed in COMPSCI 316D include XML, web data management, data integration and dissemination, and data mining.", "raw_info": "COMPSCI  316D\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: Computer Science 201, and Computer Science 210D or 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "Is the course COMPSCI 316D suitable for someone who has not completed Computer Science 201?", "answer": "No, COMPSCI 316D is not suitable for someone who has not completed Computer Science 201, as it is a prerequisite for the course.", "raw_info": "COMPSCI  316D\nDatabases and relational database management systems. Data modeling, database design theory, data definition and manipulation languages, storaging and indexing techniques, query processing and optimization, concurrency control and recovery, database programming interfaces. Current research issues including XML, web data management, data integration and dissemination, data mining. Hands-on programming projects and a term project. Prerequisite: Computer Science 201, and Computer Science 210D or 250D.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210D or Computer Science/Electrical & Computer Egr 250D)\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 323D?", "answer": "The prerequisites for COMPSCI 323D are CompSci 230, CompSci 232, or 200-level courses in Mathematics or Statistical Science.", "raw_info": "COMPSCI  323D\nUse of computational techniques to operationalize basic concepts from economics. Expressive marketplaces: combinatorial auctions and exchanges, winner determination problem. Game theory: normal and extensive-form games, equilibrium notions, computing equilibria. Mechanism design: auction theory, automated mechanism design.\nPrerequisites\nPrerequisite: CompSci 230, CompSci 232, 200-level Mathematics, or 200-level Statistical Science\n"}
{"question": "What topics related to game theory are covered in COMPSCI 323D?", "answer": "In COMPSCI 323D, the game theory topics covered include normal and extensive-form games, equilibrium notions, and computing equilibria.", "raw_info": "COMPSCI  323D\nUse of computational techniques to operationalize basic concepts from economics. Expressive marketplaces: combinatorial auctions and exchanges, winner determination problem. Game theory: normal and extensive-form games, equilibrium notions, computing equilibria. Mechanism design: auction theory, automated mechanism design.\nPrerequisites\nPrerequisite: CompSci 230, CompSci 232, 200-level Mathematics, or 200-level Statistical Science\n"}
{"question": "Does COMPSCI 323D include the study of mechanism design, and if so, what specific areas are included?", "answer": "Yes, COMPSCI 323D includes the study of mechanism design, focusing on auction theory and automated mechanism design.", "raw_info": "COMPSCI  323D\nUse of computational techniques to operationalize basic concepts from economics. Expressive marketplaces: combinatorial auctions and exchanges, winner determination problem. Game theory: normal and extensive-form games, equilibrium notions, computing equilibria. Mechanism design: auction theory, automated mechanism design.\nPrerequisites\nPrerequisite: CompSci 230, CompSci 232, 200-level Mathematics, or 200-level Statistical Science\n"}
{"question": "In COMPSCI 323D, what types of marketplaces are studied, and what is one specific problem addressed?", "answer": "COMPSCI 323D studies expressive marketplaces, such as combinatorial auctions and exchanges, and addresses the winner determination problem.", "raw_info": "COMPSCI  323D\nUse of computational techniques to operationalize basic concepts from economics. Expressive marketplaces: combinatorial auctions and exchanges, winner determination problem. Game theory: normal and extensive-form games, equilibrium notions, computing equilibria. Mechanism design: auction theory, automated mechanism design.\nPrerequisites\nPrerequisite: CompSci 230, CompSci 232, 200-level Mathematics, or 200-level Statistical Science\n"}
{"question": "What are the prerequisites for COMPSCI 630?", "answer": "The prerequisite for COMPSCI 630 is Computer Science 532.", "raw_info": "COMPSCI  630\nModels of computation, Las Vegas and Monte Carlo algorithms, linearity of expectation, Markov and Chebyshev inequalities and their applications, Chernoff bound and its applications, probabilistic methods, expanders, Markov chains and random walk, electric networks and random walks, rapidly mixing Markov chains, randomized data structures, randomized algorithms for graph problems, randomized geometric algorithms, number theoretic algorithms, RSA cryptosystem, derandomization. Prerequisite: Computer Science 532.\n"}
{"question": "Which cryptographic algorithm is covered in COMPSCI 630 under number theoretic algorithms?", "answer": "The RSA cryptosystem is covered in COMPSCI 630 under number theoretic algorithms.", "raw_info": "COMPSCI  630\nModels of computation, Las Vegas and Monte Carlo algorithms, linearity of expectation, Markov and Chebyshev inequalities and their applications, Chernoff bound and its applications, probabilistic methods, expanders, Markov chains and random walk, electric networks and random walks, rapidly mixing Markov chains, randomized data structures, randomized algorithms for graph problems, randomized geometric algorithms, number theoretic algorithms, RSA cryptosystem, derandomization. Prerequisite: Computer Science 532.\n"}
{"question": "Are randomized data structures a topic of study in COMPSCI 630?", "answer": "Yes, randomized data structures are a topic of study in COMPSCI 630.", "raw_info": "COMPSCI  630\nModels of computation, Las Vegas and Monte Carlo algorithms, linearity of expectation, Markov and Chebyshev inequalities and their applications, Chernoff bound and its applications, probabilistic methods, expanders, Markov chains and random walk, electric networks and random walks, rapidly mixing Markov chains, randomized data structures, randomized algorithms for graph problems, randomized geometric algorithms, number theoretic algorithms, RSA cryptosystem, derandomization. Prerequisite: Computer Science 532.\n"}
{"question": "Does COMPSCI 630 include the study of the Chernoff bound and its applications?", "answer": "Yes, COMPSCI 630 includes the study of the Chernoff bound and its applications.", "raw_info": "COMPSCI  630\nModels of computation, Las Vegas and Monte Carlo algorithms, linearity of expectation, Markov and Chebyshev inequalities and their applications, Chernoff bound and its applications, probabilistic methods, expanders, Markov chains and random walk, electric networks and random walks, rapidly mixing Markov chains, randomized data structures, randomized algorithms for graph problems, randomized geometric algorithms, number theoretic algorithms, RSA cryptosystem, derandomization. Prerequisite: Computer Science 532.\n"}
{"question": "Is the concept of rapidly mixing Markov chains covered in the COMPSCI 630 course?", "answer": "Yes, the concept of rapidly mixing Markov chains is covered in COMPSCI 630.", "raw_info": "COMPSCI  630\nModels of computation, Las Vegas and Monte Carlo algorithms, linearity of expectation, Markov and Chebyshev inequalities and their applications, Chernoff bound and its applications, probabilistic methods, expanders, Markov chains and random walk, electric networks and random walks, rapidly mixing Markov chains, randomized data structures, randomized algorithms for graph problems, randomized geometric algorithms, number theoretic algorithms, RSA cryptosystem, derandomization. Prerequisite: Computer Science 532.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 201?", "answer": "The prerequisite for enrolling in COMPSCI 201 is completing Computer Science 101, 102, or 116, or Engineering 103L, or having an equivalent background.", "raw_info": "COMPSCI  201\nAnalysis, use, and design of data structures and algorithms using an object-oriented language like Java to solve computational problems. Emphasis on abstraction including interfaces and abstract data types for lists, trees, sets, tables/maps, and graphs. Implementation and evaluation of programming techniques including recursion. Intuitive and rigorous analysis of algorithms. Prerequisite: Computer Science 101, 102, or 116, or Engineering 103L, or equivalent.\n"}
{"question": "In COMPSCI 201, what programming language is used for teaching data structures and algorithms?", "answer": "In COMPSCI 201, an object-oriented language like Java is used for teaching data structures and algorithms.", "raw_info": "COMPSCI  201\nAnalysis, use, and design of data structures and algorithms using an object-oriented language like Java to solve computational problems. Emphasis on abstraction including interfaces and abstract data types for lists, trees, sets, tables/maps, and graphs. Implementation and evaluation of programming techniques including recursion. Intuitive and rigorous analysis of algorithms. Prerequisite: Computer Science 101, 102, or 116, or Engineering 103L, or equivalent.\n"}
{"question": "What key concepts are emphasized in COMPSCI 201?", "answer": "COMPSCI 201 emphasizes abstraction including interfaces and abstract data types for lists, trees, sets, tables/maps, and graphs, as well as the implementation and evaluation of programming techniques, including recursion.", "raw_info": "COMPSCI  201\nAnalysis, use, and design of data structures and algorithms using an object-oriented language like Java to solve computational problems. Emphasis on abstraction including interfaces and abstract data types for lists, trees, sets, tables/maps, and graphs. Implementation and evaluation of programming techniques including recursion. Intuitive and rigorous analysis of algorithms. Prerequisite: Computer Science 101, 102, or 116, or Engineering 103L, or equivalent.\n"}
{"question": "Does COMPSCI 201 include an analysis of algorithms?", "answer": "Yes, COMPSCI 201 includes both intuitive and rigorous analysis of algorithms.", "raw_info": "COMPSCI  201\nAnalysis, use, and design of data structures and algorithms using an object-oriented language like Java to solve computational problems. Emphasis on abstraction including interfaces and abstract data types for lists, trees, sets, tables/maps, and graphs. Implementation and evaluation of programming techniques including recursion. Intuitive and rigorous analysis of algorithms. Prerequisite: Computer Science 101, 102, or 116, or Engineering 103L, or equivalent.\n"}
{"question": "What are some of the topics covered in COMPSCI 510?", "answer": "COMPSCI 510 covers fundamental principles of operating system design, especially applied to multiprocessors and distributed systems. Topics include process management, shared memory management, and distributed file systems.", "raw_info": "COMPSCI  510\nFundamental principles of operating system design applied to state-of-the-art computing environments (multiprocessors and distributed systems) including process management (coscheduling and load balancing), shared memory management (data migration and consistency), and distributed file systems.\n"}
{"question": "Does COMPSCI 510 include the study of shared memory management?", "answer": "Yes, COMPSCI 510 includes the study of shared memory management, focusing on data migration and consistency.", "raw_info": "COMPSCI  510\nFundamental principles of operating system design applied to state-of-the-art computing environments (multiprocessors and distributed systems) including process management (coscheduling and load balancing), shared memory management (data migration and consistency), and distributed file systems.\n"}
{"question": "In COMPSCI 510, what are some of the aspects of process management that are studied?", "answer": "In COMPSCI 510, aspects of process management such as coscheduling and load balancing are studied.", "raw_info": "COMPSCI  510\nFundamental principles of operating system design applied to state-of-the-art computing environments (multiprocessors and distributed systems) including process management (coscheduling and load balancing), shared memory management (data migration and consistency), and distributed file systems.\n"}
{"question": "Is the study of distributed file systems part of the COMPSCI 510 curriculum?", "answer": "Yes, the study of distributed file systems is part of the curriculum in COMPSCI 510.", "raw_info": "COMPSCI  510\nFundamental principles of operating system design applied to state-of-the-art computing environments (multiprocessors and distributed systems) including process management (coscheduling and load balancing), shared memory management (data migration and consistency), and distributed file systems.\n"}
{"question": "What computing environments are emphasized in the COMPSCI 510 course?", "answer": "COMPSCI 510 emphasizes state-of-the-art computing environments, including multiprocessors and distributed systems.", "raw_info": "COMPSCI  510\nFundamental principles of operating system design applied to state-of-the-art computing environments (multiprocessors and distributed systems) including process management (coscheduling and load balancing), shared memory management (data migration and consistency), and distributed file systems.\n"}
{"question": "What is the course number for the class that offers informational seminars to first-year Computer Science masters students at Duke University?", "answer": "The course number is COMPSCI 704.", "raw_info": "COMPSCI  704\nClass for first-year Computer Science masters students offering informational seminars from experts inside and outside of Duke University, including faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke. Students learn about the various types of internships and career options, understand methods and strategies for applying for jobs/internships, learn how to create/improve their resumes, hone their presentation skills (in person and virtual), receive leadership coaching, and more. Recommended prerequisite: First-semester Computer Science Masters students.\n"}
{"question": "Who are some of the experts that offer seminars in COMPSCI 704?", "answer": "Experts include faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke University.", "raw_info": "COMPSCI  704\nClass for first-year Computer Science masters students offering informational seminars from experts inside and outside of Duke University, including faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke. Students learn about the various types of internships and career options, understand methods and strategies for applying for jobs/internships, learn how to create/improve their resumes, hone their presentation skills (in person and virtual), receive leadership coaching, and more. Recommended prerequisite: First-semester Computer Science Masters students.\n"}
{"question": "What skills are emphasized in the COMPSCI 704 class?", "answer": "Students learn to improve resumes, enhance presentation skills (both in person and virtual), and receive leadership coaching.", "raw_info": "COMPSCI  704\nClass for first-year Computer Science masters students offering informational seminars from experts inside and outside of Duke University, including faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke. Students learn about the various types of internships and career options, understand methods and strategies for applying for jobs/internships, learn how to create/improve their resumes, hone their presentation skills (in person and virtual), receive leadership coaching, and more. Recommended prerequisite: First-semester Computer Science Masters students.\n"}
{"question": "What is the recommended prerequisite for enrolling in COMPSCI 704?", "answer": "It is recommended for first-semester Computer Science Masters students.", "raw_info": "COMPSCI  704\nClass for first-year Computer Science masters students offering informational seminars from experts inside and outside of Duke University, including faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke. Students learn about the various types of internships and career options, understand methods and strategies for applying for jobs/internships, learn how to create/improve their resumes, hone their presentation skills (in person and virtual), receive leadership coaching, and more. Recommended prerequisite: First-semester Computer Science Masters students.\n"}
{"question": "Does COMPSCI 704 help students with job and internship applications?", "answer": "Yes, the course helps students understand methods and strategies for applying for jobs and internships.", "raw_info": "COMPSCI  704\nClass for first-year Computer Science masters students offering informational seminars from experts inside and outside of Duke University, including faculty, industry professionals, career center staff, and administrators from institutes and centers around Duke. Students learn about the various types of internships and career options, understand methods and strategies for applying for jobs/internships, learn how to create/improve their resumes, hone their presentation skills (in person and virtual), receive leadership coaching, and more. Recommended prerequisite: First-semester Computer Science Masters students.\n"}
{"question": "What are the prerequisite courses for COMPSCI 572?", "answer": "The prerequisites for COMPSCI 572 are either COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing.", "raw_info": "COMPSCI  572\nIntroduction to the modern methodologies underlying natural language processing, with a focus on machine learning and deep learning. Topics include language modeling, classification, generative and discriminative models of sequences and trees, and semantics. The course will also cover important NLP applications, such as question answering, machine translation, and summarization. Prerequisites: undergraduate machine learning (COMPSCI 370 or 371) or statistical inference (STA 250D / MATH 342D), probability (MATH 230 / STA 230), linear algebra (MATH 221, 218 or 216), and programming in python.\nPrerequisites\nPrerequisite: COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing\n"}
{"question": "Does COMPSCI 572 require knowledge of Python programming?", "answer": "Yes, COMPSCI 572 requires programming knowledge in Python.", "raw_info": "COMPSCI  572\nIntroduction to the modern methodologies underlying natural language processing, with a focus on machine learning and deep learning. Topics include language modeling, classification, generative and discriminative models of sequences and trees, and semantics. The course will also cover important NLP applications, such as question answering, machine translation, and summarization. Prerequisites: undergraduate machine learning (COMPSCI 370 or 371) or statistical inference (STA 250D / MATH 342D), probability (MATH 230 / STA 230), linear algebra (MATH 221, 218 or 216), and programming in python.\nPrerequisites\nPrerequisite: COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing\n"}
{"question": "Who is the target audience for COMPSCI 572, considering the prerequisites?", "answer": "COMPSCI 572 is targeted at students who have completed specific undergraduate courses in machine learning or statistical inference and have a background in probability, linear algebra, and Python programming, or students with graduate standing.", "raw_info": "COMPSCI  572\nIntroduction to the modern methodologies underlying natural language processing, with a focus on machine learning and deep learning. Topics include language modeling, classification, generative and discriminative models of sequences and trees, and semantics. The course will also cover important NLP applications, such as question answering, machine translation, and summarization. Prerequisites: undergraduate machine learning (COMPSCI 370 or 371) or statistical inference (STA 250D / MATH 342D), probability (MATH 230 / STA 230), linear algebra (MATH 221, 218 or 216), and programming in python.\nPrerequisites\nPrerequisite: COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing\n"}
{"question": "Can I enroll in COMPSCI 572 if I have only completed an undergraduate course in probability?", "answer": "To enroll in COMPSCI 572, you must also have completed courses in machine learning or statistical inference, specific linear algebra courses, and have programming skills in Python, unless you have graduate standing.", "raw_info": "COMPSCI  572\nIntroduction to the modern methodologies underlying natural language processing, with a focus on machine learning and deep learning. Topics include language modeling, classification, generative and discriminative models of sequences and trees, and semantics. The course will also cover important NLP applications, such as question answering, machine translation, and summarization. Prerequisites: undergraduate machine learning (COMPSCI 370 or 371) or statistical inference (STA 250D / MATH 342D), probability (MATH 230 / STA 230), linear algebra (MATH 221, 218 or 216), and programming in python.\nPrerequisites\nPrerequisite: COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing\n"}
{"question": "What major topics will be covered in COMPSCI 572?", "answer": "COMPSCI 572 will cover language modeling, classification, generative and discriminative models of sequences and trees, semantics, and NLP applications such as question answering, machine translation, and summarization.", "raw_info": "COMPSCI  572\nIntroduction to the modern methodologies underlying natural language processing, with a focus on machine learning and deep learning. Topics include language modeling, classification, generative and discriminative models of sequences and trees, and semantics. The course will also cover important NLP applications, such as question answering, machine translation, and summarization. Prerequisites: undergraduate machine learning (COMPSCI 370 or 371) or statistical inference (STA 250D / MATH 342D), probability (MATH 230 / STA 230), linear algebra (MATH 221, 218 or 216), and programming in python.\nPrerequisites\nPrerequisite: COMPSCI 370D or 371; OR STA 230/MATH 230 and STA 250D/MATH 342D and (MATH 221, 216, or 218); OR graduate standing\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 250D?", "answer": "The prerequisite for COMPSCI 250D is Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  250D\nComputer structure, assembly language, instruction execution, addressing techniques, and digital representation of data. Computer system organization, logic design, microprogramming, cache and memory systems, and input/output interfaces. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "If I have taken a course similar to Computer Science 201 at another institution, can I enroll in COMPSCI 250D?", "answer": "Yes, if the course you took is equivalent to Computer Science 201, you meet the prerequisite for COMPSCI 250D.", "raw_info": "COMPSCI  250D\nComputer structure, assembly language, instruction execution, addressing techniques, and digital representation of data. Computer system organization, logic design, microprogramming, cache and memory systems, and input/output interfaces. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 250D cover topics related to cache and memory systems?", "answer": "Yes, COMPSCI 250D covers cache and memory systems as part of its curriculum.", "raw_info": "COMPSCI  250D\nComputer structure, assembly language, instruction execution, addressing techniques, and digital representation of data. Computer system organization, logic design, microprogramming, cache and memory systems, and input/output interfaces. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Who do I contact if I want more details about COMPSCI 250D prerequisites?", "answer": "For more details about the prerequisites for COMPSCI 250D, it would be best to contact the course instructor or the Computer Science department advising office.", "raw_info": "COMPSCI  250D\nComputer structure, assembly language, instruction execution, addressing techniques, and digital representation of data. Computer system organization, logic design, microprogramming, cache and memory systems, and input/output interfaces. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Will COMPSCI 250D teach me about assembly language and instruction execution?", "answer": "Yes, COMPSCI 250D includes topics such as assembly language and instruction execution.", "raw_info": "COMPSCI  250D\nComputer structure, assembly language, instruction execution, addressing techniques, and digital representation of data. Computer system organization, logic design, microprogramming, cache and memory systems, and input/output interfaces. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is the course number for the class focused on techniques and best practices for solving programming and algorithmic problems in technical interviews?", "answer": "The course number is COMPSCI 243.", "raw_info": "COMPSCI  243\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing and discussion of what works and does not work. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Which platforms will COMPSCI 243 students participate in for problem-solving practice?", "answer": "Students will participate in LeetCode, HackerRank, and APT problems.", "raw_info": "COMPSCI  243\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing and discussion of what works and does not work. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 243 have any prerequisites, and if so, what are they?", "answer": "Yes, the prerequisite for COMPSCI 243 is Computer Science 201 or equivalent.", "raw_info": "COMPSCI  243\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing and discussion of what works and does not work. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What educational activities are emphasized in Professor Sarita Adve's COMPSCI 243 class to aid in solving technical interview problems?", "answer": "The class emphasizes role-playing and discussions to understand what works and does not work in solving technical interview problems.", "raw_info": "COMPSCI  243\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing and discussion of what works and does not work. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Who is the target audience for the Techniques and Best Practices course listed as COMPSCI 243?", "answer": "The target audience is students who have completed Computer Science 201 or its equivalent.", "raw_info": "COMPSCI  243\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing and discussion of what works and does not work. Prerequisite: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What does COMPSCI 562 focus on in terms of computational techniques?", "answer": "COMPSCI 562 focuses on computational imaging aspects of cryo-electron microscopy (EM), including image enhancement, reconstruction, classification, and burst movie processing to determine high-resolution 3D structures of proteins.", "raw_info": "COMPSCI  562\nCryo-electron microscopy (EM) is a Nobel Prize winning technique to determine the structure of proteins and protein complexes at molecular resolution. Computational imaging aspects of cryo-EM, including image enhancement, reconstruction, classification and burst movie processing used to determine the high-resolution structure of proteins in 3D. Overview of the structure determination pipeline, focusing primarily on the data analysis aspects of the technique including the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins. Recommended prerequisite: Programming experience.\n"}
{"question": "Are there any prerequisites recommended for enrolling in COMPSCI 562?", "answer": "Yes, programming experience is recommended as a prerequisite for enrolling in COMPSCI 562.", "raw_info": "COMPSCI  562\nCryo-electron microscopy (EM) is a Nobel Prize winning technique to determine the structure of proteins and protein complexes at molecular resolution. Computational imaging aspects of cryo-EM, including image enhancement, reconstruction, classification and burst movie processing used to determine the high-resolution structure of proteins in 3D. Overview of the structure determination pipeline, focusing primarily on the data analysis aspects of the technique including the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins. Recommended prerequisite: Programming experience.\n"}
{"question": "Does COMPSCI 562 involve the use of machine learning and deep learning strategies?", "answer": "Yes, COMPSCI 562 involves the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins.", "raw_info": "COMPSCI  562\nCryo-electron microscopy (EM) is a Nobel Prize winning technique to determine the structure of proteins and protein complexes at molecular resolution. Computational imaging aspects of cryo-EM, including image enhancement, reconstruction, classification and burst movie processing used to determine the high-resolution structure of proteins in 3D. Overview of the structure determination pipeline, focusing primarily on the data analysis aspects of the technique including the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins. Recommended prerequisite: Programming experience.\n"}
{"question": "What Nobel Prize-winning technique is the subject of study in COMPSCI 562?", "answer": "COMPSCI 562 studies cryo-electron microscopy (EM), a Nobel Prize-winning technique for determining the structure of proteins and protein complexes at molecular resolution.", "raw_info": "COMPSCI  562\nCryo-electron microscopy (EM) is a Nobel Prize winning technique to determine the structure of proteins and protein complexes at molecular resolution. Computational imaging aspects of cryo-EM, including image enhancement, reconstruction, classification and burst movie processing used to determine the high-resolution structure of proteins in 3D. Overview of the structure determination pipeline, focusing primarily on the data analysis aspects of the technique including the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins. Recommended prerequisite: Programming experience.\n"}
{"question": "In COMPSCI 562, what is one of the primary focuses within the structure determination pipeline?", "answer": "In COMPSCI 562, one of the primary focuses within the structure determination pipeline is the data analysis aspects of the technique.", "raw_info": "COMPSCI  562\nCryo-electron microscopy (EM) is a Nobel Prize winning technique to determine the structure of proteins and protein complexes at molecular resolution. Computational imaging aspects of cryo-EM, including image enhancement, reconstruction, classification and burst movie processing used to determine the high-resolution structure of proteins in 3D. Overview of the structure determination pipeline, focusing primarily on the data analysis aspects of the technique including the application of machine learning and deep learning strategies to extract atomic resolution information from millions of noisy images of proteins. Recommended prerequisite: Programming experience.\n"}
{"question": "What is the course number for the class that covers different advanced topics in Computer Science?", "answer": "The course number is COMPSCI 590D.", "raw_info": "COMPSCI  590D\nDifferent advanced topics in Computer Science.\n"}
{"question": "What subject matter does COMPSCI 590D cover?", "answer": "COMPSCI 590D covers different advanced topics in Computer Science.", "raw_info": "COMPSCI  590D\nDifferent advanced topics in Computer Science.\n"}
{"question": "Is COMPSCI 590D a beginner or an advanced course in Computer Science?", "answer": "COMPSCI 590D is an advanced course in Computer Science.", "raw_info": "COMPSCI  590D\nDifferent advanced topics in Computer Science.\n"}
{"question": "Can a PhD student enroll in COMPSCI 791 in multiple semesters?", "answer": "Yes, a PhD student may take an internship through COMPSCI 791 in Fall, Spring, or Summer semesters and may repeat the course with consent from their advisor and the director of graduate studies.", "raw_info": "COMPSCI  791\nStudent gains practical computer science experience by taking a job in industry, and writes a report about this experience. Requires prior consent from the student's advisor or from the director of graduate studies. For PhDs, internship may be taken in Fall, Spring, or Summer semesters and may be repeated with consent of the advisor and the director of graduate studies. Master's students may do an internship after completion of first year; academic year internships for master's students may be approved only after consultation with the director of graduate studies. Credit/no credit grading only.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What is required for a master's student to enroll in COMPSCI 791 for an academic year internship?", "answer": "A master's student must consult with the director of graduate studies to gain approval for an academic year internship through COMPSCI 791.", "raw_info": "COMPSCI  791\nStudent gains practical computer science experience by taking a job in industry, and writes a report about this experience. Requires prior consent from the student's advisor or from the director of graduate studies. For PhDs, internship may be taken in Fall, Spring, or Summer semesters and may be repeated with consent of the advisor and the director of graduate studies. Master's students may do an internship after completion of first year; academic year internships for master's students may be approved only after consultation with the director of graduate studies. Credit/no credit grading only.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "Are grades awarded for COMPSCI 791, or is it graded differently?", "answer": "COMPSCI 791 is graded on a credit/no credit basis only.", "raw_info": "COMPSCI  791\nStudent gains practical computer science experience by taking a job in industry, and writes a report about this experience. Requires prior consent from the student's advisor or from the director of graduate studies. For PhDs, internship may be taken in Fall, Spring, or Summer semesters and may be repeated with consent of the advisor and the director of graduate studies. Master's students may do an internship after completion of first year; academic year internships for master's students may be approved only after consultation with the director of graduate studies. Credit/no credit grading only.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What must a student provide to be able to enroll in COMPSCI 791?", "answer": "A student must obtain consent from their advisor or from the director of graduate studies to enroll in COMPSCI 791.", "raw_info": "COMPSCI  791\nStudent gains practical computer science experience by taking a job in industry, and writes a report about this experience. Requires prior consent from the student's advisor or from the director of graduate studies. For PhDs, internship may be taken in Fall, Spring, or Summer semesters and may be repeated with consent of the advisor and the director of graduate studies. Master's students may do an internship after completion of first year; academic year internships for master's students may be approved only after consultation with the director of graduate studies. Credit/no credit grading only.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "When can a master's student first consider enrolling in COMPSCI 791 for an internship?", "answer": "A master's student may consider enrolling in COMPSCI 791 after completing their first year.", "raw_info": "COMPSCI  791\nStudent gains practical computer science experience by taking a job in industry, and writes a report about this experience. Requires prior consent from the student's advisor or from the director of graduate studies. For PhDs, internship may be taken in Fall, Spring, or Summer semesters and may be repeated with consent of the advisor and the director of graduate studies. Master's students may do an internship after completion of first year; academic year internships for master's students may be approved only after consultation with the director of graduate studies. Credit/no credit grading only.\nEnroll Consent\nInstructor Consent Required\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 515?", "answer": "The prerequisites for enrolling in COMPSCI 515 are Electrical and Computer Engineering 356 or Computer Science 310.", "raw_info": "COMPSCI  515\nTheory, design, and implementation of mobile wireless networking systems. Fundamentals of wireless networking and key research challenges. Students review pertinent journal papers. Significant, semester-long research project. Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking. Prerequisites: Electrical and Computer Engineering 356 or Computer Science 310.\n"}
{"question": "What type of project is involved in COMPSCI 515?", "answer": "COMPSCI 515 involves a significant, semester-long research project.", "raw_info": "COMPSCI  515\nTheory, design, and implementation of mobile wireless networking systems. Fundamentals of wireless networking and key research challenges. Students review pertinent journal papers. Significant, semester-long research project. Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking. Prerequisites: Electrical and Computer Engineering 356 or Computer Science 310.\n"}
{"question": "Which networking topics are covered in COMPSCI 515?", "answer": "Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking are covered in COMPSCI 515.", "raw_info": "COMPSCI  515\nTheory, design, and implementation of mobile wireless networking systems. Fundamentals of wireless networking and key research challenges. Students review pertinent journal papers. Significant, semester-long research project. Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking. Prerequisites: Electrical and Computer Engineering 356 or Computer Science 310.\n"}
{"question": "Does COMPSCI 515 include a review of journal papers?", "answer": "Yes, students in COMPSCI 515 review pertinent journal papers.", "raw_info": "COMPSCI  515\nTheory, design, and implementation of mobile wireless networking systems. Fundamentals of wireless networking and key research challenges. Students review pertinent journal papers. Significant, semester-long research project. Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking. Prerequisites: Electrical and Computer Engineering 356 or Computer Science 310.\n"}
{"question": "What is the focus of COMPSCI 515?", "answer": "COMPSCI 515 focuses on the theory, design, and implementation of mobile wireless networking systems, including the fundamentals of wireless networking and key research challenges.", "raw_info": "COMPSCI  515\nTheory, design, and implementation of mobile wireless networking systems. Fundamentals of wireless networking and key research challenges. Students review pertinent journal papers. Significant, semester-long research project. Networking protocols (Physical and MAC, multi-hop routing, wireless TCP, applications), mobility management, security, and sensor networking. Prerequisites: Electrical and Computer Engineering 356 or Computer Science 310.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 554?", "answer": "The prerequisite for enrolling in COMPSCI 554 is Electrical and Computer Engineering 250D or an equivalent course.", "raw_info": "COMPSCI  554\nTechnological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test. Prerequisite: Electrical and Computer Engineering 250D or equivalent.\n"}
{"question": "What topics are covered in COMPSCI 554 taught by the professor?", "answer": "COMPSCI 554 covers technological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test.", "raw_info": "COMPSCI  554\nTechnological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test. Prerequisite: Electrical and Computer Engineering 250D or equivalent.\n"}
{"question": "Does COMPSCI 554 include learning about fault-tolerant hardware and software?", "answer": "Yes, COMPSCI 554 includes learning about fault-tolerant hardware and software.", "raw_info": "COMPSCI  554\nTechnological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test. Prerequisite: Electrical and Computer Engineering 250D or equivalent.\n"}
{"question": "Are models and analysis for faults part of the COMPSCI 554 curriculum?", "answer": "Yes, modeling and analysis are part of the COMPSCI 554 curriculum.", "raw_info": "COMPSCI  554\nTechnological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test. Prerequisite: Electrical and Computer Engineering 250D or equivalent.\n"}
{"question": "In COMPSCI 554, is design for test a topic that will be studied?", "answer": "Yes, design for test is a topic that will be studied in COMPSCI 554.", "raw_info": "COMPSCI  554\nTechnological reasons for faults, fault models, information redundancy, spatial redundancy, backward and forward error recovery, fault-tolerant hardware and software, modeling and analysis, testing, and design for test. Prerequisite: Electrical and Computer Engineering 250D or equivalent.\n"}
{"question": "What are the prerequisites for COMPSCI 445?", "answer": "The prerequisites for COMPSCI 445 are Mathematics 218 or 221.", "raw_info": "COMPSCI  445\nGeometry of high dimensional data sets. Linear dimension reduction, principal component analysis, kernel methods. Nonlinear dimension reduction, manifold models. Graphs. Random walks on graphs, diffusions, page rank. Clustering, classification and regression in high-dimensions. Sparsity. Computational aspects, randomized algorithms. Prerequisite: Mathematics 218 or 221.\nPrerequisites\nPrerequisite: Mathematics 218 or 221\n"}
{"question": "Which professor teaches the course COMPSCI 445?", "answer": "The professor's name is not provided in the given text for COMPSCI 445.", "raw_info": "COMPSCI  445\nGeometry of high dimensional data sets. Linear dimension reduction, principal component analysis, kernel methods. Nonlinear dimension reduction, manifold models. Graphs. Random walks on graphs, diffusions, page rank. Clustering, classification and regression in high-dimensions. Sparsity. Computational aspects, randomized algorithms. Prerequisite: Mathematics 218 or 221.\nPrerequisites\nPrerequisite: Mathematics 218 or 221\n"}
{"question": "What topics are covered in COMPSCI 445 regarding data sets?", "answer": "COMPSCI 445 covers the geometry of high dimensional data sets, including linear dimension reduction, principal component analysis, kernel methods, nonlinear dimension reduction, manifold models, graphs, random walks on graphs, diffusions, page rank, clustering, classification and regression in high-dimensions, sparsity, computational aspects, and randomized algorithms.", "raw_info": "COMPSCI  445\nGeometry of high dimensional data sets. Linear dimension reduction, principal component analysis, kernel methods. Nonlinear dimension reduction, manifold models. Graphs. Random walks on graphs, diffusions, page rank. Clustering, classification and regression in high-dimensions. Sparsity. Computational aspects, randomized algorithms. Prerequisite: Mathematics 218 or 221.\nPrerequisites\nPrerequisite: Mathematics 218 or 221\n"}
{"question": "Does COMPSCI 445 include any topics related to machine learning techniques?", "answer": "Yes, COMPSCI 445 includes topics like clustering, classification, and regression in high-dimensions, which are related to machine learning techniques.", "raw_info": "COMPSCI  445\nGeometry of high dimensional data sets. Linear dimension reduction, principal component analysis, kernel methods. Nonlinear dimension reduction, manifold models. Graphs. Random walks on graphs, diffusions, page rank. Clustering, classification and regression in high-dimensions. Sparsity. Computational aspects, randomized algorithms. Prerequisite: Mathematics 218 or 221.\nPrerequisites\nPrerequisite: Mathematics 218 or 221\n"}
{"question": "Is understanding graph theory important for COMPSCI 445, and if so, why?", "answer": "Yes, understanding graph theory is important for COMPSCI 445 as it covers topics such as graphs, random walks on graphs, diffusions, and page rank.", "raw_info": "COMPSCI  445\nGeometry of high dimensional data sets. Linear dimension reduction, principal component analysis, kernel methods. Nonlinear dimension reduction, manifold models. Graphs. Random walks on graphs, diffusions, page rank. Clustering, classification and regression in high-dimensions. Sparsity. Computational aspects, randomized algorithms. Prerequisite: Mathematics 218 or 221.\nPrerequisites\nPrerequisite: Mathematics 218 or 221\n"}
{"question": "What topics are covered in COMPSCI 571D?", "answer": "COMPSCI 571D covers probabilistic machine learning concepts, focusing on discriminative and hierarchical generative models. Topics include directed and undirected graphical models, kernel methods, exact and approximate parameter estimation methods, and structure learning.", "raw_info": "COMPSCI  571D\nIntroduction to concepts in probabilistic machine learning with a focus on discriminative and hierarchical generative models. Topics include directed and undirected graphical models, kernel methods, exact and approximate parameter estimation methods, and structure learning. Prerequisite: Linear algebra, Statistical Science 250 or Statistical Science 611.\n"}
{"question": "Are there any prerequisites for enrolling in COMPSCI 571D?", "answer": "Yes, the prerequisites for enrolling in COMPSCI 571D are linear algebra and either Statistical Science 250 or Statistical Science 611.", "raw_info": "COMPSCI  571D\nIntroduction to concepts in probabilistic machine learning with a focus on discriminative and hierarchical generative models. Topics include directed and undirected graphical models, kernel methods, exact and approximate parameter estimation methods, and structure learning. Prerequisite: Linear algebra, Statistical Science 250 or Statistical Science 611.\n"}
{"question": "Does COMPSCI 571D include the study of kernel methods?", "answer": "Yes, kernel methods are among the topics covered in COMPSCI 571D.", "raw_info": "COMPSCI  571D\nIntroduction to concepts in probabilistic machine learning with a focus on discriminative and hierarchical generative models. Topics include directed and undirected graphical models, kernel methods, exact and approximate parameter estimation methods, and structure learning. Prerequisite: Linear algebra, Statistical Science 250 or Statistical Science 611.\n"}
{"question": "Who should you contact if you have questions about the prerequisites for COMPSCI 571D?", "answer": "The text does not mention a specific contact, but typically, questions about prerequisites for a course like COMPSCI 571D can be directed to the course instructor or the academic advisor.", "raw_info": "COMPSCI  571D\nIntroduction to concepts in probabilistic machine learning with a focus on discriminative and hierarchical generative models. Topics include directed and undirected graphical models, kernel methods, exact and approximate parameter estimation methods, and structure learning. Prerequisite: Linear algebra, Statistical Science 250 or Statistical Science 611.\n"}
{"question": "What is the course number for the class that applies AI principles to materials science problems?", "answer": "The course number is COMPSCI 583.", "raw_info": "COMPSCI  583\nAI principles will be applied to a series of materials science example problems, each taught in a module by an expert in materials science or data science. Each module will span 2-3 weeks, demonstrating an array of data science/AI methods in unique materials case studies in advancing discovery or design principles. Prerequisites: ME 221 or equivalent, introductory machine learning course.\nPrerequisites\nPrerequisite: Mechanical Engineering 221L\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 583?", "answer": "The prerequisites for COMPSCI 583 are ME 221 or an equivalent course, and an introductory machine learning course.", "raw_info": "COMPSCI  583\nAI principles will be applied to a series of materials science example problems, each taught in a module by an expert in materials science or data science. Each module will span 2-3 weeks, demonstrating an array of data science/AI methods in unique materials case studies in advancing discovery or design principles. Prerequisites: ME 221 or equivalent, introductory machine learning course.\nPrerequisites\nPrerequisite: Mechanical Engineering 221L\n"}
{"question": "How long does each module last in COMPSCI 583?", "answer": "Each module in COMPSCI 583 spans 2-3 weeks.", "raw_info": "COMPSCI  583\nAI principles will be applied to a series of materials science example problems, each taught in a module by an expert in materials science or data science. Each module will span 2-3 weeks, demonstrating an array of data science/AI methods in unique materials case studies in advancing discovery or design principles. Prerequisites: ME 221 or equivalent, introductory machine learning course.\nPrerequisites\nPrerequisite: Mechanical Engineering 221L\n"}
{"question": "In COMPSCI 583, who teaches each module on materials science example problems?", "answer": "Each module in COMPSCI 583 is taught by an expert in materials science or data science.", "raw_info": "COMPSCI  583\nAI principles will be applied to a series of materials science example problems, each taught in a module by an expert in materials science or data science. Each module will span 2-3 weeks, demonstrating an array of data science/AI methods in unique materials case studies in advancing discovery or design principles. Prerequisites: ME 221 or equivalent, introductory machine learning course.\nPrerequisites\nPrerequisite: Mechanical Engineering 221L\n"}
{"question": "What is an example of a prerequisite course for COMPSCI 583?", "answer": "A prerequisite course is Mechanical Engineering 221L.", "raw_info": "COMPSCI  583\nAI principles will be applied to a series of materials science example problems, each taught in a module by an expert in materials science or data science. Each module will span 2-3 weeks, demonstrating an array of data science/AI methods in unique materials case studies in advancing discovery or design principles. Prerequisites: ME 221 or equivalent, introductory machine learning course.\nPrerequisites\nPrerequisite: Mechanical Engineering 221L\n"}
{"question": "What background knowledge is recommended for enrolling in COMPSCI 226?", "answer": "For COMPSCI 226, it is recommended that students have some knowledge in programming, algorithms, and data analysis. Experience with statistical analysis tools like R, Python, and STATA is encouraged but not required.", "raw_info": "COMPSCI  226\nThis course serves as an introduction to a wide range of user-centered research study design methods and quantitative and qualitative data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies. The course is most suitable for students who have some programming, algorithms, and data analysis background (e.g., an undergraduate computer programming course, such as Computer Science 201). In addition, having statistical knowledge and experience using statistical analysis tools, including R, Python, and STATA, is encouraged but not required.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Is Computer Science 201 a prerequisite for COMPSCI 226?", "answer": "Yes, Computer Science 201 or an equivalent course is a prerequisite for enrolling in COMPSCI 226.", "raw_info": "COMPSCI  226\nThis course serves as an introduction to a wide range of user-centered research study design methods and quantitative and qualitative data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies. The course is most suitable for students who have some programming, algorithms, and data analysis background (e.g., an undergraduate computer programming course, such as Computer Science 201). In addition, having statistical knowledge and experience using statistical analysis tools, including R, Python, and STATA, is encouraged but not required.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 226 require prior knowledge in data analysis techniques?", "answer": "Yes, COMPSCI 226 is most suitable for students who have some data analysis background, although specific statistical tool experience is encouraged but not mandatory.", "raw_info": "COMPSCI  226\nThis course serves as an introduction to a wide range of user-centered research study design methods and quantitative and qualitative data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies. The course is most suitable for students who have some programming, algorithms, and data analysis background (e.g., an undergraduate computer programming course, such as Computer Science 201). In addition, having statistical knowledge and experience using statistical analysis tools, including R, Python, and STATA, is encouraged but not required.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What types of research study design methods are taught in COMPSCI 226?", "answer": "COMPSCI 226 covers a wide range of user-centered research study design methods.", "raw_info": "COMPSCI  226\nThis course serves as an introduction to a wide range of user-centered research study design methods and quantitative and qualitative data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies. The course is most suitable for students who have some programming, algorithms, and data analysis background (e.g., an undergraduate computer programming course, such as Computer Science 201). In addition, having statistical knowledge and experience using statistical analysis tools, including R, Python, and STATA, is encouraged but not required.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Can I take COMPSCI 226 if I don't have experience with R, Python, or STATA?", "answer": "Yes, while experience with R, Python, or STATA is encouraged, it is not a requirement for COMPSCI 226.", "raw_info": "COMPSCI  226\nThis course serves as an introduction to a wide range of user-centered research study design methods and quantitative and qualitative data analysis techniques that students can use to capture users' perceived and real attitudes and behaviors toward technologies and policies. The course is most suitable for students who have some programming, algorithms, and data analysis background (e.g., an undergraduate computer programming course, such as Computer Science 201). In addition, having statistical knowledge and experience using statistical analysis tools, including R, Python, and STATA, is encouraged but not required.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What are the prerequisites required for enrolling in COMPSCI 216?", "answer": "The prerequisites for COMPSCI 216 are a 200-level computer science course, OR a 100-level Statistics course, OR a 200-level Math course, or you must have permission from the instructor.", "raw_info": "COMPSCI  216\nStudy of data and its acquisition, integration, querying, analysis, and visualization. Concepts and computational tools for working with unstructured, semi-structured, and structured data and databases. Interdisciplinary perspectives of data and its impact crossing science, humanities, policy, and social science. Culminating team project applied to real datasets. Prerequisite: 200-level computer science OR 100-level Statistics OR 200-level Math course, or permission of instructor.\n"}
{"question": "Is there a team project component in the course COMPSCI 216?", "answer": "Yes, there is a culminating team project in COMPSCI 216 that is applied to real datasets.", "raw_info": "COMPSCI  216\nStudy of data and its acquisition, integration, querying, analysis, and visualization. Concepts and computational tools for working with unstructured, semi-structured, and structured data and databases. Interdisciplinary perspectives of data and its impact crossing science, humanities, policy, and social science. Culminating team project applied to real datasets. Prerequisite: 200-level computer science OR 100-level Statistics OR 200-level Math course, or permission of instructor.\n"}
{"question": "What types of data are covered in the COMPSCI 216 course?", "answer": "COMPSCI 216 covers unstructured, semi-structured, and structured data.", "raw_info": "COMPSCI  216\nStudy of data and its acquisition, integration, querying, analysis, and visualization. Concepts and computational tools for working with unstructured, semi-structured, and structured data and databases. Interdisciplinary perspectives of data and its impact crossing science, humanities, policy, and social science. Culminating team project applied to real datasets. Prerequisite: 200-level computer science OR 100-level Statistics OR 200-level Math course, or permission of instructor.\n"}
{"question": "Does COMPSCI 216 have an interdisciplinary approach, and if so, which fields does it integrate?", "answer": "Yes, COMPSCI 216 incorporates interdisciplinary perspectives including science, humanities, policy, and social science.", "raw_info": "COMPSCI  216\nStudy of data and its acquisition, integration, querying, analysis, and visualization. Concepts and computational tools for working with unstructured, semi-structured, and structured data and databases. Interdisciplinary perspectives of data and its impact crossing science, humanities, policy, and social science. Culminating team project applied to real datasets. Prerequisite: 200-level computer science OR 100-level Statistics OR 200-level Math course, or permission of instructor.\n"}
{"question": "Can I enroll in COMPSCI 216 if I have not met the specific course prerequisites but have relevant experience?", "answer": "You can enroll in COMPSCI 216 if you have permission from the instructor, even if you have not met the specific course prerequisites.", "raw_info": "COMPSCI  216\nStudy of data and its acquisition, integration, querying, analysis, and visualization. Concepts and computational tools for working with unstructured, semi-structured, and structured data and databases. Interdisciplinary perspectives of data and its impact crossing science, humanities, policy, and social science. Culminating team project applied to real datasets. Prerequisite: 200-level computer science OR 100-level Statistics OR 200-level Math course, or permission of instructor.\n"}
{"question": "What topics are covered in COMPSCI 564?", "answer": "COMPSCI 564 covers design principles and recent advances in edge computing, including edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications.", "raw_info": "COMPSCI  564\nA seminar-format examination of design principles and recent advances in edge computing, a distributed networked system architecture that places computing and storage at multiple locations between the user and the cloud. The class covers edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications. The class focuses on in-depth examinations of key scientific advances in the field. Students complete and present a research-based project, individual or team-based. Prerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing.\nPrerequisites\nPrerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 564?", "answer": "The prerequisites for COMPSCI 564 are ECE/COMPSCI 356, ECE/COMPSCI 350L, ECE 353/COMPSCI 310, or having Graduate Standing.", "raw_info": "COMPSCI  564\nA seminar-format examination of design principles and recent advances in edge computing, a distributed networked system architecture that places computing and storage at multiple locations between the user and the cloud. The class covers edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications. The class focuses on in-depth examinations of key scientific advances in the field. Students complete and present a research-based project, individual or team-based. Prerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing.\nPrerequisites\nPrerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing\n"}
{"question": "Is there a project component in COMPSCI 564, and if so, what does it involve?", "answer": "Yes, there is a project component in COMPSCI 564 where students complete and present a research-based project, which can be individual or team-based.", "raw_info": "COMPSCI  564\nA seminar-format examination of design principles and recent advances in edge computing, a distributed networked system architecture that places computing and storage at multiple locations between the user and the cloud. The class covers edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications. The class focuses on in-depth examinations of key scientific advances in the field. Students complete and present a research-based project, individual or team-based. Prerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing.\nPrerequisites\nPrerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing\n"}
{"question": "Does COMPSCI 564 require any specific level of standing for enrollment?", "answer": "Yes, COMPSCI 564 requires either completion of certain prerequisite courses or Graduate Standing for enrollment.", "raw_info": "COMPSCI  564\nA seminar-format examination of design principles and recent advances in edge computing, a distributed networked system architecture that places computing and storage at multiple locations between the user and the cloud. The class covers edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications. The class focuses on in-depth examinations of key scientific advances in the field. Students complete and present a research-based project, individual or team-based. Prerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing.\nPrerequisites\nPrerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing\n"}
{"question": "In COMPSCI 564, what kind of system architecture does the course focus on?", "answer": "COMPSCI 564 focuses on the distributed networked system architecture of edge computing.", "raw_info": "COMPSCI  564\nA seminar-format examination of design principles and recent advances in edge computing, a distributed networked system architecture that places computing and storage at multiple locations between the user and the cloud. The class covers edge computing platforms, edge-adapted algorithms, and the use of edge in mobile and Internet of Things systems and applications. The class focuses on in-depth examinations of key scientific advances in the field. Students complete and present a research-based project, individual or team-based. Prerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing.\nPrerequisites\nPrerequisite: ECE/COMPSCI 356 or ECE/COMPSCI 350L or ECE 353/COMPSCI 310 or Graduate Standing\n"}
{"question": "What programming language will be taught in COMPSCI 116?", "answer": "COMPSCI 116 teaches basic Python programming skills.", "raw_info": "COMPSCI  116\nIntroduction to computer programming and statistical inference in the process of conducting analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. Exploration of data via visualization and descriptive statistics. Creating predictions with techniques from machine learning and optimization.Testing hypotheses and making statistical inferences. Learn basic Python programming skills to organize and manipulate data in tables, and to visualize data effectively. Discussion of social issues surrounding data analysis such as privacy and bias. No prior programming experience or statistics is required.\n"}
{"question": "Is prior programming experience required to enroll in COMPSCI 116?", "answer": "No, prior programming experience or statistics is not required for COMPSCI 116.", "raw_info": "COMPSCI  116\nIntroduction to computer programming and statistical inference in the process of conducting analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. Exploration of data via visualization and descriptive statistics. Creating predictions with techniques from machine learning and optimization.Testing hypotheses and making statistical inferences. Learn basic Python programming skills to organize and manipulate data in tables, and to visualize data effectively. Discussion of social issues surrounding data analysis such as privacy and bias. No prior programming experience or statistics is required.\n"}
{"question": "What types of data will be analyzed in COMPSCI 116?", "answer": "In COMPSCI 116, students will analyze real-world datasets, including economic data, document collections, geographical data, and social networks.", "raw_info": "COMPSCI  116\nIntroduction to computer programming and statistical inference in the process of conducting analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. Exploration of data via visualization and descriptive statistics. Creating predictions with techniques from machine learning and optimization.Testing hypotheses and making statistical inferences. Learn basic Python programming skills to organize and manipulate data in tables, and to visualize data effectively. Discussion of social issues surrounding data analysis such as privacy and bias. No prior programming experience or statistics is required.\n"}
{"question": "Will COMPSCI 116 cover social issues related to data analysis?", "answer": "Yes, COMPSCI 116 includes a discussion of social issues surrounding data analysis, such as privacy and bias.", "raw_info": "COMPSCI  116\nIntroduction to computer programming and statistical inference in the process of conducting analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. Exploration of data via visualization and descriptive statistics. Creating predictions with techniques from machine learning and optimization.Testing hypotheses and making statistical inferences. Learn basic Python programming skills to organize and manipulate data in tables, and to visualize data effectively. Discussion of social issues surrounding data analysis such as privacy and bias. No prior programming experience or statistics is required.\n"}
{"question": "What statistical skills will students learn in COMPSCI 116?", "answer": "Students in COMPSCI 116 will learn to use visualization, descriptive statistics, hypothesis testing, and statistical inferences.", "raw_info": "COMPSCI  116\nIntroduction to computer programming and statistical inference in the process of conducting analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. Exploration of data via visualization and descriptive statistics. Creating predictions with techniques from machine learning and optimization.Testing hypotheses and making statistical inferences. Learn basic Python programming skills to organize and manipulate data in tables, and to visualize data effectively. Discussion of social issues surrounding data analysis such as privacy and bias. No prior programming experience or statistics is required.\n"}
{"question": "What topics are covered in COMPSCI 514?", "answer": "COMPSCI 514 covers topics such as congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks.", "raw_info": "COMPSCI  514\nEntry-level graduate course. Basic systems support for process-to-process communications across a computer network. The TCP/IP protocol suite and the Berkeley sockets application programs interface. The topics include congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks. Recommended prerequisite: entry-level computer systems course (Computer Science 310, 356, 510); knowledge of the C or Python.\n"}
{"question": "What is the prerequisite knowledge recommended for enrolling in COMPSCI 514?", "answer": "The recommended prerequisites for enrolling in COMPSCI 514 are an entry-level computer systems course (such as Computer Science 310, 356, or 510) and knowledge of either C or Python programming languages.", "raw_info": "COMPSCI  514\nEntry-level graduate course. Basic systems support for process-to-process communications across a computer network. The TCP/IP protocol suite and the Berkeley sockets application programs interface. The topics include congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks. Recommended prerequisite: entry-level computer systems course (Computer Science 310, 356, 510); knowledge of the C or Python.\n"}
{"question": "Does COMPSCI 514 include learning about the TCP/IP protocol suite?", "answer": "Yes, COMPSCI 514 includes learning about the TCP/IP protocol suite as well as the Berkeley sockets application programs interface.", "raw_info": "COMPSCI  514\nEntry-level graduate course. Basic systems support for process-to-process communications across a computer network. The TCP/IP protocol suite and the Berkeley sockets application programs interface. The topics include congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks. Recommended prerequisite: entry-level computer systems course (Computer Science 310, 356, 510); knowledge of the C or Python.\n"}
{"question": "Is knowledge of a specific programming language required for COMPSCI 514?", "answer": "Yes, knowledge of either C or Python programming languages is recommended for COMPSCI 514.", "raw_info": "COMPSCI  514\nEntry-level graduate course. Basic systems support for process-to-process communications across a computer network. The TCP/IP protocol suite and the Berkeley sockets application programs interface. The topics include congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks. Recommended prerequisite: entry-level computer systems course (Computer Science 310, 356, 510); knowledge of the C or Python.\n"}
{"question": "What kind of course is COMPSCI 514, and what does it focus on?", "answer": "COMPSCI 514 is an entry-level graduate course focusing on basic systems support for process-to-process communications across a computer network.", "raw_info": "COMPSCI  514\nEntry-level graduate course. Basic systems support for process-to-process communications across a computer network. The TCP/IP protocol suite and the Berkeley sockets application programs interface. The topics include congestion control, packet scheduling, routing, software defined networking, datacenter networks, network function virtualization, programmable switches, network measurement, remote direct memory access, residential networks, peer-to-peer networks, and content distribution networks. Recommended prerequisite: entry-level computer systems course (Computer Science 310, 356, 510); knowledge of the C or Python.\n"}
{"question": "What is the main focus of COMPSCI 555?", "answer": "The main focus of COMPSCI 555 is on the basic concepts and techniques used in stochastic modeling of systems, with applications to the performance and reliability of computer and communications systems.", "raw_info": "COMPSCI  555\nBasic concepts and techniques used stochastic modeling of systems with applications to performance and reliability of computer and communications system. Elements of probability, random variables (discrete and continuous), expectation, conditional distributions, stochastic processes, discrete and continuous time Markov chains, introduction to queuing systems and networks. Prerequisite: Mathematics 216.\n"}
{"question": "What mathematical concepts are emphasized in COMPSCI 555?", "answer": "COMPSCI 555 emphasizes elements of probability, random variables (discrete and continuous), expectation, conditional distributions, and stochastic processes.", "raw_info": "COMPSCI  555\nBasic concepts and techniques used stochastic modeling of systems with applications to performance and reliability of computer and communications system. Elements of probability, random variables (discrete and continuous), expectation, conditional distributions, stochastic processes, discrete and continuous time Markov chains, introduction to queuing systems and networks. Prerequisite: Mathematics 216.\n"}
{"question": "What prerequisites must be met before taking COMPSCI 555?", "answer": "Before taking COMPSCI 555, students must have completed Mathematics 216.", "raw_info": "COMPSCI  555\nBasic concepts and techniques used stochastic modeling of systems with applications to performance and reliability of computer and communications system. Elements of probability, random variables (discrete and continuous), expectation, conditional distributions, stochastic processes, discrete and continuous time Markov chains, introduction to queuing systems and networks. Prerequisite: Mathematics 216.\n"}
{"question": "Does COMPSCI 555 cover any concepts related to Markov chains?", "answer": "Yes, COMPSCI 555 includes coverage of both discrete and continuous time Markov chains.", "raw_info": "COMPSCI  555\nBasic concepts and techniques used stochastic modeling of systems with applications to performance and reliability of computer and communications system. Elements of probability, random variables (discrete and continuous), expectation, conditional distributions, stochastic processes, discrete and continuous time Markov chains, introduction to queuing systems and networks. Prerequisite: Mathematics 216.\n"}
{"question": "Are queuing systems discussed in COMPSCI 555?", "answer": "Yes, COMPSCI 555 provides an introduction to queuing systems and networks.", "raw_info": "COMPSCI  555\nBasic concepts and techniques used stochastic modeling of systems with applications to performance and reliability of computer and communications system. Elements of probability, random variables (discrete and continuous), expectation, conditional distributions, stochastic processes, discrete and continuous time Markov chains, introduction to queuing systems and networks. Prerequisite: Mathematics 216.\n"}
{"question": "What is the focus of COMPSCI 93 taught by the professor?", "answer": "COMPSCI 93 focuses on the history of diverse devices invented for computation, cryptography, and robotics, covering both mechanical and electrical technologies, from the Greek period to modern times.", "raw_info": "COMPSCI   93\nIntroduction to the history of many diverse devices invented for computation, cryptography, and robotics. These technologies include a wide variety of ingenious devices, including purely mechanical devices, hybrid devices, as well as purely electrical devices. The history includes many fascinating inventors including Babbage and Turing. This history begins in the Greek period and spans many historical periods, to the modern times. By use of models and simulators, students will learn the basics of the operation and programming of various historical mechanical computers, robots and cryptographic devices. Students will do projects on historical devices and/or device inventors.\n"}
{"question": "In COMPSCI 93, which historical figures are emphasized in the study of computation and cryptography?", "answer": "The course emphasizes historical figures such as Babbage and Turing in the study of computation and cryptography.", "raw_info": "COMPSCI   93\nIntroduction to the history of many diverse devices invented for computation, cryptography, and robotics. These technologies include a wide variety of ingenious devices, including purely mechanical devices, hybrid devices, as well as purely electrical devices. The history includes many fascinating inventors including Babbage and Turing. This history begins in the Greek period and spans many historical periods, to the modern times. By use of models and simulators, students will learn the basics of the operation and programming of various historical mechanical computers, robots and cryptographic devices. Students will do projects on historical devices and/or device inventors.\n"}
{"question": "What types of projects are students expected to complete in COMPSCI 93?", "answer": "Students are expected to complete projects on historical devices and/or their inventors as part of COMPSCI 93.", "raw_info": "COMPSCI   93\nIntroduction to the history of many diverse devices invented for computation, cryptography, and robotics. These technologies include a wide variety of ingenious devices, including purely mechanical devices, hybrid devices, as well as purely electrical devices. The history includes many fascinating inventors including Babbage and Turing. This history begins in the Greek period and spans many historical periods, to the modern times. By use of models and simulators, students will learn the basics of the operation and programming of various historical mechanical computers, robots and cryptographic devices. Students will do projects on historical devices and/or device inventors.\n"}
{"question": "Does COMPSCI 93 offer hands-on learning experiences, and if so, how?", "answer": "Yes, COMPSCI 93 offers hands-on learning through the use of models and simulators to teach students the basics of operation and programming of various historical mechanical computers, robots, and cryptographic devices.", "raw_info": "COMPSCI   93\nIntroduction to the history of many diverse devices invented for computation, cryptography, and robotics. These technologies include a wide variety of ingenious devices, including purely mechanical devices, hybrid devices, as well as purely electrical devices. The history includes many fascinating inventors including Babbage and Turing. This history begins in the Greek period and spans many historical periods, to the modern times. By use of models and simulators, students will learn the basics of the operation and programming of various historical mechanical computers, robots and cryptographic devices. Students will do projects on historical devices and/or device inventors.\n"}
{"question": "Which historical period do the course materials from COMPSCI 93 cover?", "answer": "The course materials in COMPSCI 93 cover a history that begins in the Greek period and spans several historical periods up to modern times.", "raw_info": "COMPSCI   93\nIntroduction to the history of many diverse devices invented for computation, cryptography, and robotics. These technologies include a wide variety of ingenious devices, including purely mechanical devices, hybrid devices, as well as purely electrical devices. The history includes many fascinating inventors including Babbage and Turing. This history begins in the Greek period and spans many historical periods, to the modern times. By use of models and simulators, students will learn the basics of the operation and programming of various historical mechanical computers, robots and cryptographic devices. Students will do projects on historical devices and/or device inventors.\n"}
{"question": "What theoretical topics are covered in COMPSCI 232?", "answer": "COMPSCI 232 covers probability, directed graphs, and Markov chains from a theoretical perspective.", "raw_info": "COMPSCI  232\nThis course takes a theoretical approach to probability, directed graphs, and Markov chains. Students will engage with proofs (both understanding proofs and constructing their own proofs) to investigate topics including discrete distributions, conditional probability, graphs, directed graphs, and Markov chains. Students will apply Markov models to novel contexts. Not open to students who have taken Computer Science 230.\nPrerequisites\nNot open to students who have taken Computer Science 230\n"}
{"question": "Are students required to understand and construct proofs in COMPSCI 232?", "answer": "Yes, students in COMPSCI 232 must engage with proofs by both understanding and constructing them.", "raw_info": "COMPSCI  232\nThis course takes a theoretical approach to probability, directed graphs, and Markov chains. Students will engage with proofs (both understanding proofs and constructing their own proofs) to investigate topics including discrete distributions, conditional probability, graphs, directed graphs, and Markov chains. Students will apply Markov models to novel contexts. Not open to students who have taken Computer Science 230.\nPrerequisites\nNot open to students who have taken Computer Science 230\n"}
{"question": "Can a student who has completed Computer Science 230 enroll in COMPSCI 232?", "answer": "No, COMPSCI 232 is not open to students who have taken Computer Science 230.", "raw_info": "COMPSCI  232\nThis course takes a theoretical approach to probability, directed graphs, and Markov chains. Students will engage with proofs (both understanding proofs and constructing their own proofs) to investigate topics including discrete distributions, conditional probability, graphs, directed graphs, and Markov chains. Students will apply Markov models to novel contexts. Not open to students who have taken Computer Science 230.\nPrerequisites\nNot open to students who have taken Computer Science 230\n"}
{"question": "What type of models will students apply to novel contexts in COMPSCI 232?", "answer": "Students will apply Markov models to novel contexts in COMPSCI 232.", "raw_info": "COMPSCI  232\nThis course takes a theoretical approach to probability, directed graphs, and Markov chains. Students will engage with proofs (both understanding proofs and constructing their own proofs) to investigate topics including discrete distributions, conditional probability, graphs, directed graphs, and Markov chains. Students will apply Markov models to novel contexts. Not open to students who have taken Computer Science 230.\nPrerequisites\nNot open to students who have taken Computer Science 230\n"}
{"question": "Is COMPSCI 232 suitable for someone looking to learn practical applications without engaging in theoretical concepts?", "answer": "No, COMPSCI 232 focuses on theoretical approaches, and students are expected to engage with theoretical concepts such as proofs.", "raw_info": "COMPSCI  232\nThis course takes a theoretical approach to probability, directed graphs, and Markov chains. Students will engage with proofs (both understanding proofs and constructing their own proofs) to investigate topics including discrete distributions, conditional probability, graphs, directed graphs, and Markov chains. Students will apply Markov models to novel contexts. Not open to students who have taken Computer Science 230.\nPrerequisites\nNot open to students who have taken Computer Science 230\n"}
{"question": "What main topics are covered in COMPSCI 487?", "answer": "COMPSCI 487 covers first-order logic, the relationship between truth and provability, Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory.", "raw_info": "COMPSCI  487\nAn introduction to mathematical logic focusing on first-order logic and the relationship between truth and provability. Topics include Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory. Recommended prerequisite: Mathematics 216, 218, or 221.\n"}
{"question": "What is the recommended prerequisite for enrolling in COMPSCI 487?", "answer": "The recommended prerequisites for COMPSCI 487 are Mathematics 216, 218, or 221.", "raw_info": "COMPSCI  487\nAn introduction to mathematical logic focusing on first-order logic and the relationship between truth and provability. Topics include Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory. Recommended prerequisite: Mathematics 216, 218, or 221.\n"}
{"question": "Does COMPSCI 487 include the study of G\u00f6del's theorems?", "answer": "Yes, COMPSCI 487 includes the study of G\u00f6del's completeness and incompleteness theorems.", "raw_info": "COMPSCI  487\nAn introduction to mathematical logic focusing on first-order logic and the relationship between truth and provability. Topics include Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory. Recommended prerequisite: Mathematics 216, 218, or 221.\n"}
{"question": "Is there a focus on Peano arithmetic in COMPSCI 487?", "answer": "Yes, Peano arithmetic is one of the topics covered in COMPSCI 487.", "raw_info": "COMPSCI  487\nAn introduction to mathematical logic focusing on first-order logic and the relationship between truth and provability. Topics include Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory. Recommended prerequisite: Mathematics 216, 218, or 221.\n"}
{"question": "Is elementary model theory part of the COMPSCI 487 curriculum?", "answer": "Yes, some elementary model theory is included in the COMPSCI 487 curriculum.", "raw_info": "COMPSCI  487\nAn introduction to mathematical logic focusing on first-order logic and the relationship between truth and provability. Topics include Peano arithmetic, G\u00f6del's completeness and incompleteness theorems, and some elementary model theory. Recommended prerequisite: Mathematics 216, 218, or 221.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 521?", "answer": "The prerequisites for COMPSCI 521 include linear algebra, multivariable calculus, and basic programming knowledge and skill.", "raw_info": "COMPSCI  521\nUndirected and directed graphs of interest are real-world networks, model-generated graphs and various induced graphs (such as line graphs and motif networks). Networks and graphs are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality, via matrix representation, connection and computation (including graph Laplacian matrices). Probabilistic network models include the small-world model, the scale-free model as well as the traditional Erdos\u2013R\u00e9nyi model. Community detection methods are introduced. Prerequisites: linear algebra, multivariable calculus, and basic programming knowledge and skill.\n"}
{"question": "Which probabilistic network models are covered in COMPSCI 521?", "answer": "COMPSCI 521 covers the small-world model, the scale-free model, and the traditional Erdos\u2013R\u00e9nyi model.", "raw_info": "COMPSCI  521\nUndirected and directed graphs of interest are real-world networks, model-generated graphs and various induced graphs (such as line graphs and motif networks). Networks and graphs are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality, via matrix representation, connection and computation (including graph Laplacian matrices). Probabilistic network models include the small-world model, the scale-free model as well as the traditional Erdos\u2013R\u00e9nyi model. Community detection methods are introduced. Prerequisites: linear algebra, multivariable calculus, and basic programming knowledge and skill.\n"}
{"question": "In COMPSCI 521, what mathematical representations are used to analyze graphs?", "answer": "In COMPSCI 521, matrices, including graph Laplacian matrices, are used to analyze graphs.", "raw_info": "COMPSCI  521\nUndirected and directed graphs of interest are real-world networks, model-generated graphs and various induced graphs (such as line graphs and motif networks). Networks and graphs are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality, via matrix representation, connection and computation (including graph Laplacian matrices). Probabilistic network models include the small-world model, the scale-free model as well as the traditional Erdos\u2013R\u00e9nyi model. Community detection methods are introduced. Prerequisites: linear algebra, multivariable calculus, and basic programming knowledge and skill.\n"}
{"question": "What methods of community detection are introduced in COMPSCI 521?", "answer": "While the specific methods are not named, COMPSCI 521 introduces community detection methods as part of its curriculum.", "raw_info": "COMPSCI  521\nUndirected and directed graphs of interest are real-world networks, model-generated graphs and various induced graphs (such as line graphs and motif networks). Networks and graphs are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality, via matrix representation, connection and computation (including graph Laplacian matrices). Probabilistic network models include the small-world model, the scale-free model as well as the traditional Erdos\u2013R\u00e9nyi model. Community detection methods are introduced. Prerequisites: linear algebra, multivariable calculus, and basic programming knowledge and skill.\n"}
{"question": "What types of graphs does COMPSCI 521 focus on?", "answer": "COMPSCI 521 focuses on real-world networks, model-generated graphs, and various induced graphs such as line graphs and motif networks.", "raw_info": "COMPSCI  521\nUndirected and directed graphs of interest are real-world networks, model-generated graphs and various induced graphs (such as line graphs and motif networks). Networks and graphs are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality, via matrix representation, connection and computation (including graph Laplacian matrices). Probabilistic network models include the small-world model, the scale-free model as well as the traditional Erdos\u2013R\u00e9nyi model. Community detection methods are introduced. Prerequisites: linear algebra, multivariable calculus, and basic programming knowledge and skill.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 103L?", "answer": "The prerequisite for enrolling in COMPSCI 103L is either Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107. It is not open to students who have taken COMPSCI 101.", "raw_info": "COMPSCI  103L\nIntroductory programming based on problems in neuroscience. Provides foundational skills for using computers to collect and analyze neuroscience data. Study of how computational processes are implemented by information-processing entities: both brains and computers. Python programming to generate sensory stimuli and collect/analyze behavioral and neural data. Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments. Not open to students who have taken Computer Science 101. Prerequisite: Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107.\nPrerequisites\nPre-Req: NEUROSCI 101/PSY 106 or NEUROSCI 102/PSY 107; not open to students who have taken COMPSCI 101\n"}
{"question": "If I have already completed COMPSCI 101, am I eligible to take COMPSCI 103L?", "answer": "No, COMPSCI 103L is not open to students who have taken COMPSCI 101.", "raw_info": "COMPSCI  103L\nIntroductory programming based on problems in neuroscience. Provides foundational skills for using computers to collect and analyze neuroscience data. Study of how computational processes are implemented by information-processing entities: both brains and computers. Python programming to generate sensory stimuli and collect/analyze behavioral and neural data. Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments. Not open to students who have taken Computer Science 101. Prerequisite: Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107.\nPrerequisites\nPre-Req: NEUROSCI 101/PSY 106 or NEUROSCI 102/PSY 107; not open to students who have taken COMPSCI 101\n"}
{"question": "Which programming language is taught in COMPSCI 103L for generating sensory stimuli and analyzing data?", "answer": "Python programming is taught in COMPSCI 103L for generating sensory stimuli and analyzing behavioral and neural data.", "raw_info": "COMPSCI  103L\nIntroductory programming based on problems in neuroscience. Provides foundational skills for using computers to collect and analyze neuroscience data. Study of how computational processes are implemented by information-processing entities: both brains and computers. Python programming to generate sensory stimuli and collect/analyze behavioral and neural data. Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments. Not open to students who have taken Computer Science 101. Prerequisite: Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107.\nPrerequisites\nPre-Req: NEUROSCI 101/PSY 106 or NEUROSCI 102/PSY 107; not open to students who have taken COMPSCI 101\n"}
{"question": "Can a student without any background in Neuroscience take COMPSCI 103L?", "answer": "No, a student must have completed either Neuroscience 101/ Psychology 106 or Neuroscience 102/ Psychology 107 to take COMPSCI 103L.", "raw_info": "COMPSCI  103L\nIntroductory programming based on problems in neuroscience. Provides foundational skills for using computers to collect and analyze neuroscience data. Study of how computational processes are implemented by information-processing entities: both brains and computers. Python programming to generate sensory stimuli and collect/analyze behavioral and neural data. Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments. Not open to students who have taken Computer Science 101. Prerequisite: Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107.\nPrerequisites\nPre-Req: NEUROSCI 101/PSY 106 or NEUROSCI 102/PSY 107; not open to students who have taken COMPSCI 101\n"}
{"question": "What kind of best practices are emphasized in COMPSCI 103L?", "answer": "COMPSCI 103L emphasizes Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments.", "raw_info": "COMPSCI  103L\nIntroductory programming based on problems in neuroscience. Provides foundational skills for using computers to collect and analyze neuroscience data. Study of how computational processes are implemented by information-processing entities: both brains and computers. Python programming to generate sensory stimuli and collect/analyze behavioral and neural data. Scientific and Software Engineering best practices for conducting and verifying neuroscience experiments. Not open to students who have taken Computer Science 101. Prerequisite: Neuroscience 101/Psychology 106 or Neuroscience 102/Psychology 107.\nPrerequisites\nPre-Req: NEUROSCI 101/PSY 106 or NEUROSCI 102/PSY 107; not open to students who have taken COMPSCI 101\n"}
{"question": "What programming language and libraries will be primarily used in COMPSCI 675D?", "answer": "COMPSCI 675D will primarily use Python with heavy utilization of the PyTorch or Tensorflow libraries.", "raw_info": "COMPSCI  675D\nProvides an introduction to the machine learning technique called deep learning or deep neural networks. A focus will be the mathematical formulations of deep networks and an explanation of how these networks can be structured and 'learned' from big data. Discussion section covers practical applications, programming, and modern implementation practices. Example code and assignments will be given in Python with heavy utilization of PyTorch (or Tensorflow) package. The course and a project will cover various applications including image classification, text analysis, object detection, etc. Prerequisite: ECE 580, ECE 681, ECE 682D, Statistical Science 561D, or Computer Science 571D.\nPrerequisites\nPrerequisite: ECE 580 or ECE 681 or ECE 682D or STA 561D or COMPSCI 571D\n"}
{"question": "What is one of the prerequisites for enrolling in COMPSCI 675D?", "answer": "One of the prerequisites for enrolling in COMPSCI 675D is ECE 580.", "raw_info": "COMPSCI  675D\nProvides an introduction to the machine learning technique called deep learning or deep neural networks. A focus will be the mathematical formulations of deep networks and an explanation of how these networks can be structured and 'learned' from big data. Discussion section covers practical applications, programming, and modern implementation practices. Example code and assignments will be given in Python with heavy utilization of PyTorch (or Tensorflow) package. The course and a project will cover various applications including image classification, text analysis, object detection, etc. Prerequisite: ECE 580, ECE 681, ECE 682D, Statistical Science 561D, or Computer Science 571D.\nPrerequisites\nPrerequisite: ECE 580 or ECE 681 or ECE 682D or STA 561D or COMPSCI 571D\n"}
{"question": "Which professor teaches COMPSCI 675D?", "answer": "The text does not specify a professor for COMPSCI 675D.", "raw_info": "COMPSCI  675D\nProvides an introduction to the machine learning technique called deep learning or deep neural networks. A focus will be the mathematical formulations of deep networks and an explanation of how these networks can be structured and 'learned' from big data. Discussion section covers practical applications, programming, and modern implementation practices. Example code and assignments will be given in Python with heavy utilization of PyTorch (or Tensorflow) package. The course and a project will cover various applications including image classification, text analysis, object detection, etc. Prerequisite: ECE 580, ECE 681, ECE 682D, Statistical Science 561D, or Computer Science 571D.\nPrerequisites\nPrerequisite: ECE 580 or ECE 681 or ECE 682D or STA 561D or COMPSCI 571D\n"}
{"question": "What are some of the applications covered in the COMPSCI 675D course project?", "answer": "The COMPSCI 675D course project covers various applications including image classification, text analysis, and object detection.", "raw_info": "COMPSCI  675D\nProvides an introduction to the machine learning technique called deep learning or deep neural networks. A focus will be the mathematical formulations of deep networks and an explanation of how these networks can be structured and 'learned' from big data. Discussion section covers practical applications, programming, and modern implementation practices. Example code and assignments will be given in Python with heavy utilization of PyTorch (or Tensorflow) package. The course and a project will cover various applications including image classification, text analysis, object detection, etc. Prerequisite: ECE 580, ECE 681, ECE 682D, Statistical Science 561D, or Computer Science 571D.\nPrerequisites\nPrerequisite: ECE 580 or ECE 681 or ECE 682D or STA 561D or COMPSCI 571D\n"}
{"question": "Does COMPSCI 675D include a discussion section, and what does it cover?", "answer": "Yes, COMPSCI 675D includes a discussion section that covers practical applications, programming, and modern implementation practices.", "raw_info": "COMPSCI  675D\nProvides an introduction to the machine learning technique called deep learning or deep neural networks. A focus will be the mathematical formulations of deep networks and an explanation of how these networks can be structured and 'learned' from big data. Discussion section covers practical applications, programming, and modern implementation practices. Example code and assignments will be given in Python with heavy utilization of PyTorch (or Tensorflow) package. The course and a project will cover various applications including image classification, text analysis, object detection, etc. Prerequisite: ECE 580, ECE 681, ECE 682D, Statistical Science 561D, or Computer Science 571D.\nPrerequisites\nPrerequisite: ECE 580 or ECE 681 or ECE 682D or STA 561D or COMPSCI 571D\n"}
{"question": "What are the prerequisites for COMPSCI 371?", "answer": "The prerequisite for COMPSCI 371 is Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  371\nFundamental concepts of supervised machine learning, with sample algorithms and applications. Focuses on how to think about machine learning problems and solutions, rather than on a systematic coverage of techniques. Serves as an introduction to the methods of machine learning. Prerequisite: Computer Science 201. Recommended Prerequisites: Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is recommended to have studied before taking COMPSCI 371, aside from the main prerequisite?", "answer": "It is recommended to have taken Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent before taking COMPSCI 371.", "raw_info": "COMPSCI  371\nFundamental concepts of supervised machine learning, with sample algorithms and applications. Focuses on how to think about machine learning problems and solutions, rather than on a systematic coverage of techniques. Serves as an introduction to the methods of machine learning. Prerequisite: Computer Science 201. Recommended Prerequisites: Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 371 focus more on covering a wide range of machine learning techniques or on understanding machine learning problems and solutions?", "answer": "COMPSCI 371 focuses more on understanding how to think about machine learning problems and solutions, rather than a systematic coverage of techniques.", "raw_info": "COMPSCI  371\nFundamental concepts of supervised machine learning, with sample algorithms and applications. Focuses on how to think about machine learning problems and solutions, rather than on a systematic coverage of techniques. Serves as an introduction to the methods of machine learning. Prerequisite: Computer Science 201. Recommended Prerequisites: Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Is COMPSCI 371 an advanced course focused on specialized machine learning topics, or is it an introductory course?", "answer": "COMPSCI 371 serves as an introduction to the methods of machine learning.", "raw_info": "COMPSCI  371\nFundamental concepts of supervised machine learning, with sample algorithms and applications. Focuses on how to think about machine learning problems and solutions, rather than on a systematic coverage of techniques. Serves as an introduction to the methods of machine learning. Prerequisite: Computer Science 201. Recommended Prerequisites: Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Is prior knowledge in Mathematics required for enrolling in COMPSCI 371?", "answer": "While not a strict requirement, it is recommended to have prior knowledge in certain mathematics courses, such as Mathematics 221, 218, 216, 212, or 230, or equivalent, before taking COMPSCI 371.", "raw_info": "COMPSCI  371\nFundamental concepts of supervised machine learning, with sample algorithms and applications. Focuses on how to think about machine learning problems and solutions, rather than on a systematic coverage of techniques. Serves as an introduction to the methods of machine learning. Prerequisite: Computer Science 201. Recommended Prerequisites: Mathematics 221, 218, or 216 or equivalent; Mathematics 212 or equivalent; and Mathematics 230, Statistical Science 230 or equivalent.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is the main focus of COMPSCI 362?", "answer": "The main focus of COMPSCI 362 is computational imaging, which involves forming images from data using computation and algorithms. The course covers image formation, denoising, classification, and inverse problems in various applications, as well as programming strategies and modern imaging tools based on deep neural networks.", "raw_info": "COMPSCI  362\nComputational imaging refers to the process of forming images from data where computation and algorithms play an integral role. This course will cover basic principles of image formation, denoising, classification, and inverse problems used in applications ranging from computational photography to biomedical and molecular imaging and vision science. Programming strategies to accelerate calculations and the fundamentals of modern imaging tools based on deep neural-networks will also be covered. Prerequisite: CompSci 230, Programming experience.\nPrerequisites\nPrerequisite: CompSci 230 or 232; and CompSci 101 or 201\n"}
{"question": "What prerequisites are required to enroll in COMPSCI 362?", "answer": "To enroll in COMPSCI 362, students need to have completed either CompSci 230 or CompSci 232, and either CompSci 101 or CompSci 201. Additionally, programming experience is required.", "raw_info": "COMPSCI  362\nComputational imaging refers to the process of forming images from data where computation and algorithms play an integral role. This course will cover basic principles of image formation, denoising, classification, and inverse problems used in applications ranging from computational photography to biomedical and molecular imaging and vision science. Programming strategies to accelerate calculations and the fundamentals of modern imaging tools based on deep neural-networks will also be covered. Prerequisite: CompSci 230, Programming experience.\nPrerequisites\nPrerequisite: CompSci 230 or 232; and CompSci 101 or 201\n"}
{"question": "In COMPSCI 362, what kind of applications will be addressed using computational imaging techniques?", "answer": "In COMPSCI 362, computational imaging techniques will be addressed for applications in computational photography, biomedical and molecular imaging, and vision science.", "raw_info": "COMPSCI  362\nComputational imaging refers to the process of forming images from data where computation and algorithms play an integral role. This course will cover basic principles of image formation, denoising, classification, and inverse problems used in applications ranging from computational photography to biomedical and molecular imaging and vision science. Programming strategies to accelerate calculations and the fundamentals of modern imaging tools based on deep neural-networks will also be covered. Prerequisite: CompSci 230, Programming experience.\nPrerequisites\nPrerequisite: CompSci 230 or 232; and CompSci 101 or 201\n"}
{"question": "Does COMPSCI 362 include any focus on modern imaging tools?", "answer": "Yes, COMPSCI 362 includes a focus on the fundamentals of modern imaging tools based on deep neural networks.", "raw_info": "COMPSCI  362\nComputational imaging refers to the process of forming images from data where computation and algorithms play an integral role. This course will cover basic principles of image formation, denoising, classification, and inverse problems used in applications ranging from computational photography to biomedical and molecular imaging and vision science. Programming strategies to accelerate calculations and the fundamentals of modern imaging tools based on deep neural-networks will also be covered. Prerequisite: CompSci 230, Programming experience.\nPrerequisites\nPrerequisite: CompSci 230 or 232; and CompSci 101 or 201\n"}
{"question": "For COMPSCI 362, what computing skills are emphasized for accelerating calculations?", "answer": "COMPSCI 362 emphasizes programming strategies to accelerate calculations as part of its curriculum.", "raw_info": "COMPSCI  362\nComputational imaging refers to the process of forming images from data where computation and algorithms play an integral role. This course will cover basic principles of image formation, denoising, classification, and inverse problems used in applications ranging from computational photography to biomedical and molecular imaging and vision science. Programming strategies to accelerate calculations and the fundamentals of modern imaging tools based on deep neural-networks will also be covered. Prerequisite: CompSci 230, Programming experience.\nPrerequisites\nPrerequisite: CompSci 230 or 232; and CompSci 101 or 201\n"}
{"question": "What are the prerequisites for COMPSCI 650?", "answer": "The prerequisites for COMPSCI 650 are Computer Science 550 or Electrical and Computer Engineering 552, or consent of the instructor.", "raw_info": "COMPSCI  650\nParallel computer architecture design and evaluation. Design topics include parallel programming, message passing, shared memory, cache coherence, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization. Evaluation topics include modeling, simulation, and benchmarking. Prerequisite: Computer Science 550 or Electrical and Computer Engineering 552 or consent of instructor.\n"}
{"question": "What topics are covered under the evaluation section in COMPSCI 650?", "answer": "The evaluation topics covered in COMPSCI 650 include modeling, simulation, and benchmarking.", "raw_info": "COMPSCI  650\nParallel computer architecture design and evaluation. Design topics include parallel programming, message passing, shared memory, cache coherence, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization. Evaluation topics include modeling, simulation, and benchmarking. Prerequisite: Computer Science 550 or Electrical and Computer Engineering 552 or consent of instructor.\n"}
{"question": "Does COMPSCI 650 require any prior courses before enrollment?", "answer": "Yes, COMPSCI 650 requires Computer Science 550 or Electrical and Computer Engineering 552, or the consent of the instructor.", "raw_info": "COMPSCI  650\nParallel computer architecture design and evaluation. Design topics include parallel programming, message passing, shared memory, cache coherence, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization. Evaluation topics include modeling, simulation, and benchmarking. Prerequisite: Computer Science 550 or Electrical and Computer Engineering 552 or consent of instructor.\n"}
{"question": "What parallel programming topics are included in the COMPSCI 650 course?", "answer": "The parallel programming topics in COMPSCI 650 include message passing, shared memory, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization.", "raw_info": "COMPSCI  650\nParallel computer architecture design and evaluation. Design topics include parallel programming, message passing, shared memory, cache coherence, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization. Evaluation topics include modeling, simulation, and benchmarking. Prerequisite: Computer Science 550 or Electrical and Computer Engineering 552 or consent of instructor.\n"}
{"question": "Is consent from the instructor a necessary condition for enrolling in COMPSCI 650 if you haven't taken the listed prerequisites?", "answer": "Yes, if you haven't taken Computer Science 550 or Electrical and Computer Engineering 552, you need the consent of the instructor to enroll in COMPSCI 650.", "raw_info": "COMPSCI  650\nParallel computer architecture design and evaluation. Design topics include parallel programming, message passing, shared memory, cache coherence, cache coherence, memory consistency models, symmetric multiprocessors, distributed shared memory, interconnection networks, and synchronization. Evaluation topics include modeling, simulation, and benchmarking. Prerequisite: Computer Science 550 or Electrical and Computer Engineering 552 or consent of instructor.\n"}
{"question": "Can a student with no previous programming experience enroll in COMPSCI 101L?", "answer": "Yes, COMPSCI 101L is designed for students with no previous programming experience.", "raw_info": "COMPSCI  101L\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Are students who have completed Engineering 103L eligible to take COMPSCI 101L?", "answer": "No, students who have taken Engineering 103L are not eligible to enroll in COMPSCI 101L.", "raw_info": "COMPSCI  101L\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What programming concepts are emphasized in COMPSCI 101L?", "answer": "COMPSCI 101L emphasizes algorithmic problem-solving and programming techniques, specifically abstraction, encapsulation, and problem decomposition.", "raw_info": "COMPSCI  101L\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Can a student who has taken Computer Science 116 take COMPSCI 101L?", "answer": "No, students who have taken Computer Science 116 cannot enroll in COMPSCI 101L.", "raw_info": "COMPSCI  101L\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Does COMPSCI 101L include programming in any specific domains?", "answer": "Yes, COMPSCI 101L includes programming techniques applied in domains such as art, data visualization, mathematics, and the natural and social sciences.", "raw_info": "COMPSCI  101L\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What course number introduces analysis of real-world networks and includes topics like small-world network model and Erdos\u2013R\u00e9nyi model?", "answer": "COMPSCI 321.", "raw_info": "COMPSCI  321\nUndergraduate Level. Introduction to analysis of real-world networks and generated graphs via matrix representation, connection and computation. Graphs and networks are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality. Probabilistic graph categories include the small-world network model, the scale-free network model as well as the traditional Erdos\u2013R\u00e9nyi model. Prerequisites: Math 212 or equivalent; Math 216, 218D or 221 or equivalent; CompSci 101L or equivalent.\nPrerequisites\nPrerequisite: Math 212 and (Math 216, 218D, or 221) and (Computer Science 101L or 201)\n"}
{"question": "What are the prerequisite math courses for enrolling in COMPSCI 321?", "answer": "Math 212 and one of Math 216, 218D, or 221.", "raw_info": "COMPSCI  321\nUndergraduate Level. Introduction to analysis of real-world networks and generated graphs via matrix representation, connection and computation. Graphs and networks are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality. Probabilistic graph categories include the small-world network model, the scale-free network model as well as the traditional Erdos\u2013R\u00e9nyi model. Prerequisites: Math 212 or equivalent; Math 216, 218D or 221 or equivalent; CompSci 101L or equivalent.\nPrerequisites\nPrerequisite: Math 212 and (Math 216, 218D, or 221) and (Computer Science 101L or 201)\n"}
{"question": "For COMPSCI 321, which computer science course can satisfy the prerequisite requirement?", "answer": "CompSci 101L or 201.", "raw_info": "COMPSCI  321\nUndergraduate Level. Introduction to analysis of real-world networks and generated graphs via matrix representation, connection and computation. Graphs and networks are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality. Probabilistic graph categories include the small-world network model, the scale-free network model as well as the traditional Erdos\u2013R\u00e9nyi model. Prerequisites: Math 212 or equivalent; Math 216, 218D or 221 or equivalent; CompSci 101L or equivalent.\nPrerequisites\nPrerequisite: Math 212 and (Math 216, 218D, or 221) and (Computer Science 101L or 201)\n"}
{"question": "In COMPSCI 321, what types of measures are used to analyze and categorize graphs and networks?", "answer": "Combinatorial, algebraic, and probabilistic measures of connectivity and centrality.", "raw_info": "COMPSCI  321\nUndergraduate Level. Introduction to analysis of real-world networks and generated graphs via matrix representation, connection and computation. Graphs and networks are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality. Probabilistic graph categories include the small-world network model, the scale-free network model as well as the traditional Erdos\u2013R\u00e9nyi model. Prerequisites: Math 212 or equivalent; Math 216, 218D or 221 or equivalent; CompSci 101L or equivalent.\nPrerequisites\nPrerequisite: Math 212 and (Math 216, 218D, or 221) and (Computer Science 101L or 201)\n"}
{"question": "Is Math 218D an acceptable prerequisite course for COMPSCI 321?", "answer": "Yes, Math 218D is one of the acceptable prerequisites.", "raw_info": "COMPSCI  321\nUndergraduate Level. Introduction to analysis of real-world networks and generated graphs via matrix representation, connection and computation. Graphs and networks are characterized, analyzed and categorized by combinatorial, algebraic and probabilistic measures of connectivity and centrality. Probabilistic graph categories include the small-world network model, the scale-free network model as well as the traditional Erdos\u2013R\u00e9nyi model. Prerequisites: Math 212 or equivalent; Math 216, 218D or 221 or equivalent; CompSci 101L or equivalent.\nPrerequisites\nPrerequisite: Math 212 and (Math 216, 218D, or 221) and (Computer Science 101L or 201)\n"}
{"question": "What are the prerequisites for COMPSCI 354?", "answer": "The prerequisites for COMPSCI 354 are Computer Science 230 Discrete Math, and either Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture.", "raw_info": "COMPSCI  354\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of a central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: Computer Science 230 Discrete Math; Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture. Computer Science 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "Is COMPSCI 330 Algorithms a required prerequisite for COMPSCI 354?", "answer": "No, COMPSCI 330 Algorithms is not a required prerequisite for COMPSCI 354, but it is helpful.", "raw_info": "COMPSCI  354\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of a central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: Computer Science 230 Discrete Math; Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture. Computer Science 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "What are the three key layers of blockchain discussed in COMPSCI 354?", "answer": "The three key layers of blockchain discussed in COMPSCI 354 are 1) Consensus, 2) Scalability, and 3) Application layer.", "raw_info": "COMPSCI  354\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of a central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: Computer Science 230 Discrete Math; Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture. Computer Science 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "How does COMPSCI 354 describe the role of blockchains in various industries?", "answer": "COMPSCI 354 describes blockchains as a key infrastructure for decentralizing trust from a single entity to multiple different entities, and notes that many industries such as finance, supply chain, and central bank digital currencies are considering their use.", "raw_info": "COMPSCI  354\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of a central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: Computer Science 230 Discrete Math; Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture. Computer Science 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "Can I enroll in COMPSCI 354 if I have only completed Computer Science 250?", "answer": "Yes, you can enroll in COMPSCI 354 if you have completed Computer Science 250, provided you have also completed Computer Science 230.", "raw_info": "COMPSCI  354\nBlockchains form a key infrastructure for decentralizing trust from a single entity to multiple different entities. Many fields such as finance, supply chain industry, and the design of a central bank digital currencies today are considering the use of blockchains to decentralize trust. At a high level, blockchain consists of stack of three key layers: 1) Consensus - agreement among parties 2) Scalability, and 3) Application layer. In this course, we will learn about the foundations that enable each of these layers. Prerequisite: Computer Science 230 Discrete Math; Computer Science 210 Computer Systems or Computer Science 250 Computer Architecture. Computer Science 330 Algorithms is helpful but not required.\nPrerequisites\nPrerequisite: Computer Science 230, Computer Science 210D or Computer Science 250\n"}
{"question": "What is the course number for a computer science course where topics differ by section?", "answer": "The course number is COMPSCI 190A.", "raw_info": "COMPSCI  190A\nTopics differ by section.\n"}
{"question": "How can one know the topics covered in COMPSCI 190A?", "answer": "The topics in COMPSCI 190A differ by section, so it's best to check the specific section details for the course.", "raw_info": "COMPSCI  190A\nTopics differ by section.\n"}
{"question": "Is COMPSCI 190A focused on a single topic throughout the semester?", "answer": "No, COMPSCI 190A covers various topics that differ by section.", "raw_info": "COMPSCI  190A\nTopics differ by section.\n"}
{"question": "What are the focus areas of COMPSCI 676?", "answer": "COMPSCI 676 focuses on advanced topics in deep learning, including methodological methods such as discriminative models, generative models, and inference topics.", "raw_info": "COMPSCI  676\nFocus on advanced topics in deep learning, particularly methodological methods. This includes discriminative models (e.g., infinite/infinitesimal/physics-informed neural networks), generative models (normalizing flows, graphical models, Bayesian Neural Networks, non-parametric approaches), and topics on inference (e.g., exact and approximate inference methods). Assignments will provide an opportunity to implement techniques. Prerequisite: ECE 685D.\nPrerequisites\nPrerequisite: ECE 685D\n"}
{"question": "What previous course must be completed before enrolling in COMPSCI 676?", "answer": "The prerequisite for COMPSCI 676 is ECE 685D.", "raw_info": "COMPSCI  676\nFocus on advanced topics in deep learning, particularly methodological methods. This includes discriminative models (e.g., infinite/infinitesimal/physics-informed neural networks), generative models (normalizing flows, graphical models, Bayesian Neural Networks, non-parametric approaches), and topics on inference (e.g., exact and approximate inference methods). Assignments will provide an opportunity to implement techniques. Prerequisite: ECE 685D.\nPrerequisites\nPrerequisite: ECE 685D\n"}
{"question": "Does COMPSCI 676 include implementation opportunities in its assignments?", "answer": "Yes, COMPSCI 676 assignments provide an opportunity to implement techniques.", "raw_info": "COMPSCI  676\nFocus on advanced topics in deep learning, particularly methodological methods. This includes discriminative models (e.g., infinite/infinitesimal/physics-informed neural networks), generative models (normalizing flows, graphical models, Bayesian Neural Networks, non-parametric approaches), and topics on inference (e.g., exact and approximate inference methods). Assignments will provide an opportunity to implement techniques. Prerequisite: ECE 685D.\nPrerequisites\nPrerequisite: ECE 685D\n"}
{"question": "Who can enroll in COMPSCI 676?", "answer": "Students who have completed the prerequisite course ECE 685D can enroll in COMPSCI 676.", "raw_info": "COMPSCI  676\nFocus on advanced topics in deep learning, particularly methodological methods. This includes discriminative models (e.g., infinite/infinitesimal/physics-informed neural networks), generative models (normalizing flows, graphical models, Bayesian Neural Networks, non-parametric approaches), and topics on inference (e.g., exact and approximate inference methods). Assignments will provide an opportunity to implement techniques. Prerequisite: ECE 685D.\nPrerequisites\nPrerequisite: ECE 685D\n"}
{"question": "Which generative models are covered in COMPSCI 676?", "answer": "COMPSCI 676 covers generative models such as normalizing flows, graphical models, Bayesian Neural Networks, and non-parametric approaches.", "raw_info": "COMPSCI  676\nFocus on advanced topics in deep learning, particularly methodological methods. This includes discriminative models (e.g., infinite/infinitesimal/physics-informed neural networks), generative models (normalizing flows, graphical models, Bayesian Neural Networks, non-parametric approaches), and topics on inference (e.g., exact and approximate inference methods). Assignments will provide an opportunity to implement techniques. Prerequisite: ECE 685D.\nPrerequisites\nPrerequisite: ECE 685D\n"}
{"question": "Can I enroll in COMPSCI 101LA if I have already taken Computer Science 102?", "answer": "No, you cannot enroll in COMPSCI 101LA if you have already taken Computer Science 102.", "raw_info": "COMPSCI  101LA\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201. Offered at Marine Lab.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What type of programming languages and design techniques are emphasized in COMPSCI 101LA?", "answer": "COMPSCI 101LA emphasizes high-level programming languages and design techniques such as abstraction, encapsulation, and problem decomposition.", "raw_info": "COMPSCI  101LA\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201. Offered at Marine Lab.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Is previous programming experience required for enrolling in COMPSCI 101LA?", "answer": "No, previous programming experience is not required for enrolling in COMPSCI 101LA.", "raw_info": "COMPSCI  101LA\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201. Offered at Marine Lab.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Where is COMPSCI 101LA offered, according to the course description?", "answer": "COMPSCI 101LA is offered at the Marine Lab.", "raw_info": "COMPSCI  101LA\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201. Offered at Marine Lab.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Which domains are covered through algorithmic, problem-solving, and programming techniques in COMPSCI 101LA?", "answer": "The domains covered in COMPSCI 101LA include art, data visualization, mathematics, natural sciences, and social sciences.", "raw_info": "COMPSCI  101LA\nIntroduction practices and principles of computer science and programming and their impact on and potential to change the world. Algorithmic, problem-solving, and programming techniques in domains such as art, data visualization, mathematics, natural and social sciences. Programming using high-level languages and design techniques emphasizing abstraction, encapsulation, and problem decomposition. Design, implementation, testing, and analysis of algorithms and programs. No previous programming experience required. Not open to students who have taken Computer Science 102, 116, Engineering 103 or Computer Science 201. Offered at Marine Lab.\nPrerequisites\nNot open to students who have taken Computer Science 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 334?", "answer": "The prerequisites for COMPSCI 334 are CompSci 201 and either CompSci 230 or CompSci 232.", "raw_info": "COMPSCI  334\nAn introduction to theoretical computer science including studies of abstract machines, the language hierarchy from regular sets to recursively enumerable sets, noncomputability, and complexity theory. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Does COMPSCI 334 cover complexity theory?", "answer": "Yes, COMPSCI 334 includes studies of complexity theory as part of the course curriculum.", "raw_info": "COMPSCI  334\nAn introduction to theoretical computer science including studies of abstract machines, the language hierarchy from regular sets to recursively enumerable sets, noncomputability, and complexity theory. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Can I take COMPSCI 334 if I have completed CompSci 201 but not CompSci 230 or CompSci 232?", "answer": "No, you cannot enroll in COMPSCI 334 unless you have completed both CompSci 201 and either CompSci 230 or CompSci 232.", "raw_info": "COMPSCI  334\nAn introduction to theoretical computer science including studies of abstract machines, the language hierarchy from regular sets to recursively enumerable sets, noncomputability, and complexity theory. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "Is noncomputability a topic included in the syllabus for COMPSCI 334?", "answer": "Yes, noncomputability is one of the topics covered in COMPSCI 334.", "raw_info": "COMPSCI  334\nAn introduction to theoretical computer science including studies of abstract machines, the language hierarchy from regular sets to recursively enumerable sets, noncomputability, and complexity theory. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What topics related to language hierarchy are studied in COMPSCI 334?", "answer": "In COMPSCI 334, studies include the language hierarchy from regular sets to recursively enumerable sets.", "raw_info": "COMPSCI  334\nAn introduction to theoretical computer science including studies of abstract machines, the language hierarchy from regular sets to recursively enumerable sets, noncomputability, and complexity theory. Prerequisites: Computer Science 201 and 230.\nPrerequisites\nPrerequisite: CompSci 201 and (CompSci 230 or CompSci 232)\n"}
{"question": "What is the semester-long project topic for COMPSCI 653?", "answer": "This semester's project in COMPSCI 653 will focus on reimagining on-campus mental health management.", "raw_info": "COMPSCI  653\nThis course addresses the importance of the human-computer interface in the design and development of things that people use. Many of the perceptual, cognitive, and social characteristics of people, as well as methods for learning more about the people, are covered. The capabilities and limits of computers and other related systems are discussed as they relate to the impact on design and implementation decisions. The course consists of a semester-long project that steps through the various stages of design. This semester's project will be reimaging on campus mental health management. Prerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651.\nPrerequisites\nPrerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651\n"}
{"question": "What are the prerequisites for COMPSCI 653?", "answer": "The prerequisites for COMPSCI 653 are Computer Science 307D, Computer Science 308, or Electrical and Computer Engineering 651.", "raw_info": "COMPSCI  653\nThis course addresses the importance of the human-computer interface in the design and development of things that people use. Many of the perceptual, cognitive, and social characteristics of people, as well as methods for learning more about the people, are covered. The capabilities and limits of computers and other related systems are discussed as they relate to the impact on design and implementation decisions. The course consists of a semester-long project that steps through the various stages of design. This semester's project will be reimaging on campus mental health management. Prerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651.\nPrerequisites\nPrerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651\n"}
{"question": "Does COMPSCI 653 involve a semester-long project?", "answer": "Yes, COMPSCI 653 includes a semester-long project that steps through the various stages of design.", "raw_info": "COMPSCI  653\nThis course addresses the importance of the human-computer interface in the design and development of things that people use. Many of the perceptual, cognitive, and social characteristics of people, as well as methods for learning more about the people, are covered. The capabilities and limits of computers and other related systems are discussed as they relate to the impact on design and implementation decisions. The course consists of a semester-long project that steps through the various stages of design. This semester's project will be reimaging on campus mental health management. Prerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651.\nPrerequisites\nPrerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651\n"}
{"question": "What are some topics covered in COMPSCI 653 related to the human-computer interface?", "answer": "COMPSCI 653 covers topics such as the perceptual, cognitive, and social characteristics of people, as well as the capabilities and limits of computers and related systems in design decisions.", "raw_info": "COMPSCI  653\nThis course addresses the importance of the human-computer interface in the design and development of things that people use. Many of the perceptual, cognitive, and social characteristics of people, as well as methods for learning more about the people, are covered. The capabilities and limits of computers and other related systems are discussed as they relate to the impact on design and implementation decisions. The course consists of a semester-long project that steps through the various stages of design. This semester's project will be reimaging on campus mental health management. Prerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651.\nPrerequisites\nPrerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651\n"}
{"question": "Who is the target audience for the prerequisites of COMPSCI 653?", "answer": "Students who have taken courses Computer Science 307D, 308, or Electrical and Computer Engineering 651 are the target audience, indicating that the course is aimed at advanced undergraduates or graduate students in related fields.", "raw_info": "COMPSCI  653\nThis course addresses the importance of the human-computer interface in the design and development of things that people use. Many of the perceptual, cognitive, and social characteristics of people, as well as methods for learning more about the people, are covered. The capabilities and limits of computers and other related systems are discussed as they relate to the impact on design and implementation decisions. The course consists of a semester-long project that steps through the various stages of design. This semester's project will be reimaging on campus mental health management. Prerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651.\nPrerequisites\nPrerequisite: Computer Science 307D or 308 or Electrical and Computer Engineering 651\n"}
{"question": "What topics are covered in COMPSCI 535?", "answer": "COMPSCI 535 covers algorithmic aspects of microeconomics, including solution concepts for games, mechanism design and auction theory, social choice, and resource allocation and fairness.", "raw_info": "COMPSCI  535\nStudy of algorithmic aspects of basic questions in microeconomics. Topics include solution concepts for games, a mechanism design, and auction theory, social choice, and resource allocation and fairness. Recommended prerequisites: Strong foundation in algorithms at the level of CompSci 330 or equivalent.\n"}
{"question": "What is the recommended prerequisite for enrolling in COMPSCI 535?", "answer": "A strong foundation in algorithms at the level of CompSci 330 or an equivalent course is recommended before enrolling in COMPSCI 535.", "raw_info": "COMPSCI  535\nStudy of algorithmic aspects of basic questions in microeconomics. Topics include solution concepts for games, a mechanism design, and auction theory, social choice, and resource allocation and fairness. Recommended prerequisites: Strong foundation in algorithms at the level of CompSci 330 or equivalent.\n"}
{"question": "Does COMPSCI 535 require knowledge in microeconomics?", "answer": "While not explicitly stated, the course focuses on the algorithmic aspects of microeconomics, so some knowledge in this area would likely be beneficial.", "raw_info": "COMPSCI  535\nStudy of algorithmic aspects of basic questions in microeconomics. Topics include solution concepts for games, a mechanism design, and auction theory, social choice, and resource allocation and fairness. Recommended prerequisites: Strong foundation in algorithms at the level of CompSci 330 or equivalent.\n"}
{"question": "How does COMPSCI 535 integrate concepts from economics and computer science?", "answer": "COMPSCI 535 integrates concepts from economics, such as games, mechanism design, auction theory, social choice, and resource allocation, with algorithmic approaches from computer science.", "raw_info": "COMPSCI  535\nStudy of algorithmic aspects of basic questions in microeconomics. Topics include solution concepts for games, a mechanism design, and auction theory, social choice, and resource allocation and fairness. Recommended prerequisites: Strong foundation in algorithms at the level of CompSci 330 or equivalent.\n"}
{"question": "Is knowledge of auction theory part of the curriculum in COMPSCI 535?", "answer": "Yes, auction theory is one of the topics included in the curriculum of COMPSCI 535.", "raw_info": "COMPSCI  535\nStudy of algorithmic aspects of basic questions in microeconomics. Topics include solution concepts for games, a mechanism design, and auction theory, social choice, and resource allocation and fairness. Recommended prerequisites: Strong foundation in algorithms at the level of CompSci 330 or equivalent.\n"}
{"question": "When will the course COMPSCI 534D be available?", "answer": "COMPSCI 534D will be available as of January 1, 2025.", "raw_info": "COMPSCI  534D\n** available as of 2025-01-01\n"}
{"question": "I\u2019m planning my schedule for the upcoming year. Should I include COMPSCI 534D now, or is it not yet offered?", "answer": "You should plan to include COMPSCI 534D in your schedule starting from January 1, 2025, since it will be available then.", "raw_info": "COMPSCI  534D\n** available as of 2025-01-01\n"}
{"question": "Is COMPSCI 534D available in the academic year 2023-2024?", "answer": "No, COMPSCI 534D is not available in the academic year 2023-2024 as it will only be available starting January 1, 2025.", "raw_info": "COMPSCI  534D\n** available as of 2025-01-01\n"}
{"question": "How soon can I enroll in COMPSCI 534D?", "answer": "You can enroll in COMPSCI 534D starting January 1, 2025, when the course becomes available.", "raw_info": "COMPSCI  534D\n** available as of 2025-01-01\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 345?", "answer": "The prerequisites for COMPSCI 345 are Computer Science 201 and either Computer Science 210 or 250, and either Mathematics 216, 218, or 221.", "raw_info": "COMPSCI  345\nLearn the fundamentals of modern 2D software graphics, and how these can be efficiently implemented in C/C++. Core topics include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, sampling. Advanced topics may include gradients, parametric curves, and triangle meshes. Students will develop their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced. At each milestone, their work will be evaluated for functionality, clarity, and performance. Students will learn firsthand how to evaluate implementation tradeoffs. Prerequisite: Computer Science 201; and Computer Science 210 or 250; and Mathematics 216, 218, or 221.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210 or 250) and (Mathematics 216, 218, or 221).\n"}
{"question": "What core topics will be covered in COMPSCI 345?", "answer": "The core topics in COMPSCI 345 include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, and sampling.", "raw_info": "COMPSCI  345\nLearn the fundamentals of modern 2D software graphics, and how these can be efficiently implemented in C/C++. Core topics include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, sampling. Advanced topics may include gradients, parametric curves, and triangle meshes. Students will develop their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced. At each milestone, their work will be evaluated for functionality, clarity, and performance. Students will learn firsthand how to evaluate implementation tradeoffs. Prerequisite: Computer Science 201; and Computer Science 210 or 250; and Mathematics 216, 218, or 221.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210 or 250) and (Mathematics 216, 218, or 221).\n"}
{"question": "Will COMPSCI 345 cover advanced topics, and if so, which ones?", "answer": "Yes, COMPSCI 345 may cover advanced topics such as gradients, parametric curves, and triangle meshes.", "raw_info": "COMPSCI  345\nLearn the fundamentals of modern 2D software graphics, and how these can be efficiently implemented in C/C++. Core topics include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, sampling. Advanced topics may include gradients, parametric curves, and triangle meshes. Students will develop their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced. At each milestone, their work will be evaluated for functionality, clarity, and performance. Students will learn firsthand how to evaluate implementation tradeoffs. Prerequisite: Computer Science 201; and Computer Science 210 or 250; and Mathematics 216, 218, or 221.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210 or 250) and (Mathematics 216, 218, or 221).\n"}
{"question": "In COMPSCI 345, what project will students be working on throughout the semester?", "answer": "Students in COMPSCI 345 will be developing their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced.", "raw_info": "COMPSCI  345\nLearn the fundamentals of modern 2D software graphics, and how these can be efficiently implemented in C/C++. Core topics include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, sampling. Advanced topics may include gradients, parametric curves, and triangle meshes. Students will develop their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced. At each milestone, their work will be evaluated for functionality, clarity, and performance. Students will learn firsthand how to evaluate implementation tradeoffs. Prerequisite: Computer Science 201; and Computer Science 210 or 250; and Mathematics 216, 218, or 221.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210 or 250) and (Mathematics 216, 218, or 221).\n"}
{"question": "Who could I expect to assess my project work in COMPSCI 345?", "answer": "While the text does not specify who specifically will assess your project work in COMPSCI 345, it states that students' work will be evaluated at each milestone for functionality, clarity, and performance.", "raw_info": "COMPSCI  345\nLearn the fundamentals of modern 2D software graphics, and how these can be efficiently implemented in C/C++. Core topics include color, geometric primitives, scan conversion, clipping, transformations, alpha blending, sampling. Advanced topics may include gradients, parametric curves, and triangle meshes. Students will develop their own graphics engine, evolving it over the course of the semester as new principles and techniques are introduced. At each milestone, their work will be evaluated for functionality, clarity, and performance. Students will learn firsthand how to evaluate implementation tradeoffs. Prerequisite: Computer Science 201; and Computer Science 210 or 250; and Mathematics 216, 218, or 221.\nPrerequisites\nPrerequisite: Computer Science 201 and (Computer Science 210 or 250) and (Mathematics 216, 218, or 221).\n"}
{"question": "What topics does COMPSCI 260 cover regarding genomic sequences?", "answer": "COMPSCI 260 covers topics such as genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data.", "raw_info": "COMPSCI  260\nA computational perspective on the analysis of genomic and genome-scale information. Focus on exploration and analysis of large genomic sequences, but also attention to issues in structural and functional genomics. Topics include genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data. Students to learn computational approaches to genomics as well as to develop practical experience with handling, analyzing, and visualizing information at a genome-scale.\n"}
{"question": "In COMPSCI 260, what computational skills will I develop related to genomics?", "answer": "In COMPSCI 260, you will learn computational approaches to genomics and develop practical experience with handling, analyzing, and visualizing information at a genome-scale.", "raw_info": "COMPSCI  260\nA computational perspective on the analysis of genomic and genome-scale information. Focus on exploration and analysis of large genomic sequences, but also attention to issues in structural and functional genomics. Topics include genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data. Students to learn computational approaches to genomics as well as to develop practical experience with handling, analyzing, and visualizing information at a genome-scale.\n"}
{"question": "Does COMPSCI 260 include a focus on both structural and functional genomics?", "answer": "Yes, COMPSCI 260 includes attention to issues in both structural and functional genomics.", "raw_info": "COMPSCI  260\nA computational perspective on the analysis of genomic and genome-scale information. Focus on exploration and analysis of large genomic sequences, but also attention to issues in structural and functional genomics. Topics include genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data. Students to learn computational approaches to genomics as well as to develop practical experience with handling, analyzing, and visualizing information at a genome-scale.\n"}
{"question": "Will I learn about protein threading and folding in COMPSCI 260?", "answer": "Yes, protein threading and folding are among the topics covered in COMPSCI 260.", "raw_info": "COMPSCI  260\nA computational perspective on the analysis of genomic and genome-scale information. Focus on exploration and analysis of large genomic sequences, but also attention to issues in structural and functional genomics. Topics include genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data. Students to learn computational approaches to genomics as well as to develop practical experience with handling, analyzing, and visualizing information at a genome-scale.\n"}
{"question": "Does COMPSCI 260 emphasize practical experience with genome-scale information?", "answer": "Yes, students in COMPSCI 260 will develop practical experience with handling, analyzing, and visualizing information at a genome-scale.", "raw_info": "COMPSCI  260\nA computational perspective on the analysis of genomic and genome-scale information. Focus on exploration and analysis of large genomic sequences, but also attention to issues in structural and functional genomics. Topics include genome sequence assembly, local and global alignment, gene and motif finding, protein threading and folding, and the clustering and classification of genes and tissues using gene expression data. Students to learn computational approaches to genomics as well as to develop practical experience with handling, analyzing, and visualizing information at a genome-scale.\n"}
{"question": "When will COMPSCI 376 be available to take?", "answer": "COMPSCI 376 will be available as of January 1, 2025.", "raw_info": "COMPSCI  376\n** available as of 2025-01-01\n"}
{"question": "What is the course number for the class becoming available on January 1, 2025?", "answer": "The course number is COMPSCI 376.", "raw_info": "COMPSCI  376\n** available as of 2025-01-01\n"}
{"question": "If I want to enroll in COMPSCI 376, starting in which year can I begin taking it?", "answer": "You can begin taking COMPSCI 376 in the year 2025.", "raw_info": "COMPSCI  376\n** available as of 2025-01-01\n"}
{"question": "What is the course number for the Principles of Securing the Creation, Storage, and Transmission of Data?", "answer": "The course number is COMPSCI 351.", "raw_info": "COMPSCI  351\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 210D or 250D and Computer Science 230.\nPrerequisites\nPrerequisite: CompSci 210D or 250D; and CompSci 230 or 232\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 351?", "answer": "The prerequisites for COMPSCI 351 are Computer Science 210D or 250D, and Computer Science 230.", "raw_info": "COMPSCI  351\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 210D or 250D and Computer Science 230.\nPrerequisites\nPrerequisite: CompSci 210D or 250D; and CompSci 230 or 232\n"}
{"question": "Does COMPSCI 351 cover cryptography and cryptographic protocols?", "answer": "Yes, COMPSCI 351 covers cryptography and cryptographic protocols, including key exchange protocols.", "raw_info": "COMPSCI  351\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 210D or 250D and Computer Science 230.\nPrerequisites\nPrerequisite: CompSci 210D or 250D; and CompSci 230 or 232\n"}
{"question": "Can a student who took Computer Science 232 instead of 230 enroll in COMPSCI 351?", "answer": "Yes, a student who has completed either Computer Science 230 or 232 can enroll in COMPSCI 351, provided they have also taken 210D or 250D.", "raw_info": "COMPSCI  351\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 210D or 250D and Computer Science 230.\nPrerequisites\nPrerequisite: CompSci 210D or 250D; and CompSci 230 or 232\n"}
{"question": "What is the course number for the \"Introduction to algorithmic and computational issues in structural molecular biology and molecular biophysics\" class?", "answer": "The course number is COMPSCI 663.", "raw_info": "COMPSCI  663\nIntroduction to algorithmic and computational issues in structural molecular biology and molecular biophysics. Emphasizes geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design. Explores computational methods for discovering new pharmaceuticals, NMR and X-ray data, and protein-ligand docking. Prerequisites: students should have some familiarity with algorithms, and a basic knowledge of molecular biology. Alternatively, consent of instructor.\n"}
{"question": "What are the main topics covered in COMPSCI 663?", "answer": "The main topics include geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design.", "raw_info": "COMPSCI  663\nIntroduction to algorithmic and computational issues in structural molecular biology and molecular biophysics. Emphasizes geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design. Explores computational methods for discovering new pharmaceuticals, NMR and X-ray data, and protein-ligand docking. Prerequisites: students should have some familiarity with algorithms, and a basic knowledge of molecular biology. Alternatively, consent of instructor.\n"}
{"question": "Are there any prerequisites for enrolling in COMPSCI 663?", "answer": "Yes, students should have some familiarity with algorithms and a basic knowledge of molecular biology. Alternatively, they must have the consent of the instructor.", "raw_info": "COMPSCI  663\nIntroduction to algorithmic and computational issues in structural molecular biology and molecular biophysics. Emphasizes geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design. Explores computational methods for discovering new pharmaceuticals, NMR and X-ray data, and protein-ligand docking. Prerequisites: students should have some familiarity with algorithms, and a basic knowledge of molecular biology. Alternatively, consent of instructor.\n"}
{"question": "What computational methods are explored in COMPSCI 663 for pharmaceutical discovery?", "answer": "The course explores computational methods for discovering new pharmaceuticals, NMR and X-ray data analysis, and protein-ligand docking.", "raw_info": "COMPSCI  663\nIntroduction to algorithmic and computational issues in structural molecular biology and molecular biophysics. Emphasizes geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design. Explores computational methods for discovering new pharmaceuticals, NMR and X-ray data, and protein-ligand docking. Prerequisites: students should have some familiarity with algorithms, and a basic knowledge of molecular biology. Alternatively, consent of instructor.\n"}
{"question": "Does COMPSCI 663 include topics on drug design?", "answer": "Yes, the course covers rational drug design and protein design as part of its curriculum.", "raw_info": "COMPSCI  663\nIntroduction to algorithmic and computational issues in structural molecular biology and molecular biophysics. Emphasizes geometric algorithms, provable approximation algorithms, computational biophysics, molecular interactions, computational structural biology, proteomics, rational drug design, and protein design. Explores computational methods for discovering new pharmaceuticals, NMR and X-ray data, and protein-ligand docking. Prerequisites: students should have some familiarity with algorithms, and a basic knowledge of molecular biology. Alternatively, consent of instructor.\n"}
{"question": "What prerequisites are needed to enroll in COMPSCI 210D?", "answer": "The prerequisite for enrolling in COMPSCI 210D is Computer Science 201.", "raw_info": "COMPSCI  210D\nThis course provides a programmer's view of how computer systems execute programs and store information. It examines key computational abstraction levels below modern high-level languages; introduction to C, number and data representations, computer memory, assembly language, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and introduction to concurrency. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D. Insructor: Lebeck, Chase, Zhou, Fain, Wills\nPrerequisites\nPrerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D.\n"}
{"question": "Who are the instructors teaching COMPSCI 210D?", "answer": "The instructors for COMPSCI 210D are Lebeck, Chase, Zhou, Fain, and Wills.", "raw_info": "COMPSCI  210D\nThis course provides a programmer's view of how computer systems execute programs and store information. It examines key computational abstraction levels below modern high-level languages; introduction to C, number and data representations, computer memory, assembly language, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and introduction to concurrency. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D. Insructor: Lebeck, Chase, Zhou, Fain, Wills\nPrerequisites\nPrerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D.\n"}
{"question": "Can a student who has taken Computer Science 250D enroll in COMPSCI 210D?", "answer": "No, students who have taken Computer Science 250D are not open to enroll in COMPSCI 210D.", "raw_info": "COMPSCI  210D\nThis course provides a programmer's view of how computer systems execute programs and store information. It examines key computational abstraction levels below modern high-level languages; introduction to C, number and data representations, computer memory, assembly language, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and introduction to concurrency. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D. Insructor: Lebeck, Chase, Zhou, Fain, Wills\nPrerequisites\nPrerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D.\n"}
{"question": "Does COMPSCI 210D include learning about assembly language and memory management?", "answer": "Yes, COMPSCI 210D includes topics on assembly language and memory management.", "raw_info": "COMPSCI  210D\nThis course provides a programmer's view of how computer systems execute programs and store information. It examines key computational abstraction levels below modern high-level languages; introduction to C, number and data representations, computer memory, assembly language, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and introduction to concurrency. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D. Insructor: Lebeck, Chase, Zhou, Fain, Wills\nPrerequisites\nPrerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D.\n"}
{"question": "Is concurrency part of the curriculum in COMPSCI 210D?", "answer": "Yes, an introduction to concurrency is part of the curriculum in COMPSCI 210D.", "raw_info": "COMPSCI  210D\nThis course provides a programmer's view of how computer systems execute programs and store information. It examines key computational abstraction levels below modern high-level languages; introduction to C, number and data representations, computer memory, assembly language, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and introduction to concurrency. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D. Insructor: Lebeck, Chase, Zhou, Fain, Wills\nPrerequisites\nPrerequisite: Computer Science 201. Not open to students who have taken Computer Science 250D.\n"}
{"question": "What topics are covered in COMPSCI 632 regarding approximation algorithms?", "answer": "In COMPSCI 632, traditional approximation algorithms are covered using combinatorial and linear programming techniques.", "raw_info": "COMPSCI  632\nCover traditional approximation algorithms with combinatorial and linear programming techniques; extended survey of cut problems and metric embeddings; embeddings, dimensionality reduction, locality sensitive hashing, and game theory.\n"}
{"question": "Does COMPSCI 632 include any content related to game theory?", "answer": "Yes, COMPSCI 632 includes content on game theory.", "raw_info": "COMPSCI  632\nCover traditional approximation algorithms with combinatorial and linear programming techniques; extended survey of cut problems and metric embeddings; embeddings, dimensionality reduction, locality sensitive hashing, and game theory.\n"}
{"question": "Are metric embeddings discussed in COMPSCI 632?", "answer": "Yes, COMPSCI 632 covers metric embeddings extensively.", "raw_info": "COMPSCI  632\nCover traditional approximation algorithms with combinatorial and linear programming techniques; extended survey of cut problems and metric embeddings; embeddings, dimensionality reduction, locality sensitive hashing, and game theory.\n"}
{"question": "What advanced techniques are explored in COMPSCI 632 aside from approximation algorithms?", "answer": "Besides approximation algorithms, COMPSCI 632 explores embeddings, dimensionality reduction, locality sensitive hashing, and game theory.", "raw_info": "COMPSCI  632\nCover traditional approximation algorithms with combinatorial and linear programming techniques; extended survey of cut problems and metric embeddings; embeddings, dimensionality reduction, locality sensitive hashing, and game theory.\n"}
{"question": "Is dimensionality reduction a topic included in the curriculum of COMPSCI 632?", "answer": "Yes, dimensionality reduction is included in the curriculum of COMPSCI 632.", "raw_info": "COMPSCI  632\nCover traditional approximation algorithms with combinatorial and linear programming techniques; extended survey of cut problems and metric embeddings; embeddings, dimensionality reduction, locality sensitive hashing, and game theory.\n"}
{"question": "What are some of the topics covered in COMPSCI 531D?", "answer": "COMPSCI 531D covers dynamic data structures, graph algorithms, randomized algorithms, intractability, and NP completeness.", "raw_info": "COMPSCI  531D\nApplications include dynamic data structures, graph algorithms, randomized algorithms. Intractability and NP completeness. Prerequisite: Computer Science 201 and 230, or equivalent.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 531D?", "answer": "The prerequisites for enrolling in COMPSCI 531D are Computer Science 201 and 230, or an equivalent course.", "raw_info": "COMPSCI  531D\nApplications include dynamic data structures, graph algorithms, randomized algorithms. Intractability and NP completeness. Prerequisite: Computer Science 201 and 230, or equivalent.\n"}
{"question": "Does COMPSCI 531D explore the concept of NP completeness?", "answer": "Yes, COMPSCI 531D explores the concept of NP completeness.", "raw_info": "COMPSCI  531D\nApplications include dynamic data structures, graph algorithms, randomized algorithms. Intractability and NP completeness. Prerequisite: Computer Science 201 and 230, or equivalent.\n"}
{"question": "Who should consider taking COMPSCI 531D based on the prerequisites mentioned?", "answer": "Students who have completed Computer Science 201 and 230, or an equivalent, should consider taking COMPSCI 531D.", "raw_info": "COMPSCI  531D\nApplications include dynamic data structures, graph algorithms, randomized algorithms. Intractability and NP completeness. Prerequisite: Computer Science 201 and 230, or equivalent.\n"}
{"question": "Would a student with no experience in graph algorithms benefit from taking COMPSCI 531D?", "answer": "A student without prior experience in graph algorithms might benefit from COMPSCI 531D, but they need to meet the prerequisites of Computer Science 201 and 230, or equivalent.", "raw_info": "COMPSCI  531D\nApplications include dynamic data structures, graph algorithms, randomized algorithms. Intractability and NP completeness. Prerequisite: Computer Science 201 and 230, or equivalent.\n"}
{"question": "What is the prerequisite course for enrolling in COMPSCI 585?", "answer": "The prerequisite course for enrolling in COMPSCI 585 is Operating Systems (CompSci 310 or an equivalent course).", "raw_info": "COMPSCI  585\nFocus on architectural approaches to building secure, trustworthy software systems. Motivated by a discussion of real-world threat models and vulnerabilities. Analyzes enabling mechanisms (e.g., trusted hardware) in terms of abstractions, implementations, security guarantees, and hardware-software decomposition. Surveys systems across a wide range of application scenarios. Briefly considers other approaches to improving the security of software systems (e.g., formal verification). Primarily driven by reading and discussing research papers along with a research project. Prerequisite: Operating Systems (CompSci 310 or equivalent).\nPrerequisites\nPrerequisite: CompSci 310 or graduate student\n"}
{"question": "In COMPSCI 585, what is one of the primary activities that drive the learning process?", "answer": "In COMPSCI 585, the learning process is primarily driven by reading and discussing research papers along with a research project.", "raw_info": "COMPSCI  585\nFocus on architectural approaches to building secure, trustworthy software systems. Motivated by a discussion of real-world threat models and vulnerabilities. Analyzes enabling mechanisms (e.g., trusted hardware) in terms of abstractions, implementations, security guarantees, and hardware-software decomposition. Surveys systems across a wide range of application scenarios. Briefly considers other approaches to improving the security of software systems (e.g., formal verification). Primarily driven by reading and discussing research papers along with a research project. Prerequisite: Operating Systems (CompSci 310 or equivalent).\nPrerequisites\nPrerequisite: CompSci 310 or graduate student\n"}
{"question": "What topics does COMPSCI 585 focus on in terms of software systems?", "answer": "COMPSCI 585 focuses on architectural approaches to building secure, trustworthy software systems, real-world threat models and vulnerabilities, and various enabling mechanisms like trusted hardware.", "raw_info": "COMPSCI  585\nFocus on architectural approaches to building secure, trustworthy software systems. Motivated by a discussion of real-world threat models and vulnerabilities. Analyzes enabling mechanisms (e.g., trusted hardware) in terms of abstractions, implementations, security guarantees, and hardware-software decomposition. Surveys systems across a wide range of application scenarios. Briefly considers other approaches to improving the security of software systems (e.g., formal verification). Primarily driven by reading and discussing research papers along with a research project. Prerequisite: Operating Systems (CompSci 310 or equivalent).\nPrerequisites\nPrerequisite: CompSci 310 or graduate student\n"}
{"question": "Does COMPSCI 585 include a survey of systems across different application scenarios?", "answer": "Yes, COMPSCI 585 includes a survey of systems across a wide range of application scenarios.", "raw_info": "COMPSCI  585\nFocus on architectural approaches to building secure, trustworthy software systems. Motivated by a discussion of real-world threat models and vulnerabilities. Analyzes enabling mechanisms (e.g., trusted hardware) in terms of abstractions, implementations, security guarantees, and hardware-software decomposition. Surveys systems across a wide range of application scenarios. Briefly considers other approaches to improving the security of software systems (e.g., formal verification). Primarily driven by reading and discussing research papers along with a research project. Prerequisite: Operating Systems (CompSci 310 or equivalent).\nPrerequisites\nPrerequisite: CompSci 310 or graduate student\n"}
{"question": "What other approach to improving software security is briefly considered in COMPSCI 585?", "answer": "COMPSCI 585 briefly considers formal verification as another approach to improving the security of software systems.", "raw_info": "COMPSCI  585\nFocus on architectural approaches to building secure, trustworthy software systems. Motivated by a discussion of real-world threat models and vulnerabilities. Analyzes enabling mechanisms (e.g., trusted hardware) in terms of abstractions, implementations, security guarantees, and hardware-software decomposition. Surveys systems across a wide range of application scenarios. Briefly considers other approaches to improving the security of software systems (e.g., formal verification). Primarily driven by reading and discussing research papers along with a research project. Prerequisite: Operating Systems (CompSci 310 or equivalent).\nPrerequisites\nPrerequisite: CompSci 310 or graduate student\n"}
{"question": "What type of problems does COMPSCI 703 focus on solving for students?", "answer": "COMPSCI 703 focuses on programming and algorithmic problems typically encountered in technical interviews.", "raw_info": "COMPSCI  703\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing, peer review, and discussion of what works and does not work.\n"}
{"question": "What activities are students expected to participate in for COMPSCI 703?", "answer": "Students are expected to participate in leetcode, hackerrank, and APT problems, as well as engage in role-playing, peer review, and discussions.", "raw_info": "COMPSCI  703\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing, peer review, and discussion of what works and does not work.\n"}
{"question": "Which platforms are mentioned in COMPSCI 703 for solving problems?", "answer": "The platforms mentioned for solving problems in COMPSCI 703 are leetcode, hackerrank, and APT.", "raw_info": "COMPSCI  703\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing, peer review, and discussion of what works and does not work.\n"}
{"question": "In COMPSCI 703, what is the importance of role-playing and peer review?", "answer": "Role-playing and peer review are important in COMPSCI 703 for engaging peers and interviewers in the problem-solving process and discussing effective solutions.", "raw_info": "COMPSCI  703\nTechniques and best practices for solving the kind of programming and algorithmic problems typically part of technical interviews. Common genres of problems, methods for solving them, engaging peers and interviewers in the process of solving problems. Students will be expected to participate in leetcode, hackerrank, and APT problems, with role-playing, peer review, and discussion of what works and does not work.\n"}
{"question": "What topics does COMPSCI 512 cover related to computer networks?", "answer": "COMPSCI 512 covers advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services.", "raw_info": "COMPSCI  512\nPrinciples and techniques for sharing information and resources in computer networks, ranging from high-speed clusters and data centers to the global Internet. Topics include advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services. Recommended prerequisite: Computer Science 310 or 510.\n"}
{"question": "What are the recommended prerequisites for enrolling in COMPSCI 512?", "answer": "The recommended prerequisites for COMPSCI 512 are Computer Science 310 or 510.", "raw_info": "COMPSCI  512\nPrinciples and techniques for sharing information and resources in computer networks, ranging from high-speed clusters and data centers to the global Internet. Topics include advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services. Recommended prerequisite: Computer Science 310 or 510.\n"}
{"question": "What kind of environments and services are studied in COMPSCI 512?", "answer": "In COMPSCI 512, students study high-speed clusters, data centers, and the global Internet.", "raw_info": "COMPSCI  512\nPrinciples and techniques for sharing information and resources in computer networks, ranging from high-speed clusters and data centers to the global Internet. Topics include advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services. Recommended prerequisite: Computer Science 310 or 510.\n"}
{"question": "Is COMPSCI 310 a required prerequisite for COMPSCI 512?", "answer": "COMPSCI 310 is not a required prerequisite for COMPSCI 512; it is recommended.", "raw_info": "COMPSCI  512\nPrinciples and techniques for sharing information and resources in computer networks, ranging from high-speed clusters and data centers to the global Internet. Topics include advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services. Recommended prerequisite: Computer Science 310 or 510.\n"}
{"question": "Who would benefit from taking COMPSCI 512, given its course description?", "answer": "Students interested in learning about sharing information and resources in computer networks, especially those focusing on distributed systems and Internet services, would benefit from taking COMPSCI 512.", "raw_info": "COMPSCI  512\nPrinciples and techniques for sharing information and resources in computer networks, ranging from high-speed clusters and data centers to the global Internet. Topics include advanced distributed storage, distributed programming environments, replication, caching and consistency, transactional concurrency control, reliable update and recovery, and issues of scale and security for Internet services. Recommended prerequisite: Computer Science 310 or 510.\n"}
{"question": "What are some of the key topics covered in COMPSCI 308?", "answer": "COMPSCI 308 covers topics such as techniques for design and construction of reliable, maintainable, and useful software systems, programming paradigms, revision control, UNIX tools, performance analysis, GUI, software engineering, testing, and documentation.", "raw_info": "COMPSCI  308\nTechniques for design and construction of reliable, maintainable and useful software systems. Programming paradigms and tools for medium to large projects: revision control, UNIX tools, performance analysis, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 307.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Who is eligible to take COMPSCI 308, according to the prerequisites?", "answer": "To take COMPSCI 308, students must have completed Computer Science 201 or an equivalent course. It is not open to students who have already taken Computer Science 307.", "raw_info": "COMPSCI  308\nTechniques for design and construction of reliable, maintainable and useful software systems. Programming paradigms and tools for medium to large projects: revision control, UNIX tools, performance analysis, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 307.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Can a student who has taken Computer Science 307 enroll in COMPSCI 308?", "answer": "No, a student who has taken Computer Science 307 cannot enroll in COMPSCI 308.", "raw_info": "COMPSCI  308\nTechniques for design and construction of reliable, maintainable and useful software systems. Programming paradigms and tools for medium to large projects: revision control, UNIX tools, performance analysis, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 307.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is a prerequisite for enrolling in COMPSCI 308?", "answer": "The prerequisite for enrolling in COMPSCI 308 is completing Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  308\nTechniques for design and construction of reliable, maintainable and useful software systems. Programming paradigms and tools for medium to large projects: revision control, UNIX tools, performance analysis, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 307.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Which course should not be taken if a student plans to take COMPSCI 308?", "answer": "Students should not take Computer Science 307 if they plan to take COMPSCI 308.", "raw_info": "COMPSCI  308\nTechniques for design and construction of reliable, maintainable and useful software systems. Programming paradigms and tools for medium to large projects: revision control, UNIX tools, performance analysis, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 307.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Can students who have taken Computer Science 101 enroll in COMPSCI 94?", "answer": "No, students who have taken Computer Science 101 cannot enroll in COMPSCI 94.", "raw_info": "COMPSCI   94\nProgramming and problem solving in a specific domain such as robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area. Not open to students who have taken Computer Science 101, 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 101, 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "If I have already completed Engineering 103, am I eligible to take COMPSCI 94?", "answer": "No, if you have completed Engineering 103, you are not eligible to take COMPSCI 94.", "raw_info": "COMPSCI   94\nProgramming and problem solving in a specific domain such as robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area. Not open to students who have taken Computer Science 101, 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 101, 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What are some of the application areas covered in COMPSCI 94?", "answer": "COMPSCI 94 covers application areas such as robotics, virtual worlds, web programming, biology, genomics, or computer science.", "raw_info": "COMPSCI   94\nProgramming and problem solving in a specific domain such as robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area. Not open to students who have taken Computer Science 101, 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 101, 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Is it possible to take COMPSCI 94 if I have completed Computer Science 201?", "answer": "No, students who have completed Computer Science 201 are not allowed to take COMPSCI 94.", "raw_info": "COMPSCI   94\nProgramming and problem solving in a specific domain such as robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area. Not open to students who have taken Computer Science 101, 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 101, 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "Does COMPSCI 94 require any prerequisites?", "answer": "COMPSCI 94 does not require specific prerequisites, but it is not open to students who have taken certain other courses like Computer Science 101, 102, 116, Engineering 103, or Computer Science 201.", "raw_info": "COMPSCI   94\nProgramming and problem solving in a specific domain such as robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area. Not open to students who have taken Computer Science 101, 102, 116, Engineering 103 or Computer Science 201.\nPrerequisites\nNot open to students who have taken Computer Science 101, 102, 116, Engineering 103L, 105L, or Computer Science 201\n"}
{"question": "What are the main topics covered in COMPSCI 581?", "answer": "COMPSCI 581 covers principles of securing data creation, storage, and transmission, ensuring integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems, cryptography and cryptographic protocols, user authentication, software vulnerabilities, engineering to reduce vulnerabilities, firewalls, technologies supporting online privacy, and selected advanced topics.", "raw_info": "COMPSCI  581\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 201 and 230 and (210 or 250).\nPrerequisites\nPrerequisite: Computer Science 201 and 230 and (210D or 250D), or graduate standing\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 581?", "answer": "The prerequisites for COMPSCI 581 are Computer Science 201, 230, and either 210D or 250D, or having graduate standing.", "raw_info": "COMPSCI  581\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 201 and 230 and (210 or 250).\nPrerequisites\nPrerequisite: Computer Science 201 and 230 and (210D or 250D), or graduate standing\n"}
{"question": "Does COMPSCI 581 include a focus on cryptography?", "answer": "Yes, COMPSCI 581 includes cryptography and cryptographic protocols, primarily focusing on key exchange protocols.", "raw_info": "COMPSCI  581\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 201 and 230 and (210 or 250).\nPrerequisites\nPrerequisite: Computer Science 201 and 230 and (210D or 250D), or graduate standing\n"}
{"question": "Can a graduate student enroll in COMPSCI 581 without having completed Computer Science 210D or 250D?", "answer": "Yes, a graduate student can enroll in COMPSCI 581 without having completed Computer Science 210D or 250D, as having graduate standing fulfills the prerequisite requirement.", "raw_info": "COMPSCI  581\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 201 and 230 and (210 or 250).\nPrerequisites\nPrerequisite: Computer Science 201 and 230 and (210D or 250D), or graduate standing\n"}
{"question": "What specific technologies related to online privacy are discussed in COMPSCI 581?", "answer": "COMPSCI 581 discusses technologies that support online privacy, although specific technologies are not detailed in the provided information.", "raw_info": "COMPSCI  581\nPrinciples of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality, and availability. Topics include access control and authentication in distributed systems; cryptography and cryptographic protocols (mainly key exchange protocols); user authentication; software vulnerabilities and software engineering to reduce vulnerabilities; firewalls and related technologies; technologies to support online privacy; and selected advanced topics. Prerequisite: Computer Science 201 and 230 and (210 or 250).\nPrerequisites\nPrerequisite: Computer Science 201 and 230 and (210D or 250D), or graduate standing\n"}
{"question": "What is the central goal of the course COMPSCI 391?", "answer": "The central goal of COMPSCI 391 is to produce a substantive paper, project, or written report on a previously approved topic.", "raw_info": "COMPSCI  391\nIndividual work in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report covering a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Who needs to give consent for a student to enroll in COMPSCI 391?", "answer": "Both the instructor and the director of undergraduate studies must give consent for a student to enroll in COMPSCI 391.", "raw_info": "COMPSCI  391\nIndividual work in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report covering a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Is department consent required for enrolling in COMPSCI 391?", "answer": "Yes, department consent is required for enrolling in COMPSCI 391.", "raw_info": "COMPSCI  391\nIndividual work in a field of special interest under the supervision of a faculty member, the central goal of which is a substantive paper, project, or written report covering a previously approved topic. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What is the focus of COMPSCI 240 regarding identity?", "answer": "COMPSCI 240 focuses on examining how identity impacts and is impacted by computing, introducing identity as a social construct and exploring societal factors influencing technology development and use.", "raw_info": "COMPSCI  240\nThis course examines how identity impacts and is impacted by computing. Through an introduction to identity as a social construct, we will explore the societal factors that have influenced present-day technology development and use, historical contexts, and the resulting impact on various communities.\n"}
{"question": "How does COMPSCI 240 explore the historical contexts in technology?", "answer": "COMPSCI 240 explores historical contexts by examining how societal factors have influenced technology development and use, as well as their impact on various communities.", "raw_info": "COMPSCI  240\nThis course examines how identity impacts and is impacted by computing. Through an introduction to identity as a social construct, we will explore the societal factors that have influenced present-day technology development and use, historical contexts, and the resulting impact on various communities.\n"}
{"question": "What societal factors are studied in COMPSCI 240?", "answer": "In COMPSCI 240, students study societal factors that have influenced present-day technology development and use, as part of understanding the impact of identity and computing.", "raw_info": "COMPSCI  240\nThis course examines how identity impacts and is impacted by computing. Through an introduction to identity as a social construct, we will explore the societal factors that have influenced present-day technology development and use, historical contexts, and the resulting impact on various communities.\n"}
{"question": "Is identity treated as a static or dynamic concept in COMPSCI 240?", "answer": "In COMPSCI 240, identity is treated as a social construct, implying that it is a dynamic concept influenced by societal factors and computing.", "raw_info": "COMPSCI  240\nThis course examines how identity impacts and is impacted by computing. Through an introduction to identity as a social construct, we will explore the societal factors that have influenced present-day technology development and use, historical contexts, and the resulting impact on various communities.\n"}
{"question": "What will students learn to develop in COMPSCI 553?", "answer": "Students in COMPSCI 553 will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output.", "raw_info": "COMPSCI  553\nCovers the fundamentals of compiler design. Students will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output: lexical analysis, parsing, type checking, translation to intermediate representation, instruction selection, liveness analysis, and register allocation. Students are expected to have a strong programming background prior to taking this course, as writing a compiler is a significant programming task. Prerequisites: Electrical and Computer Engineering 250L or Computer Science 250 or (ECE 550D and ECE 551D).\nPrerequisites\nECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or Graduate Standing\n"}
{"question": "What programming background is expected for students enrolling in COMPSCI 553?", "answer": "Students are expected to have a strong programming background prior to taking COMPSCI 553, as writing a compiler is a significant programming task.", "raw_info": "COMPSCI  553\nCovers the fundamentals of compiler design. Students will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output: lexical analysis, parsing, type checking, translation to intermediate representation, instruction selection, liveness analysis, and register allocation. Students are expected to have a strong programming background prior to taking this course, as writing a compiler is a significant programming task. Prerequisites: Electrical and Computer Engineering 250L or Computer Science 250 or (ECE 550D and ECE 551D).\nPrerequisites\nECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or Graduate Standing\n"}
{"question": "What are the prerequisite courses for COMPSCI 553?", "answer": "The prerequisite courses for COMPSCI 553 are ECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or having Graduate Standing.", "raw_info": "COMPSCI  553\nCovers the fundamentals of compiler design. Students will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output: lexical analysis, parsing, type checking, translation to intermediate representation, instruction selection, liveness analysis, and register allocation. Students are expected to have a strong programming background prior to taking this course, as writing a compiler is a significant programming task. Prerequisites: Electrical and Computer Engineering 250L or Computer Science 250 or (ECE 550D and ECE 551D).\nPrerequisites\nECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or Graduate Standing\n"}
{"question": "Does COMPSCI 553 include instruction on liveness analysis and register allocation?", "answer": "Yes, COMPSCI 553 includes instruction on liveness analysis and register allocation as part of the compiler design process.", "raw_info": "COMPSCI  553\nCovers the fundamentals of compiler design. Students will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output: lexical analysis, parsing, type checking, translation to intermediate representation, instruction selection, liveness analysis, and register allocation. Students are expected to have a strong programming background prior to taking this course, as writing a compiler is a significant programming task. Prerequisites: Electrical and Computer Engineering 250L or Computer Science 250 or (ECE 550D and ECE 551D).\nPrerequisites\nECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or Graduate Standing\n"}
{"question": "Can a student with Graduate Standing enroll directly in COMPSCI 553 without the specified undergraduate prerequisites?", "answer": "Yes, a student with Graduate Standing can enroll in COMPSCI 553 without taking the specified undergraduate prerequisites.", "raw_info": "COMPSCI  553\nCovers the fundamentals of compiler design. Students will develop a working compiler, writing all stages required to take source code as input and produce working assembly as output: lexical analysis, parsing, type checking, translation to intermediate representation, instruction selection, liveness analysis, and register allocation. Students are expected to have a strong programming background prior to taking this course, as writing a compiler is a significant programming task. Prerequisites: Electrical and Computer Engineering 250L or Computer Science 250 or (ECE 550D and ECE 551D).\nPrerequisites\nECE 250L or COMPSCI 250 or (ECE 550 and ECE 551) or Graduate Standing\n"}
{"question": "What is the course number for the introductory deep learning class that covers convolutional networks and transformers?", "answer": "The course number is COMPSCI 574.", "raw_info": "COMPSCI  574\nAn introductory deep learning course, which emphasizes the fundamental algorithmic advances that have made modern deep learning possible, including forward- and reverse-mode automatic differentiation and stochastic optimization. The course will also cover standard deep learning architectures such as convolutional networks, recurrent networks, and transformers, and their applications to computer vision, natural language processing, speech processing, and reinforcement learning. Recommended prerequisites: undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, and comfort with programming in python.\n"}
{"question": "What topics related to automatic differentiation are emphasized in COMPSCI 574?", "answer": "COMPSCI 574 emphasizes forward- and reverse-mode automatic differentiation.", "raw_info": "COMPSCI  574\nAn introductory deep learning course, which emphasizes the fundamental algorithmic advances that have made modern deep learning possible, including forward- and reverse-mode automatic differentiation and stochastic optimization. The course will also cover standard deep learning architectures such as convolutional networks, recurrent networks, and transformers, and their applications to computer vision, natural language processing, speech processing, and reinforcement learning. Recommended prerequisites: undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, and comfort with programming in python.\n"}
{"question": "Are there any recommended prerequisites for enrolling in COMPSCI 574?", "answer": "Yes, the recommended prerequisites include undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, along with comfort with programming in Python.", "raw_info": "COMPSCI  574\nAn introductory deep learning course, which emphasizes the fundamental algorithmic advances that have made modern deep learning possible, including forward- and reverse-mode automatic differentiation and stochastic optimization. The course will also cover standard deep learning architectures such as convolutional networks, recurrent networks, and transformers, and their applications to computer vision, natural language processing, speech processing, and reinforcement learning. Recommended prerequisites: undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, and comfort with programming in python.\n"}
{"question": "Which professor would I have for COMPSCI 574, if the text only provides course content?", "answer": "The text does not provide the name of the professor for COMPSCI 574.", "raw_info": "COMPSCI  574\nAn introductory deep learning course, which emphasizes the fundamental algorithmic advances that have made modern deep learning possible, including forward- and reverse-mode automatic differentiation and stochastic optimization. The course will also cover standard deep learning architectures such as convolutional networks, recurrent networks, and transformers, and their applications to computer vision, natural language processing, speech processing, and reinforcement learning. Recommended prerequisites: undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, and comfort with programming in python.\n"}
{"question": "Does COMPSCI 574 focus only on theoretical aspects, or does it cover applications too?", "answer": "COMPSCI 574 covers both theoretical aspects and applications in computer vision, natural language processing, speech processing, and reinforcement learning.", "raw_info": "COMPSCI  574\nAn introductory deep learning course, which emphasizes the fundamental algorithmic advances that have made modern deep learning possible, including forward- and reverse-mode automatic differentiation and stochastic optimization. The course will also cover standard deep learning architectures such as convolutional networks, recurrent networks, and transformers, and their applications to computer vision, natural language processing, speech processing, and reinforcement learning. Recommended prerequisites: undergraduate-level multivariable calculus, linear algebra, probability, and machine learning, and comfort with programming in python.\n"}
{"question": "What are the prerequisites for COMPSCI 307D?", "answer": "The prerequisite for COMPSCI 307D is Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  307D\nTechniques for design and construction of reliable, maintainable and useful software systems development in teams. Programming paradigms and tools for small to medium projects: revision control, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 308.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Can a student who has taken Computer Science 308 enroll in COMPSCI 307D?", "answer": "No, students who have taken Computer Science 308 are not eligible to enroll in COMPSCI 307D.", "raw_info": "COMPSCI  307D\nTechniques for design and construction of reliable, maintainable and useful software systems development in teams. Programming paradigms and tools for small to medium projects: revision control, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 308.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What kinds of projects are covered in COMPSCI 307D?", "answer": "COMPSCI 307D covers programming paradigms and tools for small to medium projects.", "raw_info": "COMPSCI  307D\nTechniques for design and construction of reliable, maintainable and useful software systems development in teams. Programming paradigms and tools for small to medium projects: revision control, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 308.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What topics are included in COMPSCI 307D related to software engineering?", "answer": "COMPSCI 307D includes techniques for revision control, GUI development, software engineering, testing, and documentation.", "raw_info": "COMPSCI  307D\nTechniques for design and construction of reliable, maintainable and useful software systems development in teams. Programming paradigms and tools for small to medium projects: revision control, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 308.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Is COMPSCI 307D focused on individual work or teamwork?", "answer": "COMPSCI 307D focuses on software systems development in teams.", "raw_info": "COMPSCI  307D\nTechniques for design and construction of reliable, maintainable and useful software systems development in teams. Programming paradigms and tools for small to medium projects: revision control, GUI, software engineering, testing, documentation. Prerequisite: Computer Science 201. Not open to students who have taken Computer Science 308.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What topics are covered in COMPSCI 230?", "answer": "COMPSCI 230 covers mathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; and advanced topics from algebraic structures, geometric structures, combinatorial optimization, and number theory.", "raw_info": "COMPSCI  230\nMathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; advanced topics from algebraic structures, geometric structures, combinatorial optimization, number theory. Pre/corequisite: Computer Science 201. Not open to students who have taken CompSci 232.\nPrerequisites\nPre/corequisite: Computer Science 201. Not open to students who have taken Computer Science 232.\n"}
{"question": "What is the prerequisite for enrolling in COMPSCI 230?", "answer": "The prerequisite for enrolling in COMPSCI 230 is Computer Science 201.", "raw_info": "COMPSCI  230\nMathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; advanced topics from algebraic structures, geometric structures, combinatorial optimization, number theory. Pre/corequisite: Computer Science 201. Not open to students who have taken CompSci 232.\nPrerequisites\nPre/corequisite: Computer Science 201. Not open to students who have taken Computer Science 232.\n"}
{"question": "Can a student who has taken Computer Science 232 enroll in COMPSCI 230?", "answer": "No, students who have taken Computer Science 232 cannot enroll in COMPSCI 230.", "raw_info": "COMPSCI  230\nMathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; advanced topics from algebraic structures, geometric structures, combinatorial optimization, number theory. Pre/corequisite: Computer Science 201. Not open to students who have taken CompSci 232.\nPrerequisites\nPre/corequisite: Computer Science 201. Not open to students who have taken Computer Science 232.\n"}
{"question": "Is it possible to take Computer Science 201 concurrently with COMPSCI 230?", "answer": "Yes, Computer Science 201 can be taken as a pre/corequisite, meaning you can take it concurrently with COMPSCI 230.", "raw_info": "COMPSCI  230\nMathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; advanced topics from algebraic structures, geometric structures, combinatorial optimization, number theory. Pre/corequisite: Computer Science 201. Not open to students who have taken CompSci 232.\nPrerequisites\nPre/corequisite: Computer Science 201. Not open to students who have taken Computer Science 232.\n"}
{"question": "Why might a student be ineligible to take COMPSCI 230?", "answer": "A student might be ineligible to take COMPSCI 230 if they have already taken Computer Science 232.", "raw_info": "COMPSCI  230\nMathematical notations, logic, and proof; linear and matrix algebra; graphs, digraphs, trees, representations, and algorithms; counting, permutations, combinations, discrete probability, Markov models; advanced topics from algebraic structures, geometric structures, combinatorial optimization, number theory. Pre/corequisite: Computer Science 201. Not open to students who have taken CompSci 232.\nPrerequisites\nPre/corequisite: Computer Science 201. Not open to students who have taken Computer Science 232.\n"}
{"question": "What kind of topics can I expect to explore in COMPSCI 94FS with Professor A. Rossi?", "answer": "In COMPSCI 94FS, you can expect to explore programming and problem-solving in specific domains such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science.", "raw_info": "COMPSCI   94FS\nProgramming and problem solving in a specific domain such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "Does enrollment in COMPSCI 94FS require any specific consent?", "answer": "Yes, enrollment in COMPSCI 94FS requires department consent.", "raw_info": "COMPSCI   94FS\nProgramming and problem solving in a specific domain such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "If I decide to drop COMPSCI 94FS, what is required?", "answer": "To drop COMPSCI 94FS, department consent is required.", "raw_info": "COMPSCI   94FS\nProgramming and problem solving in a specific domain such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "What will students learn in Professor A. Rossi's COMPSCI 94FS course?", "answer": "Students will learn the basics of programming by studying problems in one application area in the COMPSCI 94FS course.", "raw_info": "COMPSCI   94FS\nProgramming and problem solving in a specific domain such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "Is the consent to enroll in COMPSCI 94FS the same as the consent needed to drop the course?", "answer": "Yes, both enrolling and dropping COMPSCI 94FS require department consent.", "raw_info": "COMPSCI   94FS\nProgramming and problem solving in a specific domain such as designing and implementing games, robotics, virtual worlds, web programming, biology, genomics, or computer science. Students learn the basics of programming by studying problems in one application area.\nEnroll Consent\nDepartment Consent Required\nDrop Consent\nDepartment Consent Required\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 586?", "answer": "The prerequisites for COMPSCI 586 are CompSci 201 or equivalent programming experience, or graduate student standing.", "raw_info": "COMPSCI  586\nThis course will introduce several security and privacy topics that have strong human factors component. Some of the themes that we cover throughout this course include overview of User Research Methods and Ethics, Equity and Inclusivity in Security and Privacy, Challenges In Designing Usable Security and Privacy Tools, Security and Privacy Education and Awareness, and Human-Centered Security and Privacy in Emerging Technologies. This course includes weekly reading commentaries, a midterm exam, and a final group research project. Recommended prerequisite: user research methods and CompSci 201 or equivalent programming experience.\nPrerequisites\nPrerequisite: Computer Science 201 or graduate student standing\n"}
{"question": "What kind of assessments are included in the COMPSCI 586 course?", "answer": "COMPSCI 586 includes weekly reading commentaries, a midterm exam, and a final group research project.", "raw_info": "COMPSCI  586\nThis course will introduce several security and privacy topics that have strong human factors component. Some of the themes that we cover throughout this course include overview of User Research Methods and Ethics, Equity and Inclusivity in Security and Privacy, Challenges In Designing Usable Security and Privacy Tools, Security and Privacy Education and Awareness, and Human-Centered Security and Privacy in Emerging Technologies. This course includes weekly reading commentaries, a midterm exam, and a final group research project. Recommended prerequisite: user research methods and CompSci 201 or equivalent programming experience.\nPrerequisites\nPrerequisite: Computer Science 201 or graduate student standing\n"}
{"question": "Does COMPSCI 586 cover topics related to human factors in security and privacy?", "answer": "Yes, COMPSCI 586 introduces several security and privacy topics with a strong human factors component.", "raw_info": "COMPSCI  586\nThis course will introduce several security and privacy topics that have strong human factors component. Some of the themes that we cover throughout this course include overview of User Research Methods and Ethics, Equity and Inclusivity in Security and Privacy, Challenges In Designing Usable Security and Privacy Tools, Security and Privacy Education and Awareness, and Human-Centered Security and Privacy in Emerging Technologies. This course includes weekly reading commentaries, a midterm exam, and a final group research project. Recommended prerequisite: user research methods and CompSci 201 or equivalent programming experience.\nPrerequisites\nPrerequisite: Computer Science 201 or graduate student standing\n"}
{"question": "Is prior knowledge in user research methods recommended for COMPSCI 586?", "answer": "Yes, prior knowledge in user research methods is recommended for COMPSCI 586.", "raw_info": "COMPSCI  586\nThis course will introduce several security and privacy topics that have strong human factors component. Some of the themes that we cover throughout this course include overview of User Research Methods and Ethics, Equity and Inclusivity in Security and Privacy, Challenges In Designing Usable Security and Privacy Tools, Security and Privacy Education and Awareness, and Human-Centered Security and Privacy in Emerging Technologies. This course includes weekly reading commentaries, a midterm exam, and a final group research project. Recommended prerequisite: user research methods and CompSci 201 or equivalent programming experience.\nPrerequisites\nPrerequisite: Computer Science 201 or graduate student standing\n"}
{"question": "Are there any themes focused on inclusivity covered in COMPSCI 586?", "answer": "Yes, COMPSCI 586 covers themes including Equity and Inclusivity in Security and Privacy.", "raw_info": "COMPSCI  586\nThis course will introduce several security and privacy topics that have strong human factors component. Some of the themes that we cover throughout this course include overview of User Research Methods and Ethics, Equity and Inclusivity in Security and Privacy, Challenges In Designing Usable Security and Privacy Tools, Security and Privacy Education and Awareness, and Human-Centered Security and Privacy in Emerging Technologies. This course includes weekly reading commentaries, a midterm exam, and a final group research project. Recommended prerequisite: user research methods and CompSci 201 or equivalent programming experience.\nPrerequisites\nPrerequisite: Computer Science 201 or graduate student standing\n"}
{"question": "Who is the instructor for COMPSCI 590.01 in Fall 2023?", "answer": "The instructor for COMPSCI 590.01 in Fall 2023 is Bhuwan Dhingra, Assistant Professor of Computer Science.", "raw_info": "COMPSCI  590\nCS 590.01 on Generative Models will be offered in Fall 2023, and taught by Bhuwan Dhingra, Assistant Professor of Computer Science. Generative Models is a special topics course, so it will not be offered every year.\n"}
{"question": "Will COMPSCI 590.01 on Generative Models be offered every year?", "answer": "No, COMPSCI 590.01 on Generative Models is a special topics course and it will not be offered every year.", "raw_info": "COMPSCI  590\nCS 590.01 on Generative Models will be offered in Fall 2023, and taught by Bhuwan Dhingra, Assistant Professor of Computer Science. Generative Models is a special topics course, so it will not be offered every year.\n"}
{"question": "What is the focus of the COMPSCI 590.01 course in Fall 2023?", "answer": "The focus of the COMPSCI 590.01 course in Fall 2023 is on Generative Models.", "raw_info": "COMPSCI  590\nCS 590.01 on Generative Models will be offered in Fall 2023, and taught by Bhuwan Dhingra, Assistant Professor of Computer Science. Generative Models is a special topics course, so it will not be offered every year.\n"}
{"question": "In which semester is COMPSCI 590.01 on Generative Models scheduled to be offered?", "answer": "COMPSCI 590.01 on Generative Models is scheduled to be offered in Fall 2023.", "raw_info": "COMPSCI  590\nCS 590.01 on Generative Models will be offered in Fall 2023, and taught by Bhuwan Dhingra, Assistant Professor of Computer Science. Generative Models is a special topics course, so it will not be offered every year.\n"}
{"question": "What are the prerequisites for enrolling in COMPSCI 527?", "answer": "The prerequisites for COMPSCI 527 include Mathematics 221, 218 or 216; Mathematics 212; Mathematics 230 or Statistical Science 230; Computer Science 101; Computer Science 230.", "raw_info": "COMPSCI  527\nImage formation and analysis; feature computation and tracking; image, object, and activity recognition and retrieval; 3D reconstruction from images. Prerequisites: Mathematics 221, 218 or 216; Mathematics 212; Mathematics 230 or Statistical Science 230; Computer Science 101; Computer Science 230.\n"}
{"question": "Does COMPSCI 527 cover 3D reconstruction from images?", "answer": "Yes, 3D reconstruction from images is one of the topics covered in COMPSCI 527.", "raw_info": "COMPSCI  527\nImage formation and analysis; feature computation and tracking; image, object, and activity recognition and retrieval; 3D reconstruction from images. Prerequisites: Mathematics 221, 218 or 216; Mathematics 212; Mathematics 230 or Statistical Science 230; Computer Science 101; Computer Science 230.\n"}
{"question": "What topics are included in the COMPSCI 527 curriculum related to image analysis?", "answer": "The COMPSCI 527 curriculum includes image formation and analysis, feature computation and tracking, and image, object, and activity recognition and retrieval.", "raw_info": "COMPSCI  527\nImage formation and analysis; feature computation and tracking; image, object, and activity recognition and retrieval; 3D reconstruction from images. Prerequisites: Mathematics 221, 218 or 216; Mathematics 212; Mathematics 230 or Statistical Science 230; Computer Science 101; Computer Science 230.\n"}
{"question": "Can I enroll in COMPSCI 527 if I have completed Computer Science 101?", "answer": "Yes, Computer Science 101 is one of the prerequisites for COMPSCI 527, so you can enroll if you have completed it along with the other required courses.", "raw_info": "COMPSCI  527\nImage formation and analysis; feature computation and tracking; image, object, and activity recognition and retrieval; 3D reconstruction from images. Prerequisites: Mathematics 221, 218 or 216; Mathematics 212; Mathematics 230 or Statistical Science 230; Computer Science 101; Computer Science 230.\n"}
{"question": "What topics are covered in COMPSCI 344 regarding color in computer graphics?", "answer": "COMPSCI 344 covers achromatic light, color specification, colorimetry, and different color models in computer graphics.", "raw_info": "COMPSCI  344\nOverview, motivation, and history; Graphic software and APIs; coordinate systems and geometric transforms; drawing routines, antialiasing, supersampling; 3d object representation, spatial data structures, constructive solid geometry; hidden-surface-removal algorithms, z-buffer, A-buffer; illumination and shading models, surface details, radiosity; achromatic light, color specification, colorimetry, different color models; graphics pipeline; animation, levels of detail. Prerequisites: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What prerequisite course is required to enroll in COMPSCI 344?", "answer": "The prerequisite course required to enroll in COMPSCI 344 is Computer Science 201 or an equivalent course.", "raw_info": "COMPSCI  344\nOverview, motivation, and history; Graphic software and APIs; coordinate systems and geometric transforms; drawing routines, antialiasing, supersampling; 3d object representation, spatial data structures, constructive solid geometry; hidden-surface-removal algorithms, z-buffer, A-buffer; illumination and shading models, surface details, radiosity; achromatic light, color specification, colorimetry, different color models; graphics pipeline; animation, levels of detail. Prerequisites: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "If I'm interested in learning about 3D object representation and spatial data structures, should I take COMPSCI 344?", "answer": "Yes, COMPSCI 344 covers topics such as 3D object representation and spatial data structures.", "raw_info": "COMPSCI  344\nOverview, motivation, and history; Graphic software and APIs; coordinate systems and geometric transforms; drawing routines, antialiasing, supersampling; 3d object representation, spatial data structures, constructive solid geometry; hidden-surface-removal algorithms, z-buffer, A-buffer; illumination and shading models, surface details, radiosity; achromatic light, color specification, colorimetry, different color models; graphics pipeline; animation, levels of detail. Prerequisites: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Does COMPSCI 344 include content on illumination and shading models?", "answer": "Yes, COMPSCI 344 includes content on illumination and shading models.", "raw_info": "COMPSCI  344\nOverview, motivation, and history; Graphic software and APIs; coordinate systems and geometric transforms; drawing routines, antialiasing, supersampling; 3d object representation, spatial data structures, constructive solid geometry; hidden-surface-removal algorithms, z-buffer, A-buffer; illumination and shading models, surface details, radiosity; achromatic light, color specification, colorimetry, different color models; graphics pipeline; animation, levels of detail. Prerequisites: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "Who can enroll in COMPSCI 344 if they haven't taken Computer Science 201?", "answer": "Students who have taken an equivalent course to Computer Science 201 can enroll in COMPSCI 344.", "raw_info": "COMPSCI  344\nOverview, motivation, and history; Graphic software and APIs; coordinate systems and geometric transforms; drawing routines, antialiasing, supersampling; 3d object representation, spatial data structures, constructive solid geometry; hidden-surface-removal algorithms, z-buffer, A-buffer; illumination and shading models, surface details, radiosity; achromatic light, color specification, colorimetry, different color models; graphics pipeline; animation, levels of detail. Prerequisites: Computer Science 201.\nPrerequisites\nPrerequisite: Computer Science 201 or equivalent\n"}
{"question": "What is required to enroll in COMPSCI 394?", "answer": "To enroll in COMPSCI 394, you need the consent of the instructor and the director of undergraduate studies.", "raw_info": "COMPSCI  394\nSee Computer Science 393. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Does COMPSCI 394 require department consent for enrollment?", "answer": "Yes, COMPSCI 394 requires department consent for enrollment.", "raw_info": "COMPSCI  394\nSee Computer Science 393. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Do I need to see any other course when considering COMPSCI 394?", "answer": "Yes, you should see Computer Science 393 when considering COMPSCI 394.", "raw_info": "COMPSCI  394\nSee Computer Science 393. Consent of instructor and director of undergraduate studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What is the course number for Special Individual Readings in a specified area of study in computer science?", "answer": "The course number is COMPSCI 891.", "raw_info": "COMPSCI  891\nSpecial individual readings in a specified area of study in computer science. Approval of Director of Graduate Studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Does COMPSCI 891 require any special consent to enroll?", "answer": "Yes, COMPSCI 891 requires department consent to enroll.", "raw_info": "COMPSCI  891\nSpecial individual readings in a specified area of study in computer science. Approval of Director of Graduate Studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Who needs to approve your enrollment in COMPSCI 891?", "answer": "The Director of Graduate Studies must approve your enrollment in COMPSCI 891.", "raw_info": "COMPSCI  891\nSpecial individual readings in a specified area of study in computer science. Approval of Director of Graduate Studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "Is department consent sufficient for enrolling in COMPSCI 891?", "answer": "Yes, department consent is required in order to enroll in COMPSCI 891.", "raw_info": "COMPSCI  891\nSpecial individual readings in a specified area of study in computer science. Approval of Director of Graduate Studies required.\nEnroll Consent\nDepartment Consent Required\n"}
{"question": "What is the course number of the class that explores human flourishing in the digital age?", "answer": "The course number is COMPSCI 247S.", "raw_info": "COMPSCI  247S\nThe digital age has enhanced human life in many ways: communication is faster, medicine is better, and our knowledge of the world is deeper. But it has also changed the nature of work, society, and our sense of well-being, and raised fundamental questions about the meaning and purpose of human life. This course asks what it means for humans to flourish in a digital age. It considers how new technologies through the centuries have impacted human flourishing, making certain aspects easier and others harder, and perhaps even altering our conception of what flourishing looks like. Our ultimate goal is to ponder together how we should practically live in today's digital age. For sophomores only.\nPrerequisites\nReserved for sophomores\n"}
{"question": "In COMPSCI 247S, what central question does the course aim to explore?", "answer": "COMPSCI 247S aims to explore what it means for humans to flourish in a digital age.", "raw_info": "COMPSCI  247S\nThe digital age has enhanced human life in many ways: communication is faster, medicine is better, and our knowledge of the world is deeper. But it has also changed the nature of work, society, and our sense of well-being, and raised fundamental questions about the meaning and purpose of human life. This course asks what it means for humans to flourish in a digital age. It considers how new technologies through the centuries have impacted human flourishing, making certain aspects easier and others harder, and perhaps even altering our conception of what flourishing looks like. Our ultimate goal is to ponder together how we should practically live in today's digital age. For sophomores only.\nPrerequisites\nReserved for sophomores\n"}
{"question": "Who is eligible to enroll in COMPSCI 247S?", "answer": "COMPSCI 247S is reserved for sophomores only.", "raw_info": "COMPSCI  247S\nThe digital age has enhanced human life in many ways: communication is faster, medicine is better, and our knowledge of the world is deeper. But it has also changed the nature of work, society, and our sense of well-being, and raised fundamental questions about the meaning and purpose of human life. This course asks what it means for humans to flourish in a digital age. It considers how new technologies through the centuries have impacted human flourishing, making certain aspects easier and others harder, and perhaps even altering our conception of what flourishing looks like. Our ultimate goal is to ponder together how we should practically live in today's digital age. For sophomores only.\nPrerequisites\nReserved for sophomores\n"}
{"question": "Does COMPSCI 247S have any prerequisites?", "answer": "Yes, the prerequisite for COMPSCI 247S is that it is reserved for sophomores.", "raw_info": "COMPSCI  247S\nThe digital age has enhanced human life in many ways: communication is faster, medicine is better, and our knowledge of the world is deeper. But it has also changed the nature of work, society, and our sense of well-being, and raised fundamental questions about the meaning and purpose of human life. This course asks what it means for humans to flourish in a digital age. It considers how new technologies through the centuries have impacted human flourishing, making certain aspects easier and others harder, and perhaps even altering our conception of what flourishing looks like. Our ultimate goal is to ponder together how we should practically live in today's digital age. For sophomores only.\nPrerequisites\nReserved for sophomores\n"}
{"question": "What topics are considered in COMPSCI 247S regarding the impact of digital technologies?", "answer": "COMPSCI 247S considers how new technologies have impacted human flourishing, making some aspects easier, others harder, and potentially altering our conception of what flourishing looks like.", "raw_info": "COMPSCI  247S\nThe digital age has enhanced human life in many ways: communication is faster, medicine is better, and our knowledge of the world is deeper. But it has also changed the nature of work, society, and our sense of well-being, and raised fundamental questions about the meaning and purpose of human life. This course asks what it means for humans to flourish in a digital age. It considers how new technologies through the centuries have impacted human flourishing, making certain aspects easier and others harder, and perhaps even altering our conception of what flourishing looks like. Our ultimate goal is to ponder together how we should practically live in today's digital age. For sophomores only.\nPrerequisites\nReserved for sophomores\n"}
